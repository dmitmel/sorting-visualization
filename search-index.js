var searchIndex = JSON.parse('{\
"adler32":{"doc":"A minimal implementation of Adler32 for Rust.","t":[3,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11],"n":["RollingAdler32","new","from_value","from_buffer","hash","remove","update","update_buffer","adler32","from","into","try_from","borrow","borrow_mut","try_into","type_id","default"],"q":["adler32","","","","","","","","","","","","","","","",""],"d":["A rolling version of the Adler32 hash, which can ‘forget…","Creates an empty Adler32 context (with hash 1).","Creates an Adler32 context with the given initial value.","Convenience function initializing a context from the hash …","Returns the current hash.","Removes the given <code>byte</code> that was fed to the algorithm <code>size</code> …","Feeds a new <code>byte</code> to the algorithm to update the hash.","Feeds a vector of bytes to the algorithm to update the …","Consume a Read object and returns the Adler32 hash.","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1],"f":[null,[[],["rollingadler32",3]],[[["u32",15]],["rollingadler32",3]],[[],["rollingadler32",3]],[[],["u32",15]],[[["usize",15],["u8",15]]],[[["u8",15]]],[[]],[[["read",8]],[["result",6],["u32",15]]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["rollingadler32",3]]],"p":[[3,"RollingAdler32"]]},\
"ansi_term":{"doc":"This is a library for controlling colours and formatting, …","t":[3,3,3,4,13,13,13,13,13,13,13,13,13,13,3,12,12,12,12,12,12,12,12,12,12,4,13,13,13,13,13,13,13,13,13,13,3,6,6,3,12,6,5,6,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Prefix","Infix","Suffix","Colour","Black","Red","Green","Yellow","Blue","Purple","Cyan","White","Fixed","RGB","Style","foreground","background","is_bold","is_dimmed","is_italic","is_underline","is_blink","is_reverse","is_hidden","is_strikethrough","Color","Black","Red","Green","Yellow","Blue","Purple","Cyan","White","Fixed","RGB","ANSIGenericString","ANSIString","ANSIByteString","ANSIGenericStrings","0","ANSIStrings","ANSIStrings","ANSIByteStrings","ANSIByteStrings","from","into","to_owned","clone_into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","from","clone","clone","clone","clone","clone","clone","default","eq","ne","eq","ne","eq","ne","deref","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","prefix","infix","suffix","prefix","infix","suffix","new","bold","dimmed","italic","underline","blink","reverse","hidden","strikethrough","fg","on","is_plain","normal","bold","dimmed","italic","underline","blink","reverse","hidden","strikethrough","on","paint","paint","write_to","write_to","write_to","write_to"],"q":["ansi_termd":["Like <code>ANSIString</code>, but only displays the style prefix.","Like <code>ANSIString</code>, but only displays the difference between …","Like <code>ANSIString</code>, but only displays the style suffix.","A colour is one specific type of ANSI escape code, and …","Colour #0 (foreground code <code>30</code>, background code <code>40</code>).","Colour #1 (foreground code <code>31</code>, background code <code>41</code>).","Colour #2 (foreground code <code>32</code>, background code <code>42</code>).","Colour #3 (foreground code <code>33</code>, background code <code>43</code>).","Colour #4 (foreground code <code>34</code>, background code <code>44</code>).","Colour #5 (foreground code <code>35</code>, background code <code>45</code>).","Colour #6 (foreground code <code>36</code>, background code <code>46</code>).","Colour #7 (foreground code <code>37</code>, background code <code>47</code>).","A colour number from 0 to 255, for use in 256-colour …","A 24-bit RGB color, as specified by ISO-8613-3.","A style is a collection of properties that can format a …","The style’s foreground colour, if it has one.","The style’s background colour, if it has one.","Whether this style is bold.","Whether this style is dimmed.","Whether this style is italic.","Whether this style is underlined.","Whether this style is blinking.","Whether this style has reverse colours.","Whether this style is hidden.","Whether this style is struckthrough.","A colour is one specific type of ANSI escape code, and …","Colour #0 (foreground code <code>30</code>, background code <code>40</code>).","Colour #1 (foreground code <code>31</code>, background code <code>41</code>).","Colour #2 (foreground code <code>32</code>, background code <code>42</code>).","Colour #3 (foreground code <code>33</code>, background code <code>43</code>).","Colour #4 (foreground code <code>34</code>, background code <code>44</code>).","Colour #5 (foreground code <code>35</code>, background code <code>45</code>).","Colour #6 (foreground code <code>36</code>, background code <code>46</code>).","Colour #7 (foreground code <code>37</code>, background code <code>47</code>).","A colour number from 0 to 255, for use in 256-colour …","A 24-bit RGB color, as specified by ISO-8613-3.","An <code>ANSIGenericString</code> includes a generic string type and a …","An ANSI String is a string coupled with the <code>Style</code> to …","An <code>ANSIByteString</code> represents a formatted series of bytes. …","A set of <code>ANSIGenericString</code>s collected together, in order …","","A set of <code>ANSIString</code>s collected together, in order to be …","A function to construct an <code>ANSIStrings</code> instance.","A set of <code>ANSIByteString</code>s collected together, in order to …","A function to construct an <code>ANSIByteStrings</code> instance.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","You can turn a <code>Colour</code> into a <code>Style</code> with the foreground …","","","","","","","","Returns a style with <em>no</em> properties set. Formatting text …","","","","","","","","","","","","","","","","","","","The prefix for this style.","The infix between this style and another.","The suffix for this style.","The prefix for this colour.","The infix between this colour and another.","The suffix for this colour.","Creates a new Style with no differences.","Returns a <code>Style</code> with the bold property set.","Returns a <code>Style</code> with the dimmed property set.","Returns a <code>Style</code> with the italic property set.","Returns a <code>Style</code> with the underline property set.","Returns a <code>Style</code> with the blink property set.","Returns a <code>Style</code> with the reverse property set.","Returns a <code>Style</code> with the hidden property set.","Returns a <code>Style</code> with the hidden property set.","Returns a <code>Style</code> with the foreground colour property set.","Returns a <code>Style</code> with the background colour property set.","Return true if this <code>Style</code> has no actual styles, and can …","Return a <code>Style</code> with the foreground colour set to this …","Returns a <code>Style</code> with the bold property set.","Returns a <code>Style</code> with the dimmed property set.","Returns a <code>Style</code> with the italic property set.","Returns a <code>Style</code> with the underline property set.","Returns a <code>Style</code> with the blink property set.","Returns a <code>Style</code> with the reverse property set.","Returns a <code>Style</code> with the hidden property set.","Returns a <code>Style</code> with the strikethrough property set.","Returns a <code>Style</code> with the background colour property set.","Paints the given text with this colour, returning an ANSI …","Paints the given text with this colour, returning an ANSI …","Write an <code>ANSIByteString</code> to an <code>io::Write</code>.  This writes the …","Write an <code>ANSIByteString</code> to an <code>io::Write</code>.  This writes the …","Write <code>ANSIByteStrings</code> to an <code>io::Write</code>.  This writes the …","Write <code>ANSIByteStrings</code> to an <code>io::Write</code>.  This writes the …"],"i":[0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,2,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,3,0,0,0,0,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,7,7,7,7,7,7,7,7,7,7,3,3,3,3,3,3,3,3,2,7,4,5,6,2,1,7,2,2,2,1,1,7,7,7,4,5,6,1,7,2,4,5,6,8,9,2,2,2,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,2,1,7,10,3,11],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["ansistrings",6]],null,[[],["ansibytestrings",6]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["colour",4]],["style",3]],[[],["ansigenericstring",3]],[[],["prefix",3]],[[],["infix",3]],[[],["suffix",3]],[[],["style",3]],[[],["colour",4]],[[],["ansigenericstring",3]],[[],["style",3]],[[["style",3]],["bool",15]],[[["style",3]],["bool",15]],[[["colour",4]],["bool",15]],[[["colour",4]],["bool",15]],[[["ansigenericstring",3]],["bool",15]],[[["ansigenericstring",3]],["bool",15]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["prefix",3]],[[["style",3]],["infix",3]],[[],["suffix",3]],[[],["prefix",3]],[[["colour",4]],["infix",3]],[[],["suffix",3]],[[],["style",3]],[[],["style",3]],[[],["style",3]],[[],["style",3]],[[],["style",3]],[[],["style",3]],[[],["style",3]],[[],["style",3]],[[],["style",3]],[[["colour",4]],["style",3]],[[["colour",4]],["style",3]],[[],["bool",15]],[[],["style",3]],[[],["style",3]],[[],["style",3]],[[],["style",3]],[[],["style",3]],[[],["style",3]],[[],["style",3]],[[],["style",3]],[[],["style",3]],[[["colour",4]],["style",3]],[[],[["ansigenericstring",3],["sized",8],["toowned",8]]],[[],[["ansigenericstring",3],["sized",8],["toowned",8]]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]]],"p":[[4,"Colour"],[3,"Style"],[3,"ANSIGenericStrings"],[3,"Prefix"],[3,"Infix"],[3,"Suffix"],[3,"ANSIGenericString"],[6,"ANSIString"],[6,"ANSIStrings"],[6,"ANSIByteString"],[6,"ANSIByteStrings"]]},\
"atty":{"doc":"atty is a simple utility that answers one question","t":[4,13,13,13,5,5,11,11,11,11,11,11,11,11,11],"n":["Stream","Stdout","Stderr","Stdin","is","isnt","try_from","borrow","borrow_mut","from","into","try_into","type_id","fmt","clone"],"q":["atty","","","","","","","","","","","","","",""],"d":["possible stream sources","","","","returns true if this is a tty","returns true if this is <em>not</em> a tty","","","","","","","","",""],"i":[0,1,1,1,0,0,1,1,1,1,1,1,1,1,1],"f":[null,null,null,null,[[["stream",4]],["bool",15]],[[["stream",4]],["bool",15]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],["result",6]],[[],["stream",4]]],"p":[[4,"Stream"]]},\
"backtrace":{"doc":"A library for acquiring a backtrace at runtime","t":[5,3,5,5,3,3,4,13,13,5,3,3,4,13,13,5,5,5,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["trace_unsynchronized","Frame","resolve_frame_unsynchronized","resolve_unsynchronized","Symbol","SymbolName","BytesOrWideString","Bytes","Wide","clear_symbol_cache","BacktraceFmt","BacktraceFrameFmt","PrintFmt","Short","Full","trace","resolve","resolve_frame","Backtrace","BacktraceFrame","BacktraceSymbol","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_string","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_string","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","eq","drop","from","into","clone","clone","clone","clone","clone","default","ip","symbol_address","name","addr","filename_raw","lineno","filename","new","as_str","as_bytes","to_str_lossy","into_path_buf","new","add_context","frame","finish","backtrace_frame","backtrace_symbol","symbol","print_raw","new","new_unresolved","frames","resolve","ip","symbol_address","symbols","name","addr","filename","lineno"],"q":["backtrace","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Same as <code>trace</code>, only unsafe as it’s unsynchronized.","A trait representing one frame of a backtrace, yielded to …","Same as <code>resolve_frame</code>, only unsafe as it’s …","Same as <code>resolve</code>, only unsafe as it’s unsynchronized.","A trait representing the resolution of a symbol in a file.","A wrapper around a symbol name to provide ergonomic …","A platform independent representation of a string. When …","A slice, typically provided on Unix platforms.","Wide strings typically from Windows.","Attempt to reclaim that cached memory used to symbolicate …","A formatter for backtraces.","A formatter for just one frame of a backtrace.","The styles of printing that we can print","Prints a terser backtrace which ideally only contains …","Prints a backtrace that contains all possible information","Inspects the current call-stack, passing all active …","Resolve an address to a symbol, passing the symbol to the …","Resolve a previously capture frame to a symbol, passing …","Representation of an owned and self-contained backtrace.","Captured version of a frame in a backtrace.","Captured version of a symbol in a backtrace.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the current instruction pointer of this frame.","Returns the starting symbol address of the frame of this …","Returns the name of this function.","Returns the starting address of this function.","Returns the raw filename as a slice. This is mainly …","Returns the line number for where this symbol is …","Returns the file name where this function was defined.","Creates a new symbol name from the raw underlying bytes.","Returns the raw (mangled) symbol name as a <code>str</code> if the …","Returns the raw symbol name as a list of bytes","Lossy converts to a <code>Cow<str></code>, will allocate if <code>Bytes</code> is …","Provides a <code>Path</code> representation of <code>BytesOrWideString</code>.","Create a new <code>BacktraceFmt</code> which will write output to the …","Prints a preamble for the backtrace about to be printed.","Adds a frame to the backtrace output.","Completes the backtrace output.","Prints a <code>BacktraceFrame</code> with this frame formatter.","Prints a <code>BacktraceSymbol</code> within a <code>BacktraceFrame</code>.","Prints a raw traced <code>Frame</code> and <code>Symbol</code>, typically from …","Adds a raw frame to the backtrace output.","Captures a backtrace at the callsite of this function, …","Similar to <code>new</code> except that this does not resolve any …","Returns the frames from when this backtrace was captured.","If this backtrace was created from <code>new_unresolved</code> then …","Same as <code>Frame::ip</code>","Same as <code>Frame::symbol_address</code>","Returns the list of symbols that this frame corresponds …","Same as <code>Symbol::name</code>","Same as <code>Symbol::addr</code>","Same as <code>Symbol::filename</code>","Same as <code>Symbol::lineno</code>"],"i":[0,0,0,0,0,0,0,1,1,0,0,0,0,2,2,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,1,1,1,1,1,1,1,1,6,6,6,6,6,6,6,2,2,2,2,2,2,2,2,2,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,3,4,5,1,8,9,10,5,1,2,7,8,8,3,2,8,9,10,8,3,3,4,4,4,4,4,5,5,5,1,1,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,10,10,10,10],"f":[[[["fnmut",8]]],null,[[["frame",3]]],[[]],null,null,null,null,null,[[]],null,null,null,null,null,[[["fnmut",8]]],[[["fnmut",8]]],[[["frame",3],["fnmut",8]]],null,null,null,[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["printfmt",4]],["bool",15]],[[]],[[["vec",3],["backtraceframe",3]]],[[],[["backtraceframe",3],["vec",3]]],[[],["frame",3]],[[],["printfmt",4]],[[],["backtrace",3]],[[],["backtraceframe",3]],[[],["backtracesymbol",3]],[[],["backtrace",3]],[[]],[[]],[[],[["option",4],["symbolname",3]]],[[],["option",4]],[[],[["bytesorwidestring",4],["option",4]]],[[],[["u32",15],["option",4]]],[[],[["option",4],["path",3]]],[[],["symbolname",3]],[[],[["str",15],["option",4]]],[[]],[[],[["cow",4],["str",15]]],[[],["pathbuf",3]],[[["fnmut",8],["printfmt",4],["formatter",3]]],[[],["result",6]],[[],["backtraceframefmt",3]],[[],["result",6]],[[["backtraceframe",3]],["result",6]],[[["backtraceframe",3],["backtracesymbol",3]],["result",6]],[[["symbol",3],["frame",3]],["result",6]],[[["symbolname",3],["u32",15],["bytesorwidestring",4],["option",4],["option",4],["option",4]],["result",6]],[[],["backtrace",3]],[[],["backtrace",3]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4],["symbolname",3]]],[[],["option",4]],[[],[["option",4],["path",3]]],[[],[["u32",15],["option",4]]]],"p":[[4,"BytesOrWideString"],[4,"PrintFmt"],[3,"Frame"],[3,"Symbol"],[3,"SymbolName"],[3,"BacktraceFmt"],[3,"BacktraceFrameFmt"],[3,"Backtrace"],[3,"BacktraceFrame"],[3,"BacktraceSymbol"]]},\
"backtrace_sys":{"doc":"","t":[5,5,5,6,6,6,4,11,11,11,11,11,11,11],"n":["backtrace_create_state","backtrace_syminfo","backtrace_pcinfo","backtrace_syminfo_callback","backtrace_full_callback","backtrace_error_callback","backtrace_state","try_from","borrow","borrow_mut","from","into","try_into","type_id"],"q":["backtrace_sys","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,1,1,1,1,1,1],"f":[null,null,null,null,null,null,null,[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]]],"p":[[4,"backtrace_state"]]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of …","t":[14],"n":["bitflags"],"q":["bitflags"],"d":["The macro used to generate the flag structure."],"i":[0],"f":[null],"p":[]},\
"byteorder":{"doc":"This crate provides convenience methods for encoding and …","t":[8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10,11,10,11,10,10,10,10,10,11,10,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,10,10,4,6,4,6,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ReadBytesExt","read_u8","read_i8","read_u16","read_i16","read_u24","read_i24","read_u32","read_i32","read_u48","read_i48","read_u64","read_i64","read_u128","read_i128","read_uint","read_int","read_uint128","read_int128","read_f32","read_f64","read_u16_into","read_u32_into","read_u64_into","read_u128_into","read_i8_into","read_i16_into","read_i32_into","read_i64_into","read_i128_into","read_f32_into","read_f32_into_unchecked","read_f64_into","read_f64_into_unchecked","WriteBytesExt","write_u8","write_i8","write_u16","write_i16","write_u24","write_i24","write_u32","write_i32","write_u48","write_i48","write_u64","write_i64","write_u128","write_i128","write_uint","write_int","write_uint128","write_int128","write_f32","write_f64","ByteOrder","read_u16","read_u24","read_u32","read_u48","read_u64","read_u128","read_uint","read_uint128","write_u16","write_u24","write_u32","write_u48","write_u64","write_u128","write_uint","write_uint128","read_i16","read_i24","read_i32","read_i48","read_i64","read_i128","read_int","read_int128","read_f32","read_f64","write_i16","write_i24","write_i32","write_i48","write_i64","write_i128","write_int","write_int128","write_f32","write_f64","read_u16_into","read_u32_into","read_u64_into","read_u128_into","read_i16_into","read_i32_into","read_i64_into","read_i128_into","read_f32_into","read_f32_into_unchecked","read_f64_into","read_f64_into_unchecked","write_u16_into","write_u32_into","write_u64_into","write_u128_into","write_i8_into","write_i16_into","write_i32_into","write_i64_into","write_i128_into","write_f32_into","write_f64_into","from_slice_u16","from_slice_u32","from_slice_u64","from_slice_u128","from_slice_i16","from_slice_i32","from_slice_i64","from_slice_i128","from_slice_f32","from_slice_f64","BigEndian","BE","LittleEndian","LE","NetworkEndian","NativeEndian","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","read_u16","read_u32","read_u64","read_u128","read_uint","read_uint128","write_u16","write_u32","write_u64","write_u128","write_uint","write_uint128","read_u16_into","read_u32_into","read_u64_into","read_u128_into","write_u16_into","write_u32_into","write_u64_into","write_u128_into","from_slice_u16","from_slice_u32","from_slice_u64","from_slice_u128","from_slice_f32","from_slice_f64","read_u16","read_u32","read_u64","read_u128","read_uint","read_uint128","write_u16","write_u32","write_u64","write_u128","write_uint","write_uint128","read_u16_into","read_u32_into","read_u64_into","read_u128_into","write_u16_into","write_u32_into","write_u64_into","write_u128_into","from_slice_u16","from_slice_u32","from_slice_u64","from_slice_u128","from_slice_f32","from_slice_f64","clone","clone","default","default","cmp","cmp","eq","eq","partial_cmp","partial_cmp","fmt","fmt","hash","hash","read_u8","read_i8","read_u16","read_i16","read_u24","read_i24","read_u32","read_i32","read_u48","read_i48","read_u64","read_i64","read_u128","read_i128","read_uint","read_int","read_uint128","read_int128","read_f32","read_f64","read_u16_into","read_u32_into","read_u64_into","read_u128_into","read_i8_into","read_i16_into","read_i32_into","read_i64_into","read_i128_into","read_f32_into","read_f32_into_unchecked","read_f64_into","read_f64_into_unchecked","write_u8","write_i8","write_u16","write_i16","write_u24","write_i24","write_u32","write_i32","write_u48","write_i48","write_u64","write_i64","write_u128","write_i128","write_uint","write_int","write_uint128","write_int128","write_f32","write_f64"],"q":["byteorderd":["Extends <code>Read</code> with methods for reading numbers. (For …","Reads an unsigned 8 bit integer from the underlying …","Reads a signed 8 bit integer from the underlying reader.","Reads an unsigned 16 bit integer from the underlying …","Reads a signed 16 bit integer from the underlying reader.","Reads an unsigned 24 bit integer from the underlying …","Reads a signed 24 bit integer from the underlying reader.","Reads an unsigned 32 bit integer from the underlying …","Reads a signed 32 bit integer from the underlying reader.","Reads an unsigned 48 bit integer from the underlying …","Reads a signed 48 bit integer from the underlying reader.","Reads an unsigned 64 bit integer from the underlying …","Reads a signed 64 bit integer from the underlying reader.","Reads an unsigned 128 bit integer from the underlying …","Reads a signed 128 bit integer from the underlying reader.","Reads an unsigned n-bytes integer from the underlying …","Reads a signed n-bytes integer from the underlying reader.","Reads an unsigned n-bytes integer from the underlying …","Reads a signed n-bytes integer from the underlying reader.","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads a sequence of unsigned 16 bit integers from the …","Reads a sequence of unsigned 32 bit integers from the …","Reads a sequence of unsigned 64 bit integers from the …","Reads a sequence of unsigned 128 bit integers from the …","Reads a sequence of signed 8 bit integers from the …","Reads a sequence of signed 16 bit integers from the …","Reads a sequence of signed 32 bit integers from the …","Reads a sequence of signed 64 bit integers from the …","Reads a sequence of signed 128 bit integers from the …","Reads a sequence of IEEE754 single-precision (4 bytes) …","<strong>DEPRECATED</strong>.","Reads a sequence of IEEE754 double-precision (8 bytes) …","<strong>DEPRECATED</strong>.","Extends <code>Write</code> with methods for writing numbers. (For …","Writes an unsigned 8 bit integer to the underlying writer.","Writes a signed 8 bit integer to the underlying writer.","Writes an unsigned 16 bit integer to the underlying …","Writes a signed 16 bit integer to the underlying writer.","Writes an unsigned 24 bit integer to the underlying …","Writes a signed 24 bit integer to the underlying writer.","Writes an unsigned 32 bit integer to the underlying …","Writes a signed 32 bit integer to the underlying writer.","Writes an unsigned 48 bit integer to the underlying …","Writes a signed 48 bit integer to the underlying writer.","Writes an unsigned 64 bit integer to the underlying …","Writes a signed 64 bit integer to the underlying writer.","Writes an unsigned 128 bit integer to the underlying …","Writes a signed 128 bit integer to the underlying writer.","Writes an unsigned n-bytes integer to the underlying …","Writes a signed n-bytes integer to the underlying writer.","Writes an unsigned n-bytes integer to the underlying …","Writes a signed n-bytes integer to the underlying writer.","Writes a IEEE754 single-precision (4 bytes) floating …","Writes a IEEE754 double-precision (8 bytes) floating …","<code>ByteOrder</code> describes types that can serialize integers as …","Reads an unsigned 16 bit integer from <code>buf</code>.","Reads an unsigned 24 bit integer from <code>buf</code>, stored in u32.","Reads an unsigned 32 bit integer from <code>buf</code>.","Reads an unsigned 48 bit integer from <code>buf</code>, stored in u64.","Reads an unsigned 64 bit integer from <code>buf</code>.","Reads an unsigned 128 bit integer from <code>buf</code>.","Reads an unsigned n-bytes integer from <code>buf</code>.","Reads an unsigned n-bytes integer from <code>buf</code>.","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 24 bit integer <code>n</code> to <code>buf</code>, stored in u32.","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 48 bit integer <code>n</code> to <code>buf</code>, stored in u64.","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 128 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Reads a signed 16 bit integer from <code>buf</code>.","Reads a signed 24 bit integer from <code>buf</code>, stored in i32.","Reads a signed 32 bit integer from <code>buf</code>.","Reads a signed 48 bit integer from <code>buf</code>, stored in i64.","Reads a signed 64 bit integer from <code>buf</code>.","Reads a signed 128 bit integer from <code>buf</code>.","Reads a signed n-bytes integer from <code>buf</code>.","Reads a signed n-bytes integer from <code>buf</code>.","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads a IEEE754 double-precision (8 bytes) floating point …","Writes a signed 16 bit integer <code>n</code> to <code>buf</code>.","Writes a signed 24 bit integer <code>n</code> to <code>buf</code>, stored in i32.","Writes a signed 32 bit integer <code>n</code> to <code>buf</code>.","Writes a signed 48 bit integer <code>n</code> to <code>buf</code>, stored in i64.","Writes a signed 64 bit integer <code>n</code> to <code>buf</code>.","Writes a signed 128 bit integer <code>n</code> to <code>buf</code>.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes a IEEE754 single-precision (4 bytes) floating …","Writes a IEEE754 double-precision (8 bytes) floating …","Reads unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","Reads unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","Reads signed 16 bit integers from <code>src</code> to <code>dst</code>.","Reads signed 32 bit integers from <code>src</code> into <code>dst</code>.","Reads signed 64 bit integers from <code>src</code> into <code>dst</code>.","Reads signed 128 bit integers from <code>src</code> into <code>dst</code>.","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","Writes unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","Writes unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","Writes unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","Writes unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","Writes signed 8 bit integers from <code>src</code> into <code>dst</code>.","Writes signed 16 bit integers from <code>src</code> into <code>dst</code>.","Writes signed 32 bit integers from <code>src</code> into <code>dst</code>.","Writes signed 64 bit integers from <code>src</code> into <code>dst</code>.","Writes signed 128 bit integers from <code>src</code> into <code>dst</code>.","Writes IEEE754 single-precision (4 bytes) floating point …","Writes IEEE754 double-precision (8 bytes) floating point …","Converts the given slice of unsigned 16 bit integers to a …","Converts the given slice of unsigned 32 bit integers to a …","Converts the given slice of unsigned 64 bit integers to a …","Converts the given slice of unsigned 128 bit integers to …","Converts the given slice of signed 16 bit integers to a …","Converts the given slice of signed 32 bit integers to a …","Converts the given slice of signed 64 bit integers to a …","Converts the given slice of signed 128 bit integers to a …","Converts the given slice of IEEE754 single-precision (4 …","Converts the given slice of IEEE754 double-precision (8 …","Defines big-endian serialization.","A type alias for <code>BigEndian</code>.","Defines little-endian serialization.","A type alias for <code>LittleEndian</code>.","Defines network byte order serialization.","Defines system native-endian serialization.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Reads an unsigned 8 bit integer from the underlying …","Reads a signed 8 bit integer from the underlying reader.","Reads an unsigned 16 bit integer from the underlying …","Reads a signed 16 bit integer from the underlying reader.","Reads an unsigned 24 bit integer from the underlying …","Reads a signed 24 bit integer from the underlying reader.","Reads an unsigned 32 bit integer from the underlying …","Reads a signed 32 bit integer from the underlying reader.","Reads an unsigned 48 bit integer from the underlying …","Reads a signed 48 bit integer from the underlying reader.","Reads an unsigned 64 bit integer from the underlying …","Reads a signed 64 bit integer from the underlying reader.","Reads an unsigned 128 bit integer from the underlying …","Reads a signed 128 bit integer from the underlying reader.","Reads an unsigned n-bytes integer from the underlying …","Reads a signed n-bytes integer from the underlying reader.","Reads an unsigned n-bytes integer from the underlying …","Reads a signed n-bytes integer from the underlying reader.","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads a sequence of unsigned 16 bit integers from the …","Reads a sequence of unsigned 32 bit integers from the …","Reads a sequence of unsigned 64 bit integers from the …","Reads a sequence of unsigned 128 bit integers from the …","Reads a sequence of signed 8 bit integers from the …","Reads a sequence of signed 16 bit integers from the …","Reads a sequence of signed 32 bit integers from the …","Reads a sequence of signed 64 bit integers from the …","Reads a sequence of signed 128 bit integers from the …","Reads a sequence of IEEE754 single-precision (4 bytes) …","<strong>DEPRECATED</strong>.","Reads a sequence of IEEE754 double-precision (8 bytes) …","<strong>DEPRECATED</strong>.","Writes an unsigned 8 bit integer to the underlying writer.","Writes a signed 8 bit integer to the underlying writer.","Writes an unsigned 16 bit integer to the underlying …","Writes a signed 16 bit integer to the underlying writer.","Writes an unsigned 24 bit integer to the underlying …","Writes a signed 24 bit integer to the underlying writer.","Writes an unsigned 32 bit integer to the underlying …","Writes a signed 32 bit integer to the underlying writer.","Writes an unsigned 48 bit integer to the underlying …","Writes a signed 48 bit integer to the underlying writer.","Writes an unsigned 64 bit integer to the underlying …","Writes a signed 64 bit integer to the underlying writer.","Writes an unsigned 128 bit integer to the underlying …","Writes a signed 128 bit integer to the underlying writer.","Writes an unsigned n-bytes integer to the underlying …","Writes a signed n-bytes integer to the underlying writer.","Writes an unsigned n-bytes integer to the underlying …","Writes a signed n-bytes integer to the underlying writer.","Writes a IEEE754 single-precision (4 bytes) floating …","Writes a IEEE754 double-precision (8 bytes) floating …"],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],"f":[null,[[],[["u8",15],["result",6]]],[[],[["i8",15],["result",6]]],[[],[["u16",15],["result",6]]],[[],[["result",6],["i16",15]]],[[],[["u32",15],["result",6]]],[[],[["result",6],["i32",15]]],[[],[["u32",15],["result",6]]],[[],[["result",6],["i32",15]]],[[],[["result",6],["u64",15]]],[[],[["result",6],["i64",15]]],[[],[["result",6],["u64",15]]],[[],[["result",6],["i64",15]]],[[],[["u128",15],["result",6]]],[[],[["result",6],["i128",15]]],[[["usize",15]],[["result",6],["u64",15]]],[[["usize",15]],[["result",6],["i64",15]]],[[["usize",15]],[["u128",15],["result",6]]],[[["usize",15]],[["result",6],["i128",15]]],[[],[["f32",15],["result",6]]],[[],[["f64",15],["result",6]]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],null,[[["u8",15]],["result",6]],[[["i8",15]],["result",6]],[[["u16",15]],["result",6]],[[["i16",15]],["result",6]],[[["u32",15]],["result",6]],[[["i32",15]],["result",6]],[[["u32",15]],["result",6]],[[["i32",15]],["result",6]],[[["u64",15]],["result",6]],[[["i64",15]],["result",6]],[[["u64",15]],["result",6]],[[["i64",15]],["result",6]],[[["u128",15]],["result",6]],[[["i128",15]],["result",6]],[[["usize",15],["u64",15]],["result",6]],[[["i64",15],["usize",15]],["result",6]],[[["usize",15],["u128",15]],["result",6]],[[["usize",15],["i128",15]],["result",6]],[[["f32",15]],["result",6]],[[["f64",15]],["result",6]],null,[[],["u16",15]],[[],["u32",15]],[[],["u32",15]],[[],["u64",15]],[[],["u64",15]],[[],["u128",15]],[[["usize",15]],["u64",15]],[[["usize",15]],["u128",15]],[[["u16",15]]],[[["u32",15]]],[[["u32",15]]],[[["u64",15]]],[[["u64",15]]],[[["u128",15]]],[[["usize",15],["u64",15]]],[[["usize",15],["u128",15]]],[[],["i16",15]],[[],["i32",15]],[[],["i32",15]],[[],["i64",15]],[[],["i64",15]],[[],["i128",15]],[[["usize",15]],["i64",15]],[[["usize",15]],["i128",15]],[[],["f32",15]],[[],["f64",15]],[[["i16",15]]],[[["i32",15]]],[[["i32",15]]],[[["i64",15]]],[[["i64",15]]],[[["i128",15]]],[[["i64",15],["usize",15]]],[[["usize",15],["i128",15]]],[[["f32",15]]],[[["f64",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["u16",15]],[[],["u32",15]],[[],["u64",15]],[[],["u128",15]],[[["usize",15]],["u64",15]],[[["usize",15]],["u128",15]],[[["u16",15]]],[[["u32",15]]],[[["u64",15]]],[[["u128",15]]],[[["usize",15],["u64",15]]],[[["usize",15],["u128",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u16",15]],[[],["u32",15]],[[],["u64",15]],[[],["u128",15]],[[["usize",15]],["u64",15]],[[["usize",15]],["u128",15]],[[["u16",15]]],[[["u32",15]]],[[["u64",15]]],[[["u128",15]]],[[["usize",15],["u64",15]]],[[["usize",15],["u128",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bigendian",4]],[[],["littleendian",4]],[[],["bigendian",4]],[[],["littleendian",4]],[[["bigendian",4]],["ordering",4]],[[["littleendian",4]],["ordering",4]],[[["bigendian",4]],["bool",15]],[[["littleendian",4]],["bool",15]],[[["bigendian",4]],[["ordering",4],["option",4]]],[[["littleendian",4]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],[["u8",15],["result",6]]],[[],[["i8",15],["result",6]]],[[],[["u16",15],["result",6]]],[[],[["result",6],["i16",15]]],[[],[["u32",15],["result",6]]],[[],[["result",6],["i32",15]]],[[],[["u32",15],["result",6]]],[[],[["result",6],["i32",15]]],[[],[["result",6],["u64",15]]],[[],[["result",6],["i64",15]]],[[],[["result",6],["u64",15]]],[[],[["result",6],["i64",15]]],[[],[["u128",15],["result",6]]],[[],[["result",6],["i128",15]]],[[["usize",15]],[["result",6],["u64",15]]],[[["usize",15]],[["result",6],["i64",15]]],[[["usize",15]],[["u128",15],["result",6]]],[[["usize",15]],[["result",6],["i128",15]]],[[],[["f32",15],["result",6]]],[[],[["f64",15],["result",6]]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[["u8",15]],["result",6]],[[["i8",15]],["result",6]],[[["u16",15]],["result",6]],[[["i16",15]],["result",6]],[[["u32",15]],["result",6]],[[["i32",15]],["result",6]],[[["u32",15]],["result",6]],[[["i32",15]],["result",6]],[[["u64",15]],["result",6]],[[["i64",15]],["result",6]],[[["u64",15]],["result",6]],[[["i64",15]],["result",6]],[[["u128",15]],["result",6]],[[["i128",15]],["result",6]],[[["usize",15],["u64",15]],["result",6]],[[["i64",15],["usize",15]],["result",6]],[[["usize",15],["u128",15]],["result",6]],[[["usize",15],["i128",15]],["result",6]],[[["f32",15]],["result",6]],[[["f64",15]],["result",6]]],"p":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":[14],"n":["cfg_if"],"q":["cfg_if"],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":[null],"p":[]},\
"clap":{"doc":"<code>clap</code> is a simple-to-use, efficient, and full-featured …","t":[3,3,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,3,3,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,12,12,12,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,6,4,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Arg","ArgGroup","ArgMatches","ArgSettings","Required","Multiple","EmptyValues","Global","Hidden","TakesValue","UseValueDelimiter","NextLineHelp","RequireDelimiter","HidePossibleValues","AllowLeadingHyphen","RequireEquals","Last","HideDefaultValue","CaseInsensitive","HideEnvValues","HiddenShortHelp","HiddenLongHelp","OsValues","SubCommand","Values","App","AppSettings","AllowInvalidUtf8","AllArgsOverrideSelf","AllowLeadingHyphen","AllowNegativeNumbers","AllowMissingPositional","AllowExternalSubcommands","ArgsNegateSubcommands","ArgRequiredElseHelp","ColoredHelp","ColorAuto","ColorAlways","ColorNever","DontCollapseArgsInUsage","DontDelimitTrailingValues","DisableHelpFlags","DisableHelpSubcommand","DisableVersion","DeriveDisplayOrder","GlobalVersion","Hidden","HidePossibleValuesInHelp","InferSubcommands","NoBinaryName","NextLineHelp","PropagateGlobalValuesDown","SubcommandsNegateReqs","SubcommandRequiredElseHelp","StrictUtf8","SubcommandRequired","TrailingVarArg","UnifiedHelpMessage","VersionlessSubcommands","WaitOnError","Error","message","kind","info","ErrorKind","InvalidValue","UnknownArgument","InvalidSubcommand","UnrecognizedSubcommand","EmptyValue","ValueValidation","TooManyValues","TooFewValues","WrongNumberOfValues","ArgumentConflict","MissingRequiredArgument","MissingSubcommand","MissingArgumentOrSubcommand","UnexpectedMultipleUsage","InvalidUtf8","HelpDisplayed","VersionDisplayed","ArgumentNotFound","Io","Format","Result","Shell","Bash","Fish","Zsh","PowerShell","Elvish","value_t","value_t_or_exit","values_t","values_t_or_exit","_clap_count_exprs","arg_enum","crate_version","crate_authors","crate_description","crate_name","app_from_crate","clap_app","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","from","from","from","next_back","next_back","next","size_hint","next","size_hint","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from_str","from_str","from_str","description","new","get_name","get_bin_name","with_defaults","author","bin_name","about","long_about","name","after_help","before_help","version","long_version","usage","help","help_short","version_short","help_message","version_message","template","setting","settings","global_setting","global_settings","unset_setting","unset_settings","set_term_width","max_term_width","arg","args","arg_from_usage","args_from_usage","alias","aliases","visible_alias","visible_aliases","group","groups","subcommand","subcommands","display_order","print_help","print_long_help","write_help","write_long_help","write_version","write_long_version","gen_completions","gen_completions_to","get_matches","get_matches_safe","get_matches_from","get_matches_from_safe","get_matches_from_safe_borrow","with_name","from_usage","short","long","alias","aliases","visible_alias","visible_aliases","help","long_help","last","required","require_equals","allow_hyphen_values","required_unless","required_unless_all","required_unless_one","conflicts_with","conflicts_with_all","overrides_with","overrides_with_all","requires","requires_if","requires_ifs","required_if","required_ifs","requires_all","takes_value","hide_possible_values","hide_default_value","index","multiple","value_terminator","global","empty_values","hidden","possible_values","possible_value","case_insensitive","group","groups","number_of_values","validator","validator_os","max_values","min_values","use_delimiter","require_delimiter","value_delimiter","value_names","value_name","default_value","default_value_os","default_value_if","default_value_if_os","default_value_ifs","default_value_ifs_os","env","env_os","hide_env_values","next_line_help","display_order","raw","hidden_short_help","hidden_long_help","is_set","set","unset","value_of","value_of_lossy","value_of_os","values_of","values_of_lossy","values_of_os","is_present","occurrences_of","index_of","indices_of","subcommand_matches","subcommand_name","subcommand","usage","with_name","with_name","arg","args","multiple","required","requires","requires_all","conflicts_with","conflicts_with_all","use_stderr","exit","with_description","variants"],"q":["clapd":["The abstract representation of a command line argument. …","<code>ArgGroup</code>s are a family of related arguments and way for …","Used to get information about the arguments that where …","Various settings that apply to arguments and may be set, …","The argument must be used","The argument may be used multiple times such as …","The argument allows empty values such as <code>--option \\\"\\\"</code>","The argument should be propagated down through all child …","The argument should <strong>not</strong> be shown in help text","The argument accepts a value, such as <code>--option <value></code>","Determines if the argument allows values to be grouped …","Prints the help text on the line after the argument","Requires the use of a value delimiter for all multiple …","Hides the possible values from the help string","Allows vals that start with a ‘-’","Require options use <code>--option=val</code> syntax","Specifies that the arg is the last positional argument …","Hides the default value from the help string","Makes <code>Arg::possible_values</code> case insensitive","Hides ENV values in the help message","The argument should <strong>not</strong> be shown in short help text","The argument should <strong>not</strong> be shown in long help text","An iterator for getting multiple values out of an …","The abstract representation of a command line subcommand.","An iterator for getting multiple values out of an …","Used to create a representation of a command line program …","Application level settings, which affect how <code>App</code> operates","Specifies that any invalid UTF-8 code points should <em>not</em> …","Essentially sets [<code>Arg::overrides_with(\\\"itself\\\")</code>] for all …","Specifies that leading hyphens are allowed in argument <em>…","Allows negative numbers to pass as values. This is …","Allows one to implement two styles of CLIs where …","Specifies that an unexpected positional argument, which …","Specifies that use of a valid argument negates subcommands…","Specifies that the help text should be displayed (and …","Uses colorized help messages.","Enables colored output only when the output is going to a …","Enables colored output regardless of whether or not the …","Disables colored output no matter if the output is going …","Disables the automatic collapsing of positional args into …","Disables the automatic delimiting of values when <code>--</code> or …","Disables <code>-h</code> and <code>--help</code> <code>App</code> without affecting any of the …","Disables the <code>help</code> subcommand","Disables <code>-V</code> and <code>--version</code> <code>App</code> without affecting any of …","Displays the arguments and <code>SubCommand</code>s in the help …","Specifies to use the version of the current command for …","Specifies that this <code>SubCommand</code> should be hidden from help …","Tells <code>clap</code> <em>not</em> to print possible values when displaying …","Tries to match unknown args to partial <code>subcommands</code> or …","Specifies that the parser should not assume the first …","Places the help string for all arguments on the line …","<strong>DEPRECATED</strong>: This setting is no longer required in order …","Allows <code>SubCommand</code>s to override all requirements of the …","Specifies that the help text should be displayed (before …","Specifies that any invalid UTF-8 code points should be …","Allows specifying that if no <code>SubCommand</code> is present at …","Specifies that the final positional argument is a “…","Groups flags and options together, presenting a more …","Disables <code>-V</code> and <code>--version</code> for all <code>SubCommand</code>s (Defaults …","Will display a message “Press [ENTER]/[RETURN] to …","Command Line Argument Parser Error","Formatted error message","The type of error","Any additional information passed along, such as the …","Command line argument parser kind of error","Occurs when an <code>Arg</code> has a set of possible values, and the …","Occurs when a user provides a flag, option, argument or …","Occurs when the user provides an unrecognized [<code>SubCommand</code>]…","Occurs when the user provides an unrecognized <code>SubCommand</code> …","Occurs when the user provides an empty value for an …","Occurs when the user provides a value for an argument …","Occurs when a user provides more values for an argument …","Occurs when the user provides fewer values for an …","Occurs when the user provides a different number of …","Occurs when the user provides two values which conflict …","Occurs when the user does not provide one or more …","Occurs when a subcommand is required (as defined by …","Occurs when either an argument or <code>SubCommand</code> is required, …","Occurs when the user provides multiple values to an …","Occurs when the user provides a value containing invalid …","Not a true “error” as it means <code>--help</code> or similar was …","Not a true “error” as it means <code>--version</code> or similar …","Occurs when using the [<code>value_t!</code>] and [<code>values_t!</code>] macros …","Represents an [I/O error]. Can occur when writing to …","Represents a Format error (which is a part of <code>Display</code>). …","Short hand for <code>Result</code> type","Describes which shell to produce a completions file for","Generates a .bash completion file for the Bourne Again …","Generates a .fish completion file for the Friendly …","Generates a completion file for the Z SHell (ZSH)","Generates a completion file for PowerShell","Generates a completion file for Elvish","Convenience macro getting a typed value <code>T</code> where <code>T</code> …","Convenience macro getting a typed value <code>T</code> where <code>T</code> …","Convenience macro getting a typed value <code>Vec<T></code> where <code>T</code> …","Convenience macro getting a typed value <code>Vec<T></code> where <code>T</code> …","Counts the number of comma-delimited expressions passed …","Convenience macro to generate more complete enums with …","Allows you to pull the version from your Cargo.toml at …","Allows you to pull the authors for the app from your …","Allows you to pull the description from your Cargo.toml …","Allows you to pull the name from your Cargo.toml at …","Allows you to build the <code>App</code> instance from your Cargo.toml …","Build <code>App</code>, <code>Arg</code>s, <code>SubCommand</code>s and <code>Group</code>s with Usage-string …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new instance of an application requiring a …","Get the name of the app","Get the name of the binary","Creates a new instance of an application requiring a …","Sets a string of author(s) that will be displayed to the …","Overrides the system-determined binary name. This should …","Sets a string describing what the program does. This will …","Sets a string describing what the program does. This will …","Sets the program’s name. This will be displayed when …","Adds additional help information to be displayed in …","Adds additional help information to be displayed in …","Sets a string of the version number to be displayed when …","Sets a string of the version number to be displayed when …","Sets a custom usage string to override the auto-generated …","Sets a custom help message and overrides the …","Sets the <code>short</code> for the auto-generated <code>help</code> argument.","Sets the <code>short</code> for the auto-generated <code>version</code> argument.","Sets the help text for the auto-generated <code>help</code> argument.","Sets the help text for the auto-generated <code>version</code> …","Sets the help template to be used, overriding the default …","Enables a single command, or <code>SubCommand</code>, level settings.","Enables multiple command, or <code>SubCommand</code>, level settings","Enables a single setting that is propagated down through …","Enables multiple settings which are propagated <em>down</em> …","Disables a single command, or <code>SubCommand</code>, level setting.","Disables multiple command, or <code>SubCommand</code>, level settings.","Sets the terminal width at which to wrap help messages. …","Sets the max terminal width at which to wrap help …","Adds an argument to the list of valid possibilities.","Adds multiple arguments to the list of valid possibilities","A convenience method for adding a single argument from a …","Adds multiple arguments at once from a usage string, one …","Allows adding a <code>SubCommand</code> alias, which function as “…","Allows adding <code>SubCommand</code> aliases, which function as “…","Allows adding a <code>SubCommand</code> alias that functions exactly …","Allows adding multiple <code>SubCommand</code> aliases that functions …","Adds an <code>ArgGroup</code> to the application. <code>ArgGroup</code>s are a …","Adds multiple <code>ArgGroup</code>s to the <code>App</code> at once.","Adds a <code>SubCommand</code> to the list of valid possibilities. …","Adds multiple subcommands to the list of valid …","Allows custom ordering of <code>SubCommand</code>s within the help …","Prints the full help message to <code>io::stdout()</code> using a …","Prints the full help message to <code>io::stdout()</code> using a …","Writes the full help message to the user to a <code>io::Write</code> …","Writes the full help message to the user to a <code>io::Write</code> …","Writes the version message to the user to a <code>io::Write</code> …","Writes the version message to the user to a <code>io::Write</code> …","Generate a completions file for a specified shell at …","Generate a completions file for a specified shell at …","Starts the parsing process, upon a failed parse an error …","Starts the parsing process. This method will return a …","Starts the parsing process. Like <code>App::get_matches</code> this …","Starts the parsing process. A combination of …","Starts the parsing process without consuming the <code>App</code> …","Creates a new instance of <code>Arg</code> using a unique string name. …","Creates a new instance of <code>Arg</code> from a usage string. Allows …","Sets the short version of the argument without the …","Sets the long version of the argument without the …","Allows adding a <code>Arg</code> alias, which function as “hidden” …","Allows adding <code>Arg</code> aliases, which function as “hidden” …","Allows adding a <code>Arg</code> alias that functions exactly like …","Allows adding multiple <code>Arg</code> aliases that functions exactly …","Sets the short help text of the argument that will be …","Sets the long help text of the argument that will be …","Specifies that this arg is the last, or final, positional …","Sets whether or not the argument is required by default. …","Requires that options use the <code>--option=val</code> syntax (i.e. …","Allows values which start with a leading hyphen (<code>-</code>)","Sets an arg that override this arg’s required setting. …","Sets args that override this arg’s required setting. …","Sets args that override this arg’s required setting. …","Sets a conflicting argument by name. I.e. when using this …","The same as <code>Arg::conflicts_with</code> but allows specifying …","Sets a overridable argument by name. I.e. this argument …","Sets multiple mutually overridable arguments by name. …","Sets an argument by name that is required when this one …","Allows a conditional requirement. The requirement will …","Allows multiple conditional requirements. The requirement …","Allows specifying that an argument is required …","Allows specifying that an argument is required based on …","Sets multiple arguments by names that are required when …","Specifies that the argument takes a value at run time.","Specifies if the possible values of an argument should be …","Specifies if the default value of an argument should be …","Specifies the index of a positional argument <strong>starting at</strong> …","Specifies that the argument may appear more than once. …","Specifies a value that <em>stops</em> parsing multiple values of a …","Specifies that an argument can be matched to all child …","Allows an argument to accept explicitly empty values. An …","Hides an argument from help message output.","Specifies a list of possible values for this argument. At …","Specifies a possible value for this argument, one at a …","When used with [<code>Arg::possible_values</code>] it allows the …","Specifies the name of the <code>ArgGroup</code> the argument belongs …","Specifies the names of multiple <code>ArgGroup</code>’s the argument …","Specifies how many values are required to satisfy this …","Allows one to perform a custom validation on the argument …","Works identically to Validator but is intended to be used …","Specifies the <em>maximum</em> number of values are for this …","Specifies the <em>minimum</em> number of values for this argument. …","Specifies whether or not an argument should allow …","Specifies that <em>multiple values</em> may only be set using the …","Specifies the separator to use when values are clumped …","Specify multiple names for values of option arguments. …","Specifies the name for value of option or positional …","Specifies the value of the argument when <em>not</em> specified at …","Provides a default value in the exact same manner as […","Specifies the value of the argument if <code>arg</code> has been used …","Provides a conditional default value in the exact same …","Specifies multiple values and conditions in the same …","Provides multiple conditional default values in the exact …","Specifies that if the value is not passed in as an …","Specifies that if the value is not passed in as an …","@TODO @p2 @docs @release: write docs","When set to <code>true</code> the help string will be displayed on the …","Allows custom ordering of args within the help message. …","Indicates that all parameters passed after this should …","Hides an argument from short help message output.","Hides an argument from long help message output.","Checks if one of the <code>ArgSettings</code> settings is set for the …","Sets one of the <code>ArgSettings</code> settings for the argument.","Unsets one of the <code>ArgSettings</code> settings for the argument.","Gets the value of a specific option or positional …","Gets the lossy value of a specific argument. If the …","Gets the OS version of a string value of a specific …","Gets a <code>Values</code> struct which implements <code>Iterator</code> for values …","Gets the lossy values of a specific argument. If the …","Gets a [<code>OsValues</code>] struct which is implements [<code>Iterator</code>] …","Returns <code>true</code> if an argument was present at runtime, …","Returns the number of times an argument was used at …","Gets the starting index of the argument in respect to all …","Gets all indices of the argument in respect to all other …","Because <code>Subcommand</code>s are essentially “sub-<code>App</code>s” they …","Because <code>Subcommand</code>s are essentially “sub-<code>App</code>s” they …","This brings together <code>ArgMatches::subcommand_matches</code> and …","Returns a string slice of the usage statement for the <code>App</code> …","Creates a new instance of a subcommand requiring a name. …","Creates a new instance of <code>ArgGroup</code> using a unique string …","Adds an argument to this group by name","Adds multiple arguments to this group by name","Allows more than one of the ‘Arg’s in this group to …","Sets the group as required or not. A required group will …","Sets the requirement rules of this group. This is not to …","Sets the requirement rules of this group. This is not to …","Sets the exclusion rules of this group. Exclusion (aka …","Sets the exclusion rules of this group. Exclusion rules …","Should the message be written to <code>stdout</code> or not","Prints the error to <code>stderr</code> and exits with a status of <code>1</code>","Create an error with a custom description.","A list of possible variants in <code>&\'static str</code> form"],"i":[0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,3,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,1,1,1,1,1,1,1,1,1,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,5,5,5,5,5,5,5,5,5,5,7,12,3,3,9,10,9,9,10,10,2,6,7,8,9,10,11,12,1,4,5,7,8,9,10,12,2,7,1,4,2,8,9,10,11,12,1,4,3,5,6,3,5,2,1,5,3,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,11,12,12,12,12,12,12,12,12,12,3,3,3,5],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["arg",3]]],[[["arggroup",3]]],[[["error",3]]],[[["error",3]]],[[],[["str",15],["option",4]]],[[],[["option",4],["osstr",3]]],[[],[["str",15],["option",4]]],[[]],[[],[["option",4],["osstr",3]]],[[]],[[],["appsettings",4]],[[]],[[],["arg",3]],[[],["argmatches",3]],[[],["values",3]],[[],["osvalues",3]],[[],["subcommand",3]],[[]],[[],["argsettings",4]],[[],["errorkind",4]],[[],["shell",4]],[[],["arg",3]],[[]],[[]],[[]],[[],["arggroup",3]],[[["appsettings",4]],["bool",15]],[[["arg",3]],["bool",15]],[[["argsettings",4]],["bool",15]],[[["errorkind",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["str",15]],[[["into",8],["string",3]]],[[],["str",15]],[[],[["option",4],["str",15]]],[[["into",8],["string",3]]],[[["str",15],["into",8]]],[[["into",8],["string",3]]],[[["str",15],["into",8]]],[[["str",15],["into",8]]],[[["into",8],["string",3]]],[[["str",15],["into",8]]],[[["str",15],["into",8]]],[[["str",15],["into",8]]],[[["str",15],["into",8]]],[[["str",15],["into",8]]],[[["str",15],["into",8]]],[[["asref",8],["str",15]]],[[["asref",8],["str",15]]],[[["into",8],["str",15]]],[[["into",8],["str",15]]],[[["str",15],["into",8]]],[[["appsettings",4]]],[[]],[[["appsettings",4]]],[[]],[[["appsettings",4]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["arg",3],["into",8]]],[[]],[[["str",15]]],[[["str",15]]],[[["str",15],["into",8]]],[[]],[[["str",15],["into",8]]],[[]],[[["arggroup",3]]],[[]],[[["app",3]]],[[]],[[["usize",15]]],[[],["clapresult",6]],[[],["clapresult",6]],[[],["clapresult",6]],[[],["clapresult",6]],[[],["clapresult",6]],[[],["clapresult",6]],[[["into",8],["string",3],["into",8],["osstring",3],["shell",4]]],[[["into",8],["shell",4],["string",3]]],[[],["argmatches",3]],[[],[["argmatches",3],["clapresult",6]]],[[],["argmatches",3]],[[],[["argmatches",3],["clapresult",6]]],[[],[["argmatches",3],["clapresult",6]]],[[["str",15]]],[[["str",15]]],[[["asref",8],["str",15]]],[[["str",15]]],[[["str",15],["into",8]]],[[]],[[["str",15],["into",8]]],[[]],[[["str",15]]],[[["str",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["str",15]]],[[]],[[]],[[["str",15]]],[[]],[[["str",15]]],[[]],[[["str",15]]],[[["str",15],["str",15]]],[[]],[[["str",15],["str",15]]],[[]],[[]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["u64",15]]],[[["bool",15]]],[[["str",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[]],[[["str",15]]],[[["bool",15]]],[[["str",15]]],[[]],[[["u64",15]]],[[]],[[]],[[["u64",15]]],[[["u64",15]]],[[["bool",15]]],[[["bool",15]]],[[["str",15]]],[[]],[[["str",15]]],[[["str",15]]],[[["osstr",3]]],[[["str",15],["option",4],["str",15]]],[[["osstr",3],["str",15],["option",4]]],[[]],[[]],[[["str",15]]],[[["osstr",3]]],[[["bool",15]]],[[["bool",15]]],[[["usize",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["argsettings",4]],["bool",15]],[[["argsettings",4]]],[[["argsettings",4]]],[[["asref",8],["str",15]],[["option",4],["str",15]]],[[["asref",8],["str",15]],[["option",4],["cow",4]]],[[["asref",8],["str",15]],[["option",4],["osstr",3]]],[[["asref",8],["str",15]],[["values",3],["option",4]]],[[["asref",8],["str",15]],[["option",4],["vec",3]]],[[["asref",8],["str",15]],[["osvalues",3],["option",4]]],[[["asref",8],["str",15]],["bool",15]],[[["asref",8],["str",15]],["u64",15]],[[["asref",8],["str",15]],[["usize",15],["option",4]]],[[["asref",8],["str",15]],[["indices",3],["option",4]]],[[["asref",8],["str",15]],[["argmatches",3],["option",4]]],[[],[["option",4],["str",15]]],[[]],[[],["str",15]],[[["str",15]],["app",3]],[[["str",15]]],[[["str",15]]],[[]],[[["bool",15]]],[[["bool",15]]],[[["str",15]]],[[]],[[["str",15]]],[[]],[[],["bool",15]],[[]],[[["errorkind",4],["str",15]]],[[]]],"p":[[4,"ArgSettings"],[4,"AppSettings"],[3,"Error"],[4,"ErrorKind"],[4,"Shell"],[3,"App"],[3,"Arg"],[3,"ArgMatches"],[3,"Values"],[3,"OsValues"],[3,"SubCommand"],[3,"ArgGroup"]]},\
"color_quant":{"doc":"Color quantization library","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["NeuQuant","new","init","map_pixel","index_of","color_map_rgba","color_map_rgb","from","into","try_from","borrow","borrow_mut","try_into","type_id"],"q":["color_quant","","","","","","","","","","","","",""],"d":["Neural network based color quantizer.","Creates a new neuronal network and trains it with the …","Initializes the neuronal network and trains it with the …","Maps the rgba-pixel in-place to the best-matching color …","Finds the best-matching index in the color map.","Returns the RGBA color map calculated from the sample. ","Returns the RGBA color map calculated from the sample. ","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[["usize",15],["i32",15]]],[[]],[[]],[[],["usize",15]],[[],[["vec",3],["u8",15]]],[[],[["vec",3],["u8",15]]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"NeuQuant"]]},\
"crossbeam_deque":{"doc":"Concurrent work-stealing deques.","t":[3,11,11,11,11,11,11,3,11,11,11,11,3,11,11,11,11,11,11,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Worker","new_fifo","new_lifo","stealer","is_empty","push","pop","Stealer","is_empty","steal","steal_batch","steal_batch_and_pop","Injector","new","push","steal","steal_batch","steal_batch_and_pop","is_empty","Steal","Empty","Success","Retry","is_empty","is_success","is_retry","success","or_else","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","drop","clone","clone","eq","ne","fmt","fmt","fmt","fmt","from_iter"],"q":["crossbeam_deque","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A worker queue.","Creates a FIFO worker queue.","Creates a LIFO worker queue.","Creates a stealer for this queue.","Returns <code>true</code> if the queue is empty.","Pushes a task into the queue.","Pops a task from the queue.","A stealer handle of a worker queue.","Returns <code>true</code> if the queue is empty.","Steals a task from the queue.","Steals a batch of tasks and pushes them into another …","Steals a batch of tasks, pushes them into another worker, …","An injector queue.","Creates a new injector queue.","Pushes a task into the queue.","Steals a task from the queue.","Steals a batch of tasks and pushes them into a worker.","Steals a batch of tasks, pushes them into a worker, and …","Returns <code>true</code> if the queue is empty.","Possible outcomes of a steal operation.","The queue was empty at the time of stealing.","At least one task was successfully stolen.","The steal operation needs to be retried.","Returns <code>true</code> if the queue was empty at the time of …","Returns <code>true</code> if at least one task was stolen.","Returns <code>true</code> if the steal operation needs to be retried.","Returns the result of the operation, if successful.","If no task was stolen, attempts another steal operation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consumes items until a <code>Success</code> is found and returns it."],"i":[0,1,1,1,1,1,1,0,2,2,2,2,0,3,3,3,3,3,3,0,4,4,4,4,4,4,4,4,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,3,2,4,4,4,1,2,3,4,4],"f":[null,[[],["worker",3]],[[],["worker",3]],[[],["stealer",3]],[[],["bool",15]],[[]],[[],["option",4]],null,[[],["bool",15]],[[],["steal",4]],[[["worker",3]],["steal",4]],[[["worker",3]],["steal",4]],null,[[],["injector",3]],[[]],[[],["steal",4]],[[["worker",3]],["steal",4]],[[["worker",3]],["steal",4]],[[],["bool",15]],null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["option",4]],[[],["steal",4]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["stealer",3]],[[],["steal",4]],[[["steal",4]],["bool",15]],[[["steal",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["steal",4]]],"p":[[3,"Worker"],[3,"Stealer"],[3,"Injector"],[4,"Steal"]]},\
"crossbeam_epoch":{"doc":"Epoch-based memory reclamation.","t":[3,3,12,12,8,10,10,3,8,10,10,3,3,3,5,3,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Atomic","CompareAndSetError","current","new","CompareAndSetOrdering","success","failure","Owned","Pointer","into_usize","from_usize","Shared","Collector","LocalHandle","unprotected","Guard","default_collector","is_pinned","pin","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","into_usize","from_usize","into_usize","from_usize","drop","drop","drop","as_mut","as_ref","from","from","from","from","from","from","from","from","clone","clone","clone","clone","default","default","cmp","eq","eq","partial_cmp","deref","deref_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","borrow","borrow_mut","fmt","fmt","null","new","load","load_consume","store","swap","compare_and_set","compare_and_set_weak","fetch_and","fetch_or","fetch_xor","into_owned","new","from_raw","into_shared","into_box","tag","with_tag","null","is_null","as_raw","deref","deref_mut","as_ref","into_owned","tag","with_tag","new","register","pin","is_pinned","collector","defer","defer_unchecked","defer_destroy","flush","repin","repin_after","collector"],"q":["crossbeam_epoch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An atomic pointer that can be safely shared between …","The error returned on failed compare-and-set operation.","The value in the atomic pointer at the time of the failed …","The new value, which the operation failed to store.","Memory orderings for compare-and-set operations.","The ordering of the operation when it succeeds.","The ordering of the operation when it fails.","An owned heap-allocated object.","A trait for either <code>Owned</code> or <code>Shared</code> pointers.","Returns the machine representation of the pointer.","Returns a new pointer pointing to the tagged pointer <code>data</code>.","A pointer to an object protected by the epoch GC.","An epoch-based garbage collector.","A handle to a garbage collector.","Returns a reference to a dummy guard that allows …","A guard that keeps the current thread pinned.","Returns the default global collector.","Returns <code>true</code> if the current thread is pinned.","Pins the current thread.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a new pointer pointing to the tagged pointer <code>data</code>.","","","","","","","","Returns a new atomic pointer pointing to <code>owned</code>.","","","Returns a new atomic pointer pointing to <code>ptr</code>.","Returns a new atomic pointer pointing to <code>raw</code>.","","Returns a new owned pointer pointing to <code>b</code>.","Returns a new pointer pointing to <code>raw</code>.","Returns a copy of the atomic value.","","","Creates another reference to the same garbage collector.","","","","","Checks if both handles point to the same collector.","","","","","","","","","","","","","","","Returns a new null atomic pointer.","Allocates <code>value</code> on the heap and returns a new atomic …","Loads a <code>Shared</code> from the atomic pointer.","Loads a <code>Shared</code> from the atomic pointer using a “consume…","Stores a <code>Shared</code> or <code>Owned</code> pointer into the atomic pointer.","Stores a <code>Shared</code> or <code>Owned</code> pointer into the atomic pointer, …","Stores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …","Stores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …","Bitwise “and” with the current tag.","Bitwise “or” with the current tag.","Bitwise “xor” with the current tag.","Takes ownership of the pointee.","Allocates <code>value</code> on the heap and returns a new owned …","Returns a new owned pointer pointing to <code>raw</code>.","Converts the owned pointer into a <code>Shared</code>.","Converts the owned pointer into a <code>Box</code>.","Returns the tag stored within the pointer.","Returns the same pointer, but tagged with <code>tag</code>. <code>tag</code> is …","Returns a new null pointer.","Returns <code>true</code> if the pointer is null.","Converts the pointer to a raw pointer (without the tag).","Dereferences the pointer.","Dereferences the pointer.","Converts the pointer to a reference.","Takes ownership of the pointee.","Returns the tag stored within the pointer.","Returns the same pointer, but tagged with <code>tag</code>. <code>tag</code> is …","Creates a new collector.","Registers a new handle for the collector.","Pins the handle.","Returns <code>true</code> if the handle is pinned.","Returns the <code>Collector</code> associated with this handle.","Stores a function so that it can be executed at some …","Stores a function so that it can be executed at some …","Stores a destructor for an object so that it can be …","Clears up the thread-local cache of deferred functions by …","Unpins and then immediately re-pins the thread.","Temporarily unpins the thread, executes the given …","Returns the <code>Collector</code> associated with this guard."],"i":[0,0,1,1,0,2,2,0,0,3,3,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,9,9,9,9,9,9,9,5,5,6,6,5,8,9,5,5,4,4,4,4,4,5,5,6,4,5,6,7,4,6,6,6,7,6,5,5,1,4,5,6,7,8,9,5,5,4,6,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,7,7,8,8,8,9,9,9,9,9,9,9],"f":[null,null,null,null,null,[[],["ordering",4]],[[],["ordering",4]],null,null,[[],["usize",15]],[[["usize",15]]],null,null,null,[[],["guard",3]],null,[[],["collector",3]],[[],["bool",15]],[[],["guard",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[],["usize",15]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[["owned",3]]],[[["box",3]]],[[]],[[["shared",3]]],[[]],[[]],[[["box",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["ordering",4]],[[],["bool",15]],[[["collector",3]],["bool",15]],[[],[["option",4],["ordering",4]]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["atomic",3]],[[],["atomic",3]],[[["guard",3],["ordering",4]],["shared",3]],[[["guard",3]],["shared",3]],[[["pointer",8],["ordering",4]]],[[["guard",3],["pointer",8],["ordering",4]],["shared",3]],[[["guard",3],["shared",3]],[["shared",3],["compareandseterror",3],["result",4]]],[[["guard",3],["shared",3]],[["shared",3],["compareandseterror",3],["result",4]]],[[["usize",15],["guard",3],["ordering",4]],["shared",3]],[[["usize",15],["guard",3],["ordering",4]],["shared",3]],[[["usize",15],["guard",3],["ordering",4]],["shared",3]],[[],["owned",3]],[[],["owned",3]],[[],["owned",3]],[[["guard",3]],["shared",3]],[[],["box",3]],[[],["usize",15]],[[["usize",15]],["owned",3]],[[],["shared",3]],[[],["bool",15]],[[]],[[]],[[]],[[],["option",4]],[[],["owned",3]],[[],["usize",15]],[[["usize",15]],["shared",3]],[[]],[[],["localhandle",3]],[[],["guard",3]],[[],["bool",15]],[[],["collector",3]],[[]],[[]],[[["shared",3]]],[[]],[[]],[[]],[[],[["collector",3],["option",4]]]],"p":[[3,"CompareAndSetError"],[8,"CompareAndSetOrdering"],[8,"Pointer"],[3,"Atomic"],[3,"Owned"],[3,"Shared"],[3,"Collector"],[3,"LocalHandle"],[3,"Guard"]]},\
"crossbeam_queue":{"doc":"Concurrent queues.","t":[3,3,3,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ArrayQueue","PopError","PushError","0","SegQueue","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","drop","drop","clone","clone","default","eq","eq","ne","fmt","fmt","fmt","fmt","fmt","fmt","new","push","pop","capacity","is_empty","is_full","len","new","push","pop","is_empty","len"],"q":["crossbeam_queue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A bounded multi-producer multi-consumer queue.","Error which occurs when popping from an empty queue.","Error which occurs when pushing into a full queue.","","An unbounded multi-producer multi-consumer queue.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new bounded queue with the given capacity.","Attempts to push an element into the queue.","Attempts to pop an element from the queue.","Returns the capacity of the queue.","Returns <code>true</code> if the queue is empty.","Returns <code>true</code> if the queue is full.","Returns the number of elements in the queue.","Creates a new unbounded queue.","Pushes an element into the queue.","Pops an element from the queue.","Returns <code>true</code> if the queue is empty.","Returns the number of elements in the queue."],"i":[0,0,0,1,0,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,4,4,4,4,4,4,4,2,4,3,1,4,3,1,1,2,3,1,4,3,1,2,2,2,2,2,2,2,4,4,4,4,4],"f":[null,null,null,null,null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["poperror",3]],[[],["pusherror",3]],[[],["segqueue",3]],[[["poperror",3]],["bool",15]],[[["pusherror",3]],["bool",15]],[[["pusherror",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["usize",15]],["arrayqueue",3]],[[],[["pusherror",3],["result",4]]],[[],[["result",4],["poperror",3]]],[[],["usize",15]],[[],["bool",15]],[[],["bool",15]],[[],["usize",15]],[[],["segqueue",3]],[[]],[[],[["result",4],["poperror",3]]],[[],["bool",15]],[[],["usize",15]]],"p":[[3,"PushError"],[3,"ArrayQueue"],[3,"PopError"],[3,"SegQueue"]]},\
"crossbeam_utils":{"doc":"Miscellaneous tools for concurrent programming.","t":[0,3,8,16,10,0,3,3,3,3,3,3,0,5,3,11,11,3,11,11,11,3,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["atomic","AtomicCell","AtomicConsume","Val","load_consume","sync","ShardedLock","ShardedLockReadGuard","ShardedLockWriteGuard","Parker","Unparker","WaitGroup","thread","scope","Scope","spawn","builder","ScopedThreadBuilder","name","stack_size","spawn","ScopedJoinHandle","join","thread","CachePadded","Backoff","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","drop","drop","from","from","clone","clone","clone","default","default","default","default","eq","ne","deref","deref","deref","deref_mut","deref_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","new","into_inner","is_lock_free","store","swap","as_ptr","take","load","compare_and_swap","compare_exchange","fetch_add","fetch_sub","fetch_and","fetch_or","fetch_xor","fetch_add","fetch_sub","fetch_and","fetch_or","fetch_xor","fetch_add","fetch_sub","fetch_and","fetch_or","fetch_xor","fetch_add","fetch_sub","fetch_and","fetch_or","fetch_xor","fetch_add","fetch_sub","fetch_and","fetch_or","fetch_xor","fetch_add","fetch_sub","fetch_and","fetch_or","fetch_xor","fetch_add","fetch_sub","fetch_and","fetch_or","fetch_xor","fetch_add","fetch_sub","fetch_and","fetch_or","fetch_xor","fetch_add","fetch_sub","fetch_and","fetch_or","fetch_xor","fetch_add","fetch_sub","fetch_and","fetch_or","fetch_xor","fetch_add","fetch_sub","fetch_and","fetch_or","fetch_xor","fetch_add","fetch_sub","fetch_and","fetch_or","fetch_xor","fetch_and","fetch_or","fetch_xor","new","into_inner","new","reset","spin","snooze","is_completed","new","park","park_timeout","unparker","unpark","new","into_inner","is_poisoned","get_mut","try_read","read","try_write","write","new","wait"],"q":["crossbeam_utils","crossbeam_utils::atomic","","","","crossbeam_utils","crossbeam_utils::sync","","","","","","crossbeam_utils","crossbeam_utils::thread","","","","","","","","","","","crossbeam_utils","","crossbeam_utils::atomic","","","","","","","crossbeam_utils","","","","","","","","","","","","","","","","","crossbeam_utils::sync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crossbeam_utils::thread","","","","","","","","","","","","","","","","","","","","","crossbeam_utils::sync","","crossbeam_utils","crossbeam_utils::sync","crossbeam_utils","crossbeam_utils::sync","","crossbeam_utils::atomic","crossbeam_utils","","crossbeam_utils::sync","crossbeam_utils","","","crossbeam_utils::sync","","crossbeam_utils","crossbeam_utils::sync","crossbeam_utils::atomic","crossbeam_utils","","crossbeam_utils::sync","","","","","","crossbeam_utils::thread","","","crossbeam_utils::sync","","crossbeam_utils","crossbeam_utils::atomic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crossbeam_utils","","","","","","","crossbeam_utils::sync","","","","","","","","","","","","","",""],"d":["Atomic types.","A thread-safe mutable memory location.","Trait which allows reading from primitive atomic types …","Type returned by <code>load_consume</code>.","Loads a value from the atomic using a “consume” …","Thread synchronization primitives.","A sharded reader-writer lock.","A guard used to release the shared read access of a …","A guard used to release the exclusive write access of a …","A thread parking primitive.","Unparks a thread parked by the associated <code>Parker</code>.","Enables threads to synchronize the beginning or end of …","Threads that can borrow variables from the stack.","Creates a new scope for spawning threads.","A scope for spawning threads.","Spawns a scoped thread.","Creates a builder that can configure a thread before …","Configures the properties of a new thread.","Sets the name for the new thread.","Sets the size of the stack for the new thread.","Spawns a scoped thread with this configuration.","A handle that can be used to join its scoped thread.","Waits for the thread to finish and returns its result.","Returns a handle to the underlying thread.","Pads and aligns a value to the length of a cache line.","Performs exponential backoff in spin loops.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new atomic cell initialized with <code>val</code>.","Unwraps the atomic cell and returns its inner value.","Returns <code>true</code> if operations on values of this type are …","Stores <code>val</code> into the atomic cell.","Stores <code>val</code> into the atomic cell and returns the previous …","Returns a raw pointer to the underlying data in this …","Takes the value of the atomic cell, leaving …","Loads a value.","If the current value equals <code>current</code>, stores <code>new</code> into the …","If the current value equals <code>current</code>, stores <code>new</code> into the …","Increments the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Applies bitwise “and” to the current value and …","Applies bitwise “or” to the current value and returns …","Applies bitwise “xor” to the current value and …","Increments the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Applies bitwise “and” to the current value and …","Applies bitwise “or” to the current value and returns …","Applies bitwise “xor” to the current value and …","Increments the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Applies bitwise “and” to the current value and …","Applies bitwise “or” to the current value and returns …","Applies bitwise “xor” to the current value and …","Increments the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Applies bitwise “and” to the current value and …","Applies bitwise “or” to the current value and returns …","Applies bitwise “xor” to the current value and …","Increments the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Applies bitwise “and” to the current value and …","Applies bitwise “or” to the current value and returns …","Applies bitwise “xor” to the current value and …","Increments the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Applies bitwise “and” to the current value and …","Applies bitwise “or” to the current value and returns …","Applies bitwise “xor” to the current value and …","Increments the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Applies bitwise “and” to the current value and …","Applies bitwise “or” to the current value and returns …","Applies bitwise “xor” to the current value and …","Increments the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Applies bitwise “and” to the current value and …","Applies bitwise “or” to the current value and returns …","Applies bitwise “xor” to the current value and …","Increments the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Applies bitwise “and” to the current value and …","Applies bitwise “or” to the current value and returns …","Applies bitwise “xor” to the current value and …","Increments the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Applies bitwise “and” to the current value and …","Applies bitwise “or” to the current value and returns …","Applies bitwise “xor” to the current value and …","Increments the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Applies bitwise “and” to the current value and …","Applies bitwise “or” to the current value and returns …","Applies bitwise “xor” to the current value and …","Increments the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Applies bitwise “and” to the current value and …","Applies bitwise “or” to the current value and returns …","Applies bitwise “xor” to the current value and …","Applies logical “and” to the current value and …","Applies logical “or” to the current value and returns …","Applies logical “xor” to the current value and …","Pads and aligns a value to the length of a cache line.","Returns the inner value.","Creates a new <code>Backoff</code>.","Resets the <code>Backoff</code>.","Backs off in a lock-free loop.","Backs off in a blocking loop.","Returns <code>true</code> if exponential backoff has completed and …","Creates a new <code>Parker</code>.","Blocks the current thread until the token is made …","Blocks the current thread until the token is made …","Returns a reference to an associated <code>Unparker</code>.","Atomically makes the token available if it is not already.","Creates a new sharded reader-writer lock.","Consumes this lock, returning the underlying data.","Returns <code>true</code> if the lock is poisoned.","Returns a mutable reference to the underlying data.","Attempts to acquire this lock with shared read access.","Locks with shared read access, blocking the current …","Attempts to acquire this lock with exclusive write access.","Locks with exclusive write access, blocking the current …","Creates a new wait group and returns the single reference …","Drops this reference and waits until all other references …"],"i":[0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,2,2,0,3,3,3,0,4,4,0,0,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,12,13,6,10,6,9,13,5,6,7,10,6,6,6,11,12,6,12,5,6,7,8,9,10,11,12,13,2,3,4,11,12,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,7,7,7,7,7,8,8,8,8,9,10,10,10,10,10,10,10,10,13,13],"f":[null,null,null,null,[[]],null,null,null,null,null,null,null,null,[[],["result",6]],null,[[],["scopedjoinhandle",3]],[[],["scopedthreadbuilder",3]],null,[[["string",3]],["scopedthreadbuilder",3]],[[["usize",15]],["scopedthreadbuilder",3]],[[],[["scopedjoinhandle",3],["result",6]]],null,[[],["result",6]],[[],["thread",3]],null,null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["cachepadded",3]],[[],["unparker",3]],[[],["waitgroup",3]],[[],["atomiccell",3]],[[],["cachepadded",3]],[[],["backoff",3]],[[],["shardedlock",3]],[[["cachepadded",3]],["bool",15]],[[["cachepadded",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],["atomiccell",3]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[["u8",15]],["u8",15]],[[["u8",15]],["u8",15]],[[["u8",15]],["u8",15]],[[["u8",15]],["u8",15]],[[["u8",15]],["u8",15]],[[["i8",15]],["i8",15]],[[["i8",15]],["i8",15]],[[["i8",15]],["i8",15]],[[["i8",15]],["i8",15]],[[["i8",15]],["i8",15]],[[["u16",15]],["u16",15]],[[["u16",15]],["u16",15]],[[["u16",15]],["u16",15]],[[["u16",15]],["u16",15]],[[["u16",15]],["u16",15]],[[["i16",15]],["i16",15]],[[["i16",15]],["i16",15]],[[["i16",15]],["i16",15]],[[["i16",15]],["i16",15]],[[["i16",15]],["i16",15]],[[["u32",15]],["u32",15]],[[["u32",15]],["u32",15]],[[["u32",15]],["u32",15]],[[["u32",15]],["u32",15]],[[["u32",15]],["u32",15]],[[["i32",15]],["i32",15]],[[["i32",15]],["i32",15]],[[["i32",15]],["i32",15]],[[["i32",15]],["i32",15]],[[["i32",15]],["i32",15]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],[[["i64",15]],["i64",15]],[[["i64",15]],["i64",15]],[[["i64",15]],["i64",15]],[[["i64",15]],["i64",15]],[[["i64",15]],["i64",15]],[[["u128",15]],["u128",15]],[[["u128",15]],["u128",15]],[[["u128",15]],["u128",15]],[[["u128",15]],["u128",15]],[[["u128",15]],["u128",15]],[[["i128",15]],["i128",15]],[[["i128",15]],["i128",15]],[[["i128",15]],["i128",15]],[[["i128",15]],["i128",15]],[[["i128",15]],["i128",15]],[[["usize",15]],["usize",15]],[[["usize",15]],["usize",15]],[[["usize",15]],["usize",15]],[[["usize",15]],["usize",15]],[[["usize",15]],["usize",15]],[[["isize",15]],["isize",15]],[[["isize",15]],["isize",15]],[[["isize",15]],["isize",15]],[[["isize",15]],["isize",15]],[[["isize",15]],["isize",15]],[[["bool",15]],["bool",15]],[[["bool",15]],["bool",15]],[[["bool",15]],["bool",15]],[[],["cachepadded",3]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["parker",3]],[[]],[[["duration",3]]],[[],["unparker",3]],[[]],[[],["shardedlock",3]],[[],["lockresult",6]],[[],["bool",15]],[[],["lockresult",6]],[[],[["trylockresult",6],["shardedlockreadguard",3]]],[[],[["shardedlockreadguard",3],["lockresult",6]]],[[],[["trylockresult",6],["shardedlockwriteguard",3]]],[[],[["lockresult",6],["shardedlockwriteguard",3]]],[[],["waitgroup",3]],[[]]],"p":[[8,"AtomicConsume"],[3,"Scope"],[3,"ScopedThreadBuilder"],[3,"ScopedJoinHandle"],[3,"AtomicCell"],[3,"CachePadded"],[3,"Backoff"],[3,"Parker"],[3,"Unparker"],[3,"ShardedLock"],[3,"ShardedLockReadGuard"],[3,"ShardedLockWriteGuard"],[3,"WaitGroup"]]},\
"deflate":{"doc":"An implementation an encoder using DEFLATE compression …","t":[0,3,3,3,12,12,12,12,4,13,13,13,4,13,13,13,4,13,13,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["write","DeflateEncoder","ZlibEncoder","CompressionOptions","max_hash_checks","lazy_if_less_than","matching_type","special","SpecialOptions","Normal","_ForceFixed","_ForceStored","Compression","Fast","Default","Best","MatchingType","Greedy","Lazy","deflate_bytes_conf","deflate_bytes","deflate_bytes_zlib_conf","deflate_bytes_zlib","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","drop","drop","from","clone","clone","clone","clone","default","default","default","cmp","cmp","eq","eq","eq","ne","eq","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","hash","hash","hash","hash","write","flush","write","flush","high","fast","huffman_only","rle","new","finish","reset","new","finish","reset","checksum"],"q":["deflate","deflate::write","","deflate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deflate::write","","","","","","","","","","","","","","","","deflate","","","","","","","","","","","","","","","","","","","","","","","","","","deflate::write","","","","deflate","","","","deflate::write","","","","","",""],"d":["Encoders implementing a <code>Write</code> interface.","A DEFLATE encoder/compressor.","A Zlib encoder/compressor.","A struct describing the options for a compressor or …","The maximum number of checks to make in the hash table …","Only lazy match if we have a length less than this value.","Whether to use lazy or greedy matching.","Force fixed/stored blocks (Not implemented yet).","Enum allowing some special options (not implemented yet)!","Compress normally.","Force fixed huffman tables. (Unimplemented!).","Force stored (uncompressed) blocks only. (Unimplemented!).","An enum describing the level of compression to be used by …","Fast minimal compression (<code>CompressionOptions::fast()</code>).","Default level (<code>CompressionOptions::default()</code>).","Higher compression level (<code>CompressionOptions::high()</code>).","An enum describing whether we use lazy or greedy matching.","Use greedy matching: the matching algorithm simply uses a …","Use lazy matching: after finding a match, the next input …","Compress the given slice of bytes with DEFLATE …","Compress the given slice of bytes with DEFLATE …","Compress the given slice of bytes with DEFLATE …","Compress the given slice of bytes with DEFLATE …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","When the encoder is dropped, output the rest of the data.","When the encoder is dropped, output the rest of the data.","","","","","","","","Returns the options describing the default compression …","","","","","","","","","","","","","","","","","","","","Flush the encoder.","","Flush the encoder.","Returns compression settings rouhgly corresponding to the …","Returns  a fast set of compression settings","Returns a set of compression settings that makes the …","Returns a set of compression settings that makes the …","Creates a new encoder using the provided compression …","Encode all pending data to the contained writer, consume …","Resets the encoder (except the compression options), …","Create a new <code>ZlibEncoder</code> using the provided compression …","Encode all pending data to the contained writer, consume …","Resets the encoder (except the compression options), …","Return the adler32 checksum of the currently consumed …"],"i":[0,0,0,0,1,1,1,1,0,2,2,2,0,3,3,3,0,4,4,0,0,0,0,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6,6,6,6,6,6,6,5,6,1,3,2,1,4,3,2,1,3,4,3,2,1,1,4,3,4,3,2,1,4,4,3,2,1,4,5,5,6,6,1,1,1,1,5,5,5,6,6,6,6],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["into",8],["compressionoptions",3]],[["vec",3],["u8",15]]],[[],[["vec",3],["u8",15]]],[[["into",8],["compressionoptions",3]],[["vec",3],["u8",15]]],[[],[["vec",3],["u8",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[["compression",4]],["compressionoptions",3]],[[],["compression",4]],[[],["specialoptions",4]],[[],["compressionoptions",3]],[[],["matchingtype",4]],[[],["compression",4]],[[],["specialoptions",4]],[[],["compressionoptions",3]],[[["compression",4]],["ordering",4]],[[["matchingtype",4]],["ordering",4]],[[["compression",4]],["bool",15]],[[["specialoptions",4]],["bool",15]],[[["compressionoptions",3]],["bool",15]],[[["compressionoptions",3]],["bool",15]],[[["matchingtype",4]],["bool",15]],[[["compression",4]],[["ordering",4],["option",4]]],[[["matchingtype",4]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],[["usize",15],["result",6]]],[[],["result",6]],[[],[["usize",15],["result",6]]],[[],["result",6]],[[],["compressionoptions",3]],[[],["compressionoptions",3]],[[],["compressionoptions",3]],[[],["compressionoptions",3]],[[["into",8],["compressionoptions",3]],["deflateencoder",3]],[[],["result",6]],[[],["result",6]],[[["into",8],["compressionoptions",3]],["zlibencoder",3]],[[],["result",6]],[[],["result",6]],[[],["u32",15]]],"p":[[3,"CompressionOptions"],[4,"SpecialOptions"],[4,"Compression"],[4,"MatchingType"],[3,"DeflateEncoder"],[3,"ZlibEncoder"]]},\
"either":{"doc":"The enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general …","t":[4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Either","Left","Right","is_left","is_right","left","right","as_ref","as_mut","flip","map_left","map_right","either","either_with","left_and_then","right_and_then","into_iter","left_or","left_or_default","left_or_else","right_or","right_or_default","right_or_else","factor_first","factor_second","into_inner","map","try_left","try_right","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","deref","deref_mut","fmt","fmt","eq","ne","cmp","partial_cmp","next_back","next","size_hint","fold","count","last","nth","collect","all","hash","extend","from","as_ref","as_ref","as_ref","as_mut","as_mut","as_mut","into","clone"],"q":["either","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general …","A value of type <code>L</code>.","A value of type <code>R</code>.","Return true if the value is the <code>Left</code> variant.","Return true if the value is the <code>Right</code> variant.","Convert the left side of <code>Either<L, R></code> to an <code>Option<L></code>.","Convert the right side of <code>Either<L, R></code> to an <code>Option<R></code>.","Convert <code>&Either<L, R></code> to <code>Either<&L, &R></code>.","Convert <code>&mut Either<L, R></code> to <code>Either<&mut L, &mut R></code>.","Convert <code>Either<L, R></code> to <code>Either<R, L></code>.","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","Apply one of two functions depending on contents, …","Like <code>either</code>, but provide some context to whichever of the …","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","Convert the inner value to an iterator.","Return left value or given value","Return left or a default","Returns left value or computes it from a closure","Return right value or given value","Return right or a default","Returns right value or computes it from a closure","Factor out a homogeneous type from an either of pairs.","Factor out a homogeneous type from an either of pairs.","Extract the value of an either over two equivalent types.","Map <code>f</code> over the contained value and return the result in …","Macro for unwrapping the left side of an <code>Either</code>, which …","Dual to <code>try_left!</code>, see its documentation for more …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["option",4]],[[],["option",4]],[[],["either",4]],[[],["either",4]],[[],["either",4]],[[],["either",4]],[[],["either",4]],[[]],[[]],[[],["either",4]],[[],["either",4]],[[],["either",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["either",4]],null,null,[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["either",4]],["bool",15]],[[["either",4]],["bool",15]],[[["either",4]],["ordering",4]],[[["either",4]],[["ordering",4],["option",4]]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[],["usize",15]],[[],["option",4]],[[["usize",15]],["option",4]],[[]],[[],["bool",15]],[[]],[[]],[[["result",4]]],[[]],[[],["str",15]],[[]],[[],["str",15]],[[]],[[]],[[],["result",4]],[[],["either",4]]],"p":[[4,"Either"]]},\
"event_loop":{"doc":"A Piston event loop for games and interactive applications","t":[3,12,12,12,12,12,12,11,3,17,17,17,11,11,8,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["EventSettings","max_fps","ups","ups_reset","swap_buffers","bench_mode","lazy","new","Events","DEFAULT_UPS","DEFAULT_UPS_RESET","DEFAULT_MAX_FPS","new","next","EventLoop","get_event_settings","set_event_settings","set_ups","ups","set_ups_reset","ups_reset","set_max_fps","max_fps","set_swap_buffers","swap_buffers","set_bench_mode","bench_mode","set_lazy","lazy","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","get_event_settings","set_event_settings","get_event_settings","set_event_settings","clone","clone","default","fmt"],"q":["event_loop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Stores event loop settings.","The maximum number of frames per second","The number of updates per second","The number of delayed updates before skipping them to …","Enable or disable automatic swapping of buffers.","Enable or disable benchmark mode. When enabled, it will …","Enable or disable rendering only when receiving input. …","Creates new with default settings.","An event loop iterator","The default updates per second.","The default delayed updates reset.","The default maximum frames per second.","Creates a new event iterator with default UPS and FPS …","Returns the next event.","Methods implemented for changing event loop settings.","Returns event loop settings.","Sets event loop settings.","The number of updates per second","The number of updates per second","The number of delayed updates before skipping them to …","The number of delayed updates before skipping them to …","The maximum number of frames per second","The maximum number of frames per second","Enable or disable automatic swapping of buffers.","Enable or disable automatic swapping of buffers.","Enable or disable benchmark mode. When enabled, it will …","Enable or disable benchmark mode. When enabled, it will …","Enable or disable rendering only when receiving input. …","Enable or disable rendering only when receiving input. …","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,0,0,0,0,2,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,1,1,2,2,1,2,1,1],"f":[null,null,null,null,null,null,null,[[],["eventsettings",3]],null,null,null,null,[[["eventsettings",3]],["events",3]],[[],[["option",4],["event",4]]],null,[[],["eventsettings",3]],[[["eventsettings",3]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["eventsettings",3]],[[["eventsettings",3]]],[[],["eventsettings",3]],[[],["events",3]],[[],["eventsettings",3]],[[["formatter",3]],["result",6]]],"p":[[3,"EventSettings"],[3,"Events"],[8,"EventLoop"]]},\
"failure":{"doc":"An experimental new error-handling library. Guide-style …","t":[8,10,3,3,3,8,10,10,10,3,3,6,5,8,11,11,11,11,11,11,11,11,11,11,11,11,3,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AsFail","as_fail","Backtrace","Compat","Context","ResultExt","compat","context","with_context","SyncFailure","Error","Fallible","err_msg","Fail","name","cause","backtrace","context","compat","downcast_ref","downcast_mut","find_root_cause","iter_causes","iter_chain","root_cause","causes","Causes","bail","ensure","format_err","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","try_from","borrow","borrow_mut","try_into","type_id","as_fail","as_fail","name","cause","backtrace","as_ref","from","from","next","clone","default","default","eq","ne","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","description","new","is_empty","into_inner","get_ref","new","get_context","map","new","from_boxed_compat","as_fail","name","cause","backtrace","context","compat","downcast","find_root_cause","iter_causes","iter_chain","downcast_ref","downcast_mut","root_cause","causes"],"q":["failure","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The <code>AsFail</code> trait","Converts a reference to <code>Self</code> into a dynamic trait object …","A <code>Backtrace</code>.","A compatibility wrapper around an error type from this …","An error with context around it.","Extension methods for <code>Result</code>.","Wraps the error in <code>Compat</code> to make it compatible with …","Wraps the error type in a context type.","Wraps the error type in a context type generated by …","Wrapper for <code>std</code> errors to make them <code>Sync</code>.","The <code>Error</code> type, which can contain any failure.","A common result with an <code>Error</code>.","Constructs a <code>Fail</code> type from a string.","The <code>Fail</code> trait.","Returns the “name” of the error.","Returns a reference to the underlying cause of this …","Returns a reference to the <code>Backtrace</code> carried by this …","Provides context for this failure.","Wraps this failure in a compatibility wrapper that …","Attempts to downcast this failure to a concrete type by …","Attempts to downcast this failure to a concrete type by …","Returns the “root cause” of this <code>Fail</code> - the last …","Returns a iterator over the causes of this <code>Fail</code> with the …","Returns a iterator over all fails up the chain from the …","Deprecated alias to <code>find_root_cause</code>.","Deprecated alias to <code>iter_chain</code>.","A iterator over the causes of a <code>Fail</code>","Exits a function early with an <code>Error</code>.","Exits a function early with an <code>Error</code> if the condition is …","Constructs an <code>Error</code> using the standard string …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs a new backtrace. This will only create a real …","Returns true if displaying this backtrace would be an …","Unwraps this into the inner error.","Gets a reference to the inner error.","Creates a new context without an underlying error message.","Returns a reference to the context provided with this …","Maps <code>Context<D></code> to <code>Context<T></code> by applying a function to …","Wraps a non-<code>Sync</code> <code>Error</code> in order to make it implement <code>Fail</code>.","Creates an <code>Error</code> from <code>Box<std::error::Error></code>.","Return a reference to the underlying failure that this …","Returns the name of the underlying fail.","Returns a reference to the underlying cause of this <code>Error</code>…","Gets a reference to the <code>Backtrace</code> for this <code>Error</code>.","Provides context for this <code>Error</code>.","Wraps <code>Error</code> in a compatibility type.","Attempts to downcast this <code>Error</code> to a particular <code>Fail</code> type.","Returns the “root cause” of this error - the last …","Returns a iterator over the causes of this error with the …","Returns a iterator over all fails up the chain from the …","Attempts to downcast this <code>Error</code> to a particular <code>Fail</code> type …","Attempts to downcast this <code>Error</code> to a particular <code>Fail</code> type …","Deprecated alias to <code>find_root_cause</code>.","Deprecated alias to <code>iter_causes</code>."],"i":[0,1,0,0,0,0,2,2,2,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,3,8,6,6,6,8,6,8,9,5,4,5,5,5,4,5,6,7,8,4,5,6,7,8,5,5,4,4,5,5,6,6,6,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8],"f":[null,[[],["fail",8]],null,null,null,null,[[],[["result",4],["compat",3]]],[[],[["result",4],["context",3]]],[[],[["result",4],["context",3]]],null,null,null,[[["display",8],["sync",8],["debug",8],["send",8]],["error",3]],null,[[],[["option",4],["str",15]]],[[],[["fail",8],["option",4]]],[[],[["backtrace",3],["option",4]]],[[],["context",3]],[[],["compat",3]],[[],["option",4]],[[],["option",4]],[[],["fail",8]],[[],["causes",3]],[[],["causes",3]],[[],["fail",8]],[[],["causes",3]],null,null,null,null,[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["fail",8]],[[],["fail",8]],[[],[["option",4],["str",15]]],[[],[["fail",8],["option",4]]],[[],[["backtrace",3],["option",4]]],[[],["fail",8]],[[],["context",3]],[[],["error",3]],[[],[["option",4],["fail",8]]],[[],["compat",3]],[[],["backtrace",3]],[[],["compat",3]],[[["compat",3]],["bool",15]],[[["compat",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],["str",15]],[[],["backtrace",3]],[[],["bool",15]],[[]],[[]],[[],["context",3]],[[]],[[],["context",3]],[[]],[[["box",3],["stderror",8]],["error",3]],[[],["fail",8]],[[],[["option",4],["str",15]]],[[],["fail",8]],[[],["backtrace",3]],[[["send",8],["sync",8],["display",8]],[["display",8],["send",8],["sync",8],["context",3]]],[[],[["error",3],["compat",3]]],[[],[["error",3],["result",4],["fail",8]]],[[],["fail",8]],[[],["causes",3]],[[],["causes",3]],[[],["option",4]],[[],["option",4]],[[],["fail",8]],[[],["causes",3]]],"p":[[8,"AsFail"],[8,"ResultExt"],[8,"Fail"],[3,"Backtrace"],[3,"Compat"],[3,"Context"],[3,"SyncFailure"],[3,"Error"],[3,"Causes"]]},\
"failure_derive":{"doc":"","t":[24],"n":["Fail"],"q":["failure_derive"],"d":[""],"i":[0],"f":[null],"p":[]},\
"float":{"doc":"Traits for generic floats in game programming","t":[8,8,10,8,10,8,10,8,10,8,10,10,10,10,10,8,10,8,10,8,10,8,10,10,10,10,10,10,10,10,10,10,10,10,10,8,10,8,10,10,10,10,10],"n":["Float","Min","min","Max","max","Signum","signum","Powf","powf","Radians","_90","_180","_360","deg_to_rad","rad_to_deg","One","one","Zero","zero","Sqrt","sqrt","Trig","sin","cos","tan","asin","acos","atan","atan2","sinh","cosh","tanh","asinh","acosh","atanh","Cast","cast","FromPrimitive","from_f64","from_f32","from_isize","from_u32","from_i32"],"q":["float","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Convenience trait for floats.","Minimum value.","Returns the minimum value of self or other.","Maximum value.","Returns the maximum value of self or other.","The sign of the number.","Returns number representing the sign of self","Floating number power.","Returns floating power of the number.","Useful constants for radians.","Returns radians corresponding to 90 degrees.","Returns radians corresponding to 180 degrees.","Returns radians corresponding to 360 degrees.","Convert a value to radians from degrees. Equivalent to …","Convert a value to degrees from radians. Equivalent to …","Number 1.","Returns 1.","Number 0.","Returns 0.","Square root.","Returns square root.","Basic trigonometry functions","Returns sine of self.","Returns cosine of self.","Returns tangent of self.","Returns inverse sine of self.","Returns inverse cosine of self.","Returns inverse tangent of self.","Returns the four quadrant arctangent of self (y) and …","Returns hyperbolic sine of self.","Returns hyperbolic cosine of self.","Returns hyperbolic tangent of self.","Returns inverse hyperbolic sine of self.","Returns inverse hyperbolic cosine of self.","Returns inverse hyperbolic tangent of self.","Casts into another type.","Casts into other type.","Trait for converting from different numeric types","from a f64","from a f32","from a isze","from a u32","from a i32"],"i":[0,0,1,0,2,0,3,0,4,0,5,5,5,5,5,0,6,0,7,0,8,0,9,9,9,9,9,9,9,9,9,9,9,9,9,0,10,0,11,11,11,11,11],"f":[null,null,[[]],null,[[]],null,[[]],null,[[]],null,[[]],[[]],[[]],[[]],[[]],null,[[]],null,[[]],null,[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],null,[[["f64",15]]],[[["f32",15]]],[[["isize",15]]],[[["u32",15]]],[[["i32",15]]]],"p":[[8,"Min"],[8,"Max"],[8,"Signum"],[8,"Powf"],[8,"Radians"],[8,"One"],[8,"Zero"],[8,"Sqrt"],[8,"Trig"],[8,"Cast"],[8,"FromPrimitive"]]},\
"fnv":{"doc":"An implementation of the Fowler–Noll–Vo hash function.","t":[3,11,6,6,6,11,11,11,11,11,11,11,11,11,11],"n":["FnvHasher","with_key","FnvBuildHasher","FnvHashMap","FnvHashSet","from","into","try_from","borrow","borrow_mut","try_into","type_id","default","finish","write"],"q":["fnv","","","","","","","","","","","","","",""],"d":["An implementation of the Fowler–Noll–Vo hash function.","Create an FNV hasher starting with a state corresponding …","A builder for default FNV hashers.","A <code>HashMap</code> using a default FNV hasher.","A <code>HashSet</code> using a default FNV hasher.","","","","","","","","","",""],"i":[0,1,0,0,0,1,1,1,1,1,1,1,1,1,1],"f":[null,[[["u64",15]],["fnvhasher",3]],null,null,null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["fnvhasher",3]],[[],["u64",15]],[[]]],"p":[[3,"FnvHasher"]]},\
"gif":{"doc":"GIF en- and decoding library Build Status","t":[8,11,8,16,10,4,13,13,13,4,13,13,13,13,4,13,13,13,13,3,12,12,12,12,12,12,12,12,12,12,12,3,4,13,13,13,13,13,13,13,13,13,13,4,13,13,13,4,13,13,3,12,4,13,13,3,3,3,4,13,12,12,12,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["SetParameter","set","Parameter","Result","set_param","Block","Image","Extension","Trailer","Extension","Text","Control","Comment","Application","DisposalMethod","Any","Keep","Background","Previous","Frame","delay","dispose","transparent","needs_user_input","top","left","width","height","interlaced","palette","buffer","StreamingDecoder","Decoded","Nothing","GlobalPalette","BackgroundColor","Trailer","BlockStart","SubBlockFinished","BlockFinished","Frame","Data","DataEnd","DecodingError","Format","Internal","Io","ColorOutput","RGBA","Indexed","MemoryLimit","0","Extensions","Save","Skip","Reader","Decoder","Encoder","ExtensionData","Control","flags","delay","trns","Repetitions","Repeat","Finite","Infinite","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","set_param","set_param","set_param","set_param","drop","from","clone","clone","clone","clone","default","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","description","cause","set","from_u8","from_u8","from_u8","from_rgba","from_rgba_speed","from_palette_pixels","from_indexed_pixels","from_rgb","from_rgb_speed","new","update","last_ext","current_frame_mut","current_frame","width","height","new","read_info","next_frame_info","read_next_frame","read_into_buffer","fill_buffer","buffer_size","line_length","palette","global_palette","width","height","bg_color","new_control_ext","new","write_global_palette","write_frame","write_extension","write_raw_extension"],"q":["gif","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gif::ExtensionData","","","gifd":["Implemented for objects that have parameters.","Sets <code>value</code> as a parameter of <code>self</code>.","Configuration parameter trait.","Result type of <code>set_param</code>.","Sets <code>self</code> as a parameter of <code>Object</code>.","Known GIF block types","Image block.","Extension block.","Image trailer.","Known GIF extensions","Text extension.","Control extension.","Comment extension.","Application extension.","Disposal method","StreamingDecoder is not required to take any action.","Do not dispose.","Restore to background color.","Restore to previous.","A GIF frame","Frame delay in units of 10 ms.","Disposal method.","Transparent index (if available).","True if the frame needs user input to be displayed.","Offset from the top border of the canvas.","Offset from the left border of the canvas.","Width of the frame.","Height of the frame.","True if the image is interlaced.","Frame local color palette if available.","Buffer containing the image data. Only indices unless …","GIF decoder which supports streaming","Indicates whether a certain object has been decoded","Decoded nothing.","Global palette.","Index of the background color in the global palette.","Decoded the image trailer.","The start of a block.","Decoded a sub-block. More sub-block are available.","Decoded the last (or only) sub-block of a block.","Decoded all information of the next frame. The returned …","Decoded some data of the current frame.","No more data available the current frame.","Decoding error.","Returned if the image is found to be malformed.","Internal (logic) error.","Wraps <code>std::io::Error</code>.","Output mode for the image data","The decoder expands the image data to 32bit RGBA. This …","The decoder returns the raw indexed data.","Memory limit in bytes. <code>MemoryLimit::Some(0)</code> means that …","","Configures how extensions should be handled","Saves all extention data","Skips the data of unknown extensions and extracts the …","GIF decoder","GIF decoder","GIF encoder.","Extension data.","Control extension. Use <code>ExtensionData::new_control_ext</code> to …","Flags.","Frame delay.","Transparent index.","Sets the number of repetitions","Number of repetitions","Finite number of repetitions","Infinite number of repetitions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets <code>value</code> as a parameter of <code>self</code>.","Converts <code>u8</code> to <code>Option<Self></code>","Converts <code>u8</code> to <code>Option<Self></code>","Converts <code>u8</code> to <code>Option<Self></code>","Creates a frame from pixels in RGBA format. <em>Note: This …","Creates a frame from pixels in RGBA format. <code>speed</code> is a …","Creates a frame from a palette and indexed pixels.","Creates a frame from indexed pixels in the global palette.","Creates a frame from pixels in RGB format. <em>Note: This …","Creates a frame from pixels in RGB format. <code>speed</code> is a …","Creates a new streaming decoder","Updates the internal state of the decoder. ","Returns the data of the last extension that has been …","Current frame info as a mutable ref.","Current frame info as a ref.","Width of the image","Height of the image","Creates a new decoder builder","Reads the logical screen descriptor including the global …","Returns the next frame info","Reads the next frame from the image.","Reads the data of the current frame into a pre-allocated …","Reads data of the current frame into a pre-allocated …","Output buffer size","Line length of the current frame","Returns the color palette relevant for the current (next) …","The global color palette","Width of the image","Height of the image","Index of the background color in the global palette","Constructor for control extension data.","Creates a new encoder.","Writes the global color palette.","Writes a frame to the image.","Writes an extension to the image.","Writes a raw extension to the image."],"i":[0,1,0,2,2,0,3,3,3,0,4,4,4,4,0,5,5,5,5,0,6,6,6,6,6,6,6,6,6,6,6,0,0,7,7,7,7,7,7,7,7,7,7,0,8,8,8,0,9,9,0,10,0,11,11,0,0,0,0,12,13,13,13,12,0,14,14,5,5,5,5,5,5,5,5,5,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,6,6,6,6,6,6,6,6,6,8,8,8,8,8,8,8,8,11,11,11,11,11,11,11,7,7,7,7,7,7,7,15,15,15,15,15,15,15,9,9,9,9,9,9,9,10,10,10,10,10,10,10,16,16,16,16,16,16,16,17,17,17,17,17,17,17,14,14,14,14,14,14,14,12,12,12,12,12,12,12,18,18,18,18,18,18,18,11,9,10,14,18,8,5,3,4,6,6,5,3,4,11,9,5,3,4,6,8,11,7,15,9,10,8,8,8,1,5,3,4,6,6,6,6,6,6,15,15,15,15,15,15,15,16,16,17,17,17,17,17,17,17,17,17,17,17,12,18,18,18,18,18],"f":[null,[[["parameter",8]]],null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["streamingdecoder",3]]],[[["decoder",3]]],[[["decoder",3]]],[[["encoder",3]]],[[]],[[["error",3]]],[[],["disposalmethod",4]],[[],["block",4]],[[],["extension",4]],[[],["frame",3]],[[],["frame",3]],[[["disposalmethod",4]],["bool",15]],[[["block",4]],["bool",15]],[[["extension",4]],["bool",15]],[[["extensions",4]],["bool",15]],[[["coloroutput",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["str",15]],[[],[["error",8],["option",4]]],[[["parameter",8]]],[[["u8",15]],[["option",4],["disposalmethod",4]]],[[["u8",15]],[["option",4],["block",4]]],[[["u8",15]],[["option",4],["extension",4]]],[[["u16",15]],["frame",3]],[[["u16",15],["i32",15]],["frame",3]],[[["option",4],["u16",15],["u8",15]],["frame",3]],[[["option",4],["u16",15],["u8",15]],["frame",3]],[[["u16",15]],["frame",3]],[[["u16",15],["i32",15]],["frame",3]],[[],["streamingdecoder",3]],[[],[["decodingerror",4],["result",4]]],[[]],[[],["frame",3]],[[],["frame",3]],[[],["u16",15]],[[],["u16",15]],[[],["decoder",3]],[[],[["result",4],["reader",3],["decodingerror",4]]],[[],[["decodingerror",4],["option",4],["result",4]]],[[],[["decodingerror",4],["option",4],["result",4]]],[[],[["result",4],["decodingerror",4]]],[[],[["bool",15],["result",4],["decodingerror",4]]],[[],["usize",15]],[[],["usize",15]],[[],[["result",4],["decodingerror",4]]],[[],["option",4]],[[],["u16",15]],[[],["u16",15]],[[],[["usize",15],["option",4]]],[[["option",4],["u16",15],["u8",15],["bool",15],["disposalmethod",4]],["extensiondata",4]],[[["u16",15]],["result",6]],[[],["result",6]],[[["frame",3]],["result",6]],[[["extensiondata",4]],["result",6]],[[["u8",15]],["result",6]]],"p":[[8,"SetParameter"],[8,"Parameter"],[4,"Block"],[4,"Extension"],[4,"DisposalMethod"],[3,"Frame"],[4,"Decoded"],[4,"DecodingError"],[4,"ColorOutput"],[3,"MemoryLimit"],[4,"Extensions"],[4,"ExtensionData"],[13,"Control"],[4,"Repeat"],[3,"StreamingDecoder"],[3,"Decoder"],[3,"Reader"],[3,"Encoder"]]},\
"gl":{"doc":"Usage","t":[0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,4,6,4,4,6,6,6,6,6,6,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,0,5,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["types","GLenum","GLboolean","GLbitfield","GLvoid","GLbyte","GLshort","GLint","GLclampx","GLubyte","GLushort","GLuint","GLsizei","GLfloat","GLclampf","GLdouble","GLclampd","GLeglImageOES","GLchar","GLcharARB","GLhandleARB","GLhalfARB","GLhalf","GLfixed","GLintptr","GLsizeiptr","GLint64","GLuint64","GLintptrARB","GLsizeiptrARB","GLint64EXT","GLuint64EXT","__GLsync","GLsync","_cl_context","_cl_event","GLDEBUGPROC","GLDEBUGPROCARB","GLDEBUGPROCKHR","GLDEBUGPROCAMD","GLhalfNV","GLvdpauSurfaceNV","ActiveShaderProgram","is_loaded","load_with","ActiveTexture","is_loaded","load_with","AttachShader","is_loaded","load_with","BeginConditionalRender","is_loaded","load_with","BeginQuery","is_loaded","load_with","BeginQueryIndexed","is_loaded","load_with","BeginTransformFeedback","is_loaded","load_with","BindAttribLocation","is_loaded","load_with","BindBuffer","is_loaded","load_with","BindBufferBase","is_loaded","load_with","BindBufferRange","is_loaded","load_with","BindBuffersBase","is_loaded","load_with","BindBuffersRange","is_loaded","load_with","BindFragDataLocation","is_loaded","load_with","BindFragDataLocationIndexed","is_loaded","load_with","BindFramebuffer","is_loaded","load_with","BindImageTexture","is_loaded","load_with","BindImageTextures","is_loaded","load_with","BindProgramPipeline","is_loaded","load_with","BindRenderbuffer","is_loaded","load_with","BindSampler","is_loaded","load_with","BindSamplers","is_loaded","load_with","BindTexture","is_loaded","load_with","BindTextureUnit","is_loaded","load_with","BindTextures","is_loaded","load_with","BindTransformFeedback","is_loaded","load_with","BindVertexArray","is_loaded","load_with","BindVertexBuffer","is_loaded","load_with","BindVertexBuffers","is_loaded","load_with","BlendColor","is_loaded","load_with","BlendEquation","is_loaded","load_with","BlendEquationSeparate","is_loaded","load_with","BlendEquationSeparatei","is_loaded","load_with","BlendEquationi","is_loaded","load_with","BlendFunc","is_loaded","load_with","BlendFuncSeparate","is_loaded","load_with","BlendFuncSeparatei","is_loaded","load_with","BlendFunci","is_loaded","load_with","BlitFramebuffer","is_loaded","load_with","BlitNamedFramebuffer","is_loaded","load_with","BufferData","is_loaded","load_with","BufferStorage","is_loaded","load_with","BufferSubData","is_loaded","load_with","CheckFramebufferStatus","is_loaded","load_with","CheckNamedFramebufferStatus","is_loaded","load_with","ClampColor","is_loaded","load_with","Clear","is_loaded","load_with","ClearBufferData","is_loaded","load_with","ClearBufferSubData","is_loaded","load_with","ClearBufferfi","is_loaded","load_with","ClearBufferfv","is_loaded","load_with","ClearBufferiv","is_loaded","load_with","ClearBufferuiv","is_loaded","load_with","ClearColor","is_loaded","load_with","ClearDepth","is_loaded","load_with","ClearDepthf","is_loaded","load_with","ClearNamedBufferData","is_loaded","load_with","ClearNamedBufferSubData","is_loaded","load_with","ClearNamedFramebufferfi","is_loaded","load_with","ClearNamedFramebufferfv","is_loaded","load_with","ClearNamedFramebufferiv","is_loaded","load_with","ClearNamedFramebufferuiv","is_loaded","load_with","ClearStencil","is_loaded","load_with","ClearTexImage","is_loaded","load_with","ClearTexSubImage","is_loaded","load_with","ClientWaitSync","is_loaded","load_with","ClipControl","is_loaded","load_with","ColorMask","is_loaded","load_with","ColorMaski","is_loaded","load_with","ColorP3ui","is_loaded","load_with","ColorP3uiv","is_loaded","load_with","ColorP4ui","is_loaded","load_with","ColorP4uiv","is_loaded","load_with","CompileShader","is_loaded","load_with","CompressedTexImage1D","is_loaded","load_with","CompressedTexImage2D","is_loaded","load_with","CompressedTexImage3D","is_loaded","load_with","CompressedTexSubImage1D","is_loaded","load_with","CompressedTexSubImage2D","is_loaded","load_with","CompressedTexSubImage3D","is_loaded","load_with","CompressedTextureSubImage1D","is_loaded","load_with","CompressedTextureSubImage2D","is_loaded","load_with","CompressedTextureSubImage3D","is_loaded","load_with","CopyBufferSubData","is_loaded","load_with","CopyImageSubData","is_loaded","load_with","CopyNamedBufferSubData","is_loaded","load_with","CopyTexImage1D","is_loaded","load_with","CopyTexImage2D","is_loaded","load_with","CopyTexSubImage1D","is_loaded","load_with","CopyTexSubImage2D","is_loaded","load_with","CopyTexSubImage3D","is_loaded","load_with","CopyTextureSubImage1D","is_loaded","load_with","CopyTextureSubImage2D","is_loaded","load_with","CopyTextureSubImage3D","is_loaded","load_with","CreateBuffers","is_loaded","load_with","CreateFramebuffers","is_loaded","load_with","CreateProgram","is_loaded","load_with","CreateProgramPipelines","is_loaded","load_with","CreateQueries","is_loaded","load_with","CreateRenderbuffers","is_loaded","load_with","CreateSamplers","is_loaded","load_with","CreateShader","is_loaded","load_with","CreateShaderProgramv","is_loaded","load_with","CreateTextures","is_loaded","load_with","CreateTransformFeedbacks","is_loaded","load_with","CreateVertexArrays","is_loaded","load_with","CullFace","is_loaded","load_with","DebugMessageCallback","is_loaded","load_with","DebugMessageControl","is_loaded","load_with","DebugMessageInsert","is_loaded","load_with","DeleteBuffers","is_loaded","load_with","DeleteFramebuffers","is_loaded","load_with","DeleteProgram","is_loaded","load_with","DeleteProgramPipelines","is_loaded","load_with","DeleteQueries","is_loaded","load_with","DeleteRenderbuffers","is_loaded","load_with","DeleteSamplers","is_loaded","load_with","DeleteShader","is_loaded","load_with","DeleteSync","is_loaded","load_with","DeleteTextures","is_loaded","load_with","DeleteTransformFeedbacks","is_loaded","load_with","DeleteVertexArrays","is_loaded","load_with","DepthFunc","is_loaded","load_with","DepthMask","is_loaded","load_with","DepthRange","is_loaded","load_with","DepthRangeArrayv","is_loaded","load_with","DepthRangeIndexed","is_loaded","load_with","DepthRangef","is_loaded","load_with","DetachShader","is_loaded","load_with","Disable","is_loaded","load_with","DisableVertexArrayAttrib","is_loaded","load_with","DisableVertexAttribArray","is_loaded","load_with","Disablei","is_loaded","load_with","DispatchCompute","is_loaded","load_with","DispatchComputeIndirect","is_loaded","load_with","DrawArrays","is_loaded","load_with","DrawArraysIndirect","is_loaded","load_with","DrawArraysInstanced","is_loaded","load_with","DrawArraysInstancedBaseInstance","is_loaded","load_with","DrawBuffer","is_loaded","load_with","DrawBuffers","is_loaded","load_with","DrawElements","is_loaded","load_with","DrawElementsBaseVertex","is_loaded","load_with","DrawElementsIndirect","is_loaded","load_with","DrawElementsInstanced","is_loaded","load_with","DrawElementsInstancedBaseInstance","is_loaded","load_with","DrawElementsInstancedBaseVertex","is_loaded","load_with","DrawElementsInstancedBaseVertexBaseInstance","is_loaded","load_with","DrawRangeElements","is_loaded","load_with","DrawRangeElementsBaseVertex","is_loaded","load_with","DrawTransformFeedback","is_loaded","load_with","DrawTransformFeedbackInstanced","is_loaded","load_with","DrawTransformFeedbackStream","is_loaded","load_with","DrawTransformFeedbackStreamInstanced","is_loaded","load_with","Enable","is_loaded","load_with","EnableVertexArrayAttrib","is_loaded","load_with","EnableVertexAttribArray","is_loaded","load_with","Enablei","is_loaded","load_with","EndConditionalRender","is_loaded","load_with","EndQuery","is_loaded","load_with","EndQueryIndexed","is_loaded","load_with","EndTransformFeedback","is_loaded","load_with","FenceSync","is_loaded","load_with","Finish","is_loaded","load_with","Flush","is_loaded","load_with","FlushMappedBufferRange","is_loaded","load_with","FlushMappedNamedBufferRange","is_loaded","load_with","FramebufferParameteri","is_loaded","load_with","FramebufferRenderbuffer","is_loaded","load_with","FramebufferTexture","is_loaded","load_with","FramebufferTexture1D","is_loaded","load_with","FramebufferTexture2D","is_loaded","load_with","FramebufferTexture3D","is_loaded","load_with","FramebufferTextureLayer","is_loaded","load_with","FrontFace","is_loaded","load_with","GenBuffers","is_loaded","load_with","GenFramebuffers","is_loaded","load_with","GenProgramPipelines","is_loaded","load_with","GenQueries","is_loaded","load_with","GenRenderbuffers","is_loaded","load_with","GenSamplers","is_loaded","load_with","GenTextures","is_loaded","load_with","GenTransformFeedbacks","is_loaded","load_with","GenVertexArrays","is_loaded","load_with","GenerateMipmap","is_loaded","load_with","GenerateTextureMipmap","is_loaded","load_with","GetActiveAtomicCounterBufferiv","is_loaded","load_with","GetActiveAttrib","is_loaded","load_with","GetActiveSubroutineName","is_loaded","load_with","GetActiveSubroutineUniformName","is_loaded","load_with","GetActiveSubroutineUniformiv","is_loaded","load_with","GetActiveUniform","is_loaded","load_with","GetActiveUniformBlockName","is_loaded","load_with","GetActiveUniformBlockiv","is_loaded","load_with","GetActiveUniformName","is_loaded","load_with","GetActiveUniformsiv","is_loaded","load_with","GetAttachedShaders","is_loaded","load_with","GetAttribLocation","is_loaded","load_with","GetBooleani_v","is_loaded","load_with","GetBooleanv","is_loaded","load_with","GetBufferParameteri64v","is_loaded","load_with","GetBufferParameteriv","is_loaded","load_with","GetBufferPointerv","is_loaded","load_with","GetBufferSubData","is_loaded","load_with","GetCompressedTexImage","is_loaded","load_with","GetCompressedTextureImage","is_loaded","load_with","GetCompressedTextureSubImage","is_loaded","load_with","GetDebugMessageLog","is_loaded","load_with","GetDoublei_v","is_loaded","load_with","GetDoublev","is_loaded","load_with","GetError","is_loaded","load_with","GetFloati_v","is_loaded","load_with","GetFloatv","is_loaded","load_with","GetFragDataIndex","is_loaded","load_with","GetFragDataLocation","is_loaded","load_with","GetFramebufferAttachmentParameteriv","is_loaded","load_with","GetFramebufferParameteriv","is_loaded","load_with","GetGraphicsResetStatus","is_loaded","load_with","GetInteger64i_v","is_loaded","load_with","GetInteger64v","is_loaded","load_with","GetIntegeri_v","is_loaded","load_with","GetIntegerv","is_loaded","load_with","GetInternalformati64v","is_loaded","load_with","GetInternalformativ","is_loaded","load_with","GetMultisamplefv","is_loaded","load_with","GetNamedBufferParameteri64v","is_loaded","load_with","GetNamedBufferParameteriv","is_loaded","load_with","GetNamedBufferPointerv","is_loaded","load_with","GetNamedBufferSubData","is_loaded","load_with","GetNamedFramebufferAttachmentParameteriv","is_loaded","load_with","GetNamedFramebufferParameteriv","is_loaded","load_with","GetNamedRenderbufferParameteriv","is_loaded","load_with","GetObjectLabel","is_loaded","load_with","GetObjectPtrLabel","is_loaded","load_with","GetPointerv","is_loaded","load_with","GetProgramBinary","is_loaded","load_with","GetProgramInfoLog","is_loaded","load_with","GetProgramInterfaceiv","is_loaded","load_with","GetProgramPipelineInfoLog","is_loaded","load_with","GetProgramPipelineiv","is_loaded","load_with","GetProgramResourceIndex","is_loaded","load_with","GetProgramResourceLocation","is_loaded","load_with","GetProgramResourceLocationIndex","is_loaded","load_with","GetProgramResourceName","is_loaded","load_with","GetProgramResourceiv","is_loaded","load_with","GetProgramStageiv","is_loaded","load_with","GetProgramiv","is_loaded","load_with","GetQueryBufferObjecti64v","is_loaded","load_with","GetQueryBufferObjectiv","is_loaded","load_with","GetQueryBufferObjectui64v","is_loaded","load_with","GetQueryBufferObjectuiv","is_loaded","load_with","GetQueryIndexediv","is_loaded","load_with","GetQueryObjecti64v","is_loaded","load_with","GetQueryObjectiv","is_loaded","load_with","GetQueryObjectui64v","is_loaded","load_with","GetQueryObjectuiv","is_loaded","load_with","GetQueryiv","is_loaded","load_with","GetRenderbufferParameteriv","is_loaded","load_with","GetSamplerParameterIiv","is_loaded","load_with","GetSamplerParameterIuiv","is_loaded","load_with","GetSamplerParameterfv","is_loaded","load_with","GetSamplerParameteriv","is_loaded","load_with","GetShaderInfoLog","is_loaded","load_with","GetShaderPrecisionFormat","is_loaded","load_with","GetShaderSource","is_loaded","load_with","GetShaderiv","is_loaded","load_with","GetString","is_loaded","load_with","GetStringi","is_loaded","load_with","GetSubroutineIndex","is_loaded","load_with","GetSubroutineUniformLocation","is_loaded","load_with","GetSynciv","is_loaded","load_with","GetTexImage","is_loaded","load_with","GetTexLevelParameterfv","is_loaded","load_with","GetTexLevelParameteriv","is_loaded","load_with","GetTexParameterIiv","is_loaded","load_with","GetTexParameterIuiv","is_loaded","load_with","GetTexParameterfv","is_loaded","load_with","GetTexParameteriv","is_loaded","load_with","GetTextureImage","is_loaded","load_with","GetTextureLevelParameterfv","is_loaded","load_with","GetTextureLevelParameteriv","is_loaded","load_with","GetTextureParameterIiv","is_loaded","load_with","GetTextureParameterIuiv","is_loaded","load_with","GetTextureParameterfv","is_loaded","load_with","GetTextureParameteriv","is_loaded","load_with","GetTextureSubImage","is_loaded","load_with","GetTransformFeedbackVarying","is_loaded","load_with","GetTransformFeedbacki64_v","is_loaded","load_with","GetTransformFeedbacki_v","is_loaded","load_with","GetTransformFeedbackiv","is_loaded","load_with","GetUniformBlockIndex","is_loaded","load_with","GetUniformIndices","is_loaded","load_with","GetUniformLocation","is_loaded","load_with","GetUniformSubroutineuiv","is_loaded","load_with","GetUniformdv","is_loaded","load_with","GetUniformfv","is_loaded","load_with","GetUniformiv","is_loaded","load_with","GetUniformuiv","is_loaded","load_with","GetVertexArrayIndexed64iv","is_loaded","load_with","GetVertexArrayIndexediv","is_loaded","load_with","GetVertexArrayiv","is_loaded","load_with","GetVertexAttribIiv","is_loaded","load_with","GetVertexAttribIuiv","is_loaded","load_with","GetVertexAttribLdv","is_loaded","load_with","GetVertexAttribPointerv","is_loaded","load_with","GetVertexAttribdv","is_loaded","load_with","GetVertexAttribfv","is_loaded","load_with","GetVertexAttribiv","is_loaded","load_with","GetnColorTable","is_loaded","load_with","GetnCompressedTexImage","is_loaded","load_with","GetnConvolutionFilter","is_loaded","load_with","GetnHistogram","is_loaded","load_with","GetnMapdv","is_loaded","load_with","GetnMapfv","is_loaded","load_with","GetnMapiv","is_loaded","load_with","GetnMinmax","is_loaded","load_with","GetnPixelMapfv","is_loaded","load_with","GetnPixelMapuiv","is_loaded","load_with","GetnPixelMapusv","is_loaded","load_with","GetnPolygonStipple","is_loaded","load_with","GetnSeparableFilter","is_loaded","load_with","GetnTexImage","is_loaded","load_with","GetnUniformdv","is_loaded","load_with","GetnUniformfv","is_loaded","load_with","GetnUniformiv","is_loaded","load_with","GetnUniformuiv","is_loaded","load_with","Hint","is_loaded","load_with","InvalidateBufferData","is_loaded","load_with","InvalidateBufferSubData","is_loaded","load_with","InvalidateFramebuffer","is_loaded","load_with","InvalidateNamedFramebufferData","is_loaded","load_with","InvalidateNamedFramebufferSubData","is_loaded","load_with","InvalidateSubFramebuffer","is_loaded","load_with","InvalidateTexImage","is_loaded","load_with","InvalidateTexSubImage","is_loaded","load_with","IsBuffer","is_loaded","load_with","IsEnabled","is_loaded","load_with","IsEnabledi","is_loaded","load_with","IsFramebuffer","is_loaded","load_with","IsProgram","is_loaded","load_with","IsProgramPipeline","is_loaded","load_with","IsQuery","is_loaded","load_with","IsRenderbuffer","is_loaded","load_with","IsSampler","is_loaded","load_with","IsShader","is_loaded","load_with","IsSync","is_loaded","load_with","IsTexture","is_loaded","load_with","IsTransformFeedback","is_loaded","load_with","IsVertexArray","is_loaded","load_with","LineWidth","is_loaded","load_with","LinkProgram","is_loaded","load_with","LogicOp","is_loaded","load_with","MapBuffer","is_loaded","load_with","MapBufferRange","is_loaded","load_with","MapNamedBuffer","is_loaded","load_with","MapNamedBufferRange","is_loaded","load_with","MemoryBarrier","is_loaded","load_with","MemoryBarrierByRegion","is_loaded","load_with","MinSampleShading","is_loaded","load_with","MultiDrawArrays","is_loaded","load_with","MultiDrawArraysIndirect","is_loaded","load_with","MultiDrawElements","is_loaded","load_with","MultiDrawElementsBaseVertex","is_loaded","load_with","MultiDrawElementsIndirect","is_loaded","load_with","MultiTexCoordP1ui","is_loaded","load_with","MultiTexCoordP1uiv","is_loaded","load_with","MultiTexCoordP2ui","is_loaded","load_with","MultiTexCoordP2uiv","is_loaded","load_with","MultiTexCoordP3ui","is_loaded","load_with","MultiTexCoordP3uiv","is_loaded","load_with","MultiTexCoordP4ui","is_loaded","load_with","MultiTexCoordP4uiv","is_loaded","load_with","NamedBufferData","is_loaded","load_with","NamedBufferStorage","is_loaded","load_with","NamedBufferSubData","is_loaded","load_with","NamedFramebufferDrawBuffer","is_loaded","load_with","NamedFramebufferDrawBuffers","is_loaded","load_with","NamedFramebufferParameteri","is_loaded","load_with","NamedFramebufferReadBuffer","is_loaded","load_with","NamedFramebufferRenderbuffer","is_loaded","load_with","NamedFramebufferTexture","is_loaded","load_with","NamedFramebufferTextureLayer","is_loaded","load_with","NamedRenderbufferStorage","is_loaded","load_with","NamedRenderbufferStorageMultisample","is_loaded","load_with","NormalP3ui","is_loaded","load_with","NormalP3uiv","is_loaded","load_with","ObjectLabel","is_loaded","load_with","ObjectPtrLabel","is_loaded","load_with","PatchParameterfv","is_loaded","load_with","PatchParameteri","is_loaded","load_with","PauseTransformFeedback","is_loaded","load_with","PixelStoref","is_loaded","load_with","PixelStorei","is_loaded","load_with","PointParameterf","is_loaded","load_with","PointParameterfv","is_loaded","load_with","PointParameteri","is_loaded","load_with","PointParameteriv","is_loaded","load_with","PointSize","is_loaded","load_with","PolygonMode","is_loaded","load_with","PolygonOffset","is_loaded","load_with","PopDebugGroup","is_loaded","load_with","PrimitiveRestartIndex","is_loaded","load_with","ProgramBinary","is_loaded","load_with","ProgramParameteri","is_loaded","load_with","ProgramUniform1d","is_loaded","load_with","ProgramUniform1dv","is_loaded","load_with","ProgramUniform1f","is_loaded","load_with","ProgramUniform1fv","is_loaded","load_with","ProgramUniform1i","is_loaded","load_with","ProgramUniform1iv","is_loaded","load_with","ProgramUniform1ui","is_loaded","load_with","ProgramUniform1uiv","is_loaded","load_with","ProgramUniform2d","is_loaded","load_with","ProgramUniform2dv","is_loaded","load_with","ProgramUniform2f","is_loaded","load_with","ProgramUniform2fv","is_loaded","load_with","ProgramUniform2i","is_loaded","load_with","ProgramUniform2iv","is_loaded","load_with","ProgramUniform2ui","is_loaded","load_with","ProgramUniform2uiv","is_loaded","load_with","ProgramUniform3d","is_loaded","load_with","ProgramUniform3dv","is_loaded","load_with","ProgramUniform3f","is_loaded","load_with","ProgramUniform3fv","is_loaded","load_with","ProgramUniform3i","is_loaded","load_with","ProgramUniform3iv","is_loaded","load_with","ProgramUniform3ui","is_loaded","load_with","ProgramUniform3uiv","is_loaded","load_with","ProgramUniform4d","is_loaded","load_with","ProgramUniform4dv","is_loaded","load_with","ProgramUniform4f","is_loaded","load_with","ProgramUniform4fv","is_loaded","load_with","ProgramUniform4i","is_loaded","load_with","ProgramUniform4iv","is_loaded","load_with","ProgramUniform4ui","is_loaded","load_with","ProgramUniform4uiv","is_loaded","load_with","ProgramUniformMatrix2dv","is_loaded","load_with","ProgramUniformMatrix2fv","is_loaded","load_with","ProgramUniformMatrix2x3dv","is_loaded","load_with","ProgramUniformMatrix2x3fv","is_loaded","load_with","ProgramUniformMatrix2x4dv","is_loaded","load_with","ProgramUniformMatrix2x4fv","is_loaded","load_with","ProgramUniformMatrix3dv","is_loaded","load_with","ProgramUniformMatrix3fv","is_loaded","load_with","ProgramUniformMatrix3x2dv","is_loaded","load_with","ProgramUniformMatrix3x2fv","is_loaded","load_with","ProgramUniformMatrix3x4dv","is_loaded","load_with","ProgramUniformMatrix3x4fv","is_loaded","load_with","ProgramUniformMatrix4dv","is_loaded","load_with","ProgramUniformMatrix4fv","is_loaded","load_with","ProgramUniformMatrix4x2dv","is_loaded","load_with","ProgramUniformMatrix4x2fv","is_loaded","load_with","ProgramUniformMatrix4x3dv","is_loaded","load_with","ProgramUniformMatrix4x3fv","is_loaded","load_with","ProvokingVertex","is_loaded","load_with","PushDebugGroup","is_loaded","load_with","QueryCounter","is_loaded","load_with","ReadBuffer","is_loaded","load_with","ReadPixels","is_loaded","load_with","ReadnPixels","is_loaded","load_with","ReleaseShaderCompiler","is_loaded","load_with","RenderbufferStorage","is_loaded","load_with","RenderbufferStorageMultisample","is_loaded","load_with","ResumeTransformFeedback","is_loaded","load_with","SampleCoverage","is_loaded","load_with","SampleMaski","is_loaded","load_with","SamplerParameterIiv","is_loaded","load_with","SamplerParameterIuiv","is_loaded","load_with","SamplerParameterf","is_loaded","load_with","SamplerParameterfv","is_loaded","load_with","SamplerParameteri","is_loaded","load_with","SamplerParameteriv","is_loaded","load_with","Scissor","is_loaded","load_with","ScissorArrayv","is_loaded","load_with","ScissorIndexed","is_loaded","load_with","ScissorIndexedv","is_loaded","load_with","SecondaryColorP3ui","is_loaded","load_with","SecondaryColorP3uiv","is_loaded","load_with","ShaderBinary","is_loaded","load_with","ShaderSource","is_loaded","load_with","ShaderStorageBlockBinding","is_loaded","load_with","StencilFunc","is_loaded","load_with","StencilFuncSeparate","is_loaded","load_with","StencilMask","is_loaded","load_with","StencilMaskSeparate","is_loaded","load_with","StencilOp","is_loaded","load_with","StencilOpSeparate","is_loaded","load_with","TexBuffer","is_loaded","load_with","TexBufferRange","is_loaded","load_with","TexCoordP1ui","is_loaded","load_with","TexCoordP1uiv","is_loaded","load_with","TexCoordP2ui","is_loaded","load_with","TexCoordP2uiv","is_loaded","load_with","TexCoordP3ui","is_loaded","load_with","TexCoordP3uiv","is_loaded","load_with","TexCoordP4ui","is_loaded","load_with","TexCoordP4uiv","is_loaded","load_with","TexImage1D","is_loaded","load_with","TexImage2D","is_loaded","load_with","TexImage2DMultisample","is_loaded","load_with","TexImage3D","is_loaded","load_with","TexImage3DMultisample","is_loaded","load_with","TexParameterIiv","is_loaded","load_with","TexParameterIuiv","is_loaded","load_with","TexParameterf","is_loaded","load_with","TexParameterfv","is_loaded","load_with","TexParameteri","is_loaded","load_with","TexParameteriv","is_loaded","load_with","TexStorage1D","is_loaded","load_with","TexStorage2D","is_loaded","load_with","TexStorage2DMultisample","is_loaded","load_with","TexStorage3D","is_loaded","load_with","TexStorage3DMultisample","is_loaded","load_with","TexSubImage1D","is_loaded","load_with","TexSubImage2D","is_loaded","load_with","TexSubImage3D","is_loaded","load_with","TextureBarrier","is_loaded","load_with","TextureBuffer","is_loaded","load_with","TextureBufferRange","is_loaded","load_with","TextureParameterIiv","is_loaded","load_with","TextureParameterIuiv","is_loaded","load_with","TextureParameterf","is_loaded","load_with","TextureParameterfv","is_loaded","load_with","TextureParameteri","is_loaded","load_with","TextureParameteriv","is_loaded","load_with","TextureStorage1D","is_loaded","load_with","TextureStorage2D","is_loaded","load_with","TextureStorage2DMultisample","is_loaded","load_with","TextureStorage3D","is_loaded","load_with","TextureStorage3DMultisample","is_loaded","load_with","TextureSubImage1D","is_loaded","load_with","TextureSubImage2D","is_loaded","load_with","TextureSubImage3D","is_loaded","load_with","TextureView","is_loaded","load_with","TransformFeedbackBufferBase","is_loaded","load_with","TransformFeedbackBufferRange","is_loaded","load_with","TransformFeedbackVaryings","is_loaded","load_with","Uniform1d","is_loaded","load_with","Uniform1dv","is_loaded","load_with","Uniform1f","is_loaded","load_with","Uniform1fv","is_loaded","load_with","Uniform1i","is_loaded","load_with","Uniform1iv","is_loaded","load_with","Uniform1ui","is_loaded","load_with","Uniform1uiv","is_loaded","load_with","Uniform2d","is_loaded","load_with","Uniform2dv","is_loaded","load_with","Uniform2f","is_loaded","load_with","Uniform2fv","is_loaded","load_with","Uniform2i","is_loaded","load_with","Uniform2iv","is_loaded","load_with","Uniform2ui","is_loaded","load_with","Uniform2uiv","is_loaded","load_with","Uniform3d","is_loaded","load_with","Uniform3dv","is_loaded","load_with","Uniform3f","is_loaded","load_with","Uniform3fv","is_loaded","load_with","Uniform3i","is_loaded","load_with","Uniform3iv","is_loaded","load_with","Uniform3ui","is_loaded","load_with","Uniform3uiv","is_loaded","load_with","Uniform4d","is_loaded","load_with","Uniform4dv","is_loaded","load_with","Uniform4f","is_loaded","load_with","Uniform4fv","is_loaded","load_with","Uniform4i","is_loaded","load_with","Uniform4iv","is_loaded","load_with","Uniform4ui","is_loaded","load_with","Uniform4uiv","is_loaded","load_with","UniformBlockBinding","is_loaded","load_with","UniformMatrix2dv","is_loaded","load_with","UniformMatrix2fv","is_loaded","load_with","UniformMatrix2x3dv","is_loaded","load_with","UniformMatrix2x3fv","is_loaded","load_with","UniformMatrix2x4dv","is_loaded","load_with","UniformMatrix2x4fv","is_loaded","load_with","UniformMatrix3dv","is_loaded","load_with","UniformMatrix3fv","is_loaded","load_with","UniformMatrix3x2dv","is_loaded","load_with","UniformMatrix3x2fv","is_loaded","load_with","UniformMatrix3x4dv","is_loaded","load_with","UniformMatrix3x4fv","is_loaded","load_with","UniformMatrix4dv","is_loaded","load_with","UniformMatrix4fv","is_loaded","load_with","UniformMatrix4x2dv","is_loaded","load_with","UniformMatrix4x2fv","is_loaded","load_with","UniformMatrix4x3dv","is_loaded","load_with","UniformMatrix4x3fv","is_loaded","load_with","UniformSubroutinesuiv","is_loaded","load_with","UnmapBuffer","is_loaded","load_with","UnmapNamedBuffer","is_loaded","load_with","UseProgram","is_loaded","load_with","UseProgramStages","is_loaded","load_with","ValidateProgram","is_loaded","load_with","ValidateProgramPipeline","is_loaded","load_with","VertexArrayAttribBinding","is_loaded","load_with","VertexArrayAttribFormat","is_loaded","load_with","VertexArrayAttribIFormat","is_loaded","load_with","VertexArrayAttribLFormat","is_loaded","load_with","VertexArrayBindingDivisor","is_loaded","load_with","VertexArrayElementBuffer","is_loaded","load_with","VertexArrayVertexBuffer","is_loaded","load_with","VertexArrayVertexBuffers","is_loaded","load_with","VertexAttrib1d","is_loaded","load_with","VertexAttrib1dv","is_loaded","load_with","VertexAttrib1f","is_loaded","load_with","VertexAttrib1fv","is_loaded","load_with","VertexAttrib1s","is_loaded","load_with","VertexAttrib1sv","is_loaded","load_with","VertexAttrib2d","is_loaded","load_with","VertexAttrib2dv","is_loaded","load_with","VertexAttrib2f","is_loaded","load_with","VertexAttrib2fv","is_loaded","load_with","VertexAttrib2s","is_loaded","load_with","VertexAttrib2sv","is_loaded","load_with","VertexAttrib3d","is_loaded","load_with","VertexAttrib3dv","is_loaded","load_with","VertexAttrib3f","is_loaded","load_with","VertexAttrib3fv","is_loaded","load_with","VertexAttrib3s","is_loaded","load_with","VertexAttrib3sv","is_loaded","load_with","VertexAttrib4Nbv","is_loaded","load_with","VertexAttrib4Niv","is_loaded","load_with","VertexAttrib4Nsv","is_loaded","load_with","VertexAttrib4Nub","is_loaded","load_with","VertexAttrib4Nubv","is_loaded","load_with","VertexAttrib4Nuiv","is_loaded","load_with","VertexAttrib4Nusv","is_loaded","load_with","VertexAttrib4bv","is_loaded","load_with","VertexAttrib4d","is_loaded","load_with","VertexAttrib4dv","is_loaded","load_with","VertexAttrib4f","is_loaded","load_with","VertexAttrib4fv","is_loaded","load_with","VertexAttrib4iv","is_loaded","load_with","VertexAttrib4s","is_loaded","load_with","VertexAttrib4sv","is_loaded","load_with","VertexAttrib4ubv","is_loaded","load_with","VertexAttrib4uiv","is_loaded","load_with","VertexAttrib4usv","is_loaded","load_with","VertexAttribBinding","is_loaded","load_with","VertexAttribDivisor","is_loaded","load_with","VertexAttribFormat","is_loaded","load_with","VertexAttribI1i","is_loaded","load_with","VertexAttribI1iv","is_loaded","load_with","VertexAttribI1ui","is_loaded","load_with","VertexAttribI1uiv","is_loaded","load_with","VertexAttribI2i","is_loaded","load_with","VertexAttribI2iv","is_loaded","load_with","VertexAttribI2ui","is_loaded","load_with","VertexAttribI2uiv","is_loaded","load_with","VertexAttribI3i","is_loaded","load_with","VertexAttribI3iv","is_loaded","load_with","VertexAttribI3ui","is_loaded","load_with","VertexAttribI3uiv","is_loaded","load_with","VertexAttribI4bv","is_loaded","load_with","VertexAttribI4i","is_loaded","load_with","VertexAttribI4iv","is_loaded","load_with","VertexAttribI4sv","is_loaded","load_with","VertexAttribI4ubv","is_loaded","load_with","VertexAttribI4ui","is_loaded","load_with","VertexAttribI4uiv","is_loaded","load_with","VertexAttribI4usv","is_loaded","load_with","VertexAttribIFormat","is_loaded","load_with","VertexAttribIPointer","is_loaded","load_with","VertexAttribL1d","is_loaded","load_with","VertexAttribL1dv","is_loaded","load_with","VertexAttribL2d","is_loaded","load_with","VertexAttribL2dv","is_loaded","load_with","VertexAttribL3d","is_loaded","load_with","VertexAttribL3dv","is_loaded","load_with","VertexAttribL4d","is_loaded","load_with","VertexAttribL4dv","is_loaded","load_with","VertexAttribLFormat","is_loaded","load_with","VertexAttribLPointer","is_loaded","load_with","VertexAttribP1ui","is_loaded","load_with","VertexAttribP1uiv","is_loaded","load_with","VertexAttribP2ui","is_loaded","load_with","VertexAttribP2uiv","is_loaded","load_with","VertexAttribP3ui","is_loaded","load_with","VertexAttribP3uiv","is_loaded","load_with","VertexAttribP4ui","is_loaded","load_with","VertexAttribP4uiv","is_loaded","load_with","VertexAttribPointer","is_loaded","load_with","VertexBindingDivisor","is_loaded","load_with","VertexP2ui","is_loaded","load_with","VertexP2uiv","is_loaded","load_with","VertexP3ui","is_loaded","load_with","VertexP3uiv","is_loaded","load_with","VertexP4ui","is_loaded","load_with","VertexP4uiv","is_loaded","load_with","Viewport","is_loaded","load_with","ViewportArrayv","is_loaded","load_with","ViewportIndexedf","is_loaded","load_with","ViewportIndexedfv","is_loaded","load_with","WaitSync","is_loaded","load_with","ACTIVE_ATOMIC_COUNTER_BUFFERS","ACTIVE_ATTRIBUTES","ACTIVE_ATTRIBUTE_MAX_LENGTH","ACTIVE_PROGRAM","ACTIVE_RESOURCES","ACTIVE_SUBROUTINES","ACTIVE_SUBROUTINE_MAX_LENGTH","ACTIVE_SUBROUTINE_UNIFORMS","ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS","ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH","ACTIVE_TEXTURE","ACTIVE_UNIFORMS","ACTIVE_UNIFORM_BLOCKS","ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH","ACTIVE_UNIFORM_MAX_LENGTH","ACTIVE_VARIABLES","ALIASED_LINE_WIDTH_RANGE","ALL_BARRIER_BITS","ALL_SHADER_BITS","ALPHA","ALREADY_SIGNALED","ALWAYS","AND","AND_INVERTED","AND_REVERSE","ANY_SAMPLES_PASSED","ANY_SAMPLES_PASSED_CONSERVATIVE","ARRAY_BUFFER","ARRAY_BUFFER_BINDING","ARRAY_SIZE","ARRAY_STRIDE","ATOMIC_COUNTER_BARRIER_BIT","ATOMIC_COUNTER_BUFFER","ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS","ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES","ATOMIC_COUNTER_BUFFER_BINDING","ATOMIC_COUNTER_BUFFER_DATA_SIZE","ATOMIC_COUNTER_BUFFER_INDEX","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER","ATOMIC_COUNTER_BUFFER_SIZE","ATOMIC_COUNTER_BUFFER_START","ATTACHED_SHADERS","AUTO_GENERATE_MIPMAP","BACK","BACK_LEFT","BACK_RIGHT","BGR","BGRA","BGRA_INTEGER","BGR_INTEGER","BLEND","BLEND_COLOR","BLEND_DST","BLEND_DST_ALPHA","BLEND_DST_RGB","BLEND_EQUATION","BLEND_EQUATION_ALPHA","BLEND_EQUATION_RGB","BLEND_SRC","BLEND_SRC_ALPHA","BLEND_SRC_RGB","BLOCK_INDEX","BLUE","BLUE_INTEGER","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","BUFFER","BUFFER_ACCESS","BUFFER_ACCESS_FLAGS","BUFFER_BINDING","BUFFER_DATA_SIZE","BUFFER_IMMUTABLE_STORAGE","BUFFER_MAPPED","BUFFER_MAP_LENGTH","BUFFER_MAP_OFFSET","BUFFER_MAP_POINTER","BUFFER_SIZE","BUFFER_STORAGE_FLAGS","BUFFER_UPDATE_BARRIER_BIT","BUFFER_USAGE","BUFFER_VARIABLE","BYTE","CAVEAT_SUPPORT","CCW","CLAMP_READ_COLOR","CLAMP_TO_BORDER","CLAMP_TO_EDGE","CLEAR","CLEAR_BUFFER","CLEAR_TEXTURE","CLIENT_MAPPED_BUFFER_BARRIER_BIT","CLIENT_STORAGE_BIT","CLIP_DEPTH_MODE","CLIP_DISTANCE0","CLIP_DISTANCE1","CLIP_DISTANCE2","CLIP_DISTANCE3","CLIP_DISTANCE4","CLIP_DISTANCE5","CLIP_DISTANCE6","CLIP_DISTANCE7","CLIP_ORIGIN","COLOR","COLOR_ATTACHMENT0","COLOR_ATTACHMENT1","COLOR_ATTACHMENT10","COLOR_ATTACHMENT11","COLOR_ATTACHMENT12","COLOR_ATTACHMENT13","COLOR_ATTACHMENT14","COLOR_ATTACHMENT15","COLOR_ATTACHMENT16","COLOR_ATTACHMENT17","COLOR_ATTACHMENT18","COLOR_ATTACHMENT19","COLOR_ATTACHMENT2","COLOR_ATTACHMENT20","COLOR_ATTACHMENT21","COLOR_ATTACHMENT22","COLOR_ATTACHMENT23","COLOR_ATTACHMENT24","COLOR_ATTACHMENT25","COLOR_ATTACHMENT26","COLOR_ATTACHMENT27","COLOR_ATTACHMENT28","COLOR_ATTACHMENT29","COLOR_ATTACHMENT3","COLOR_ATTACHMENT30","COLOR_ATTACHMENT31","COLOR_ATTACHMENT4","COLOR_ATTACHMENT5","COLOR_ATTACHMENT6","COLOR_ATTACHMENT7","COLOR_ATTACHMENT8","COLOR_ATTACHMENT9","COLOR_BUFFER_BIT","COLOR_CLEAR_VALUE","COLOR_COMPONENTS","COLOR_ENCODING","COLOR_LOGIC_OP","COLOR_RENDERABLE","COLOR_WRITEMASK","COMMAND_BARRIER_BIT","COMPARE_REF_TO_TEXTURE","COMPATIBLE_SUBROUTINES","COMPILE_STATUS","COMPRESSED_R11_EAC","COMPRESSED_RED","COMPRESSED_RED_RGTC1","COMPRESSED_RG","COMPRESSED_RG11_EAC","COMPRESSED_RGB","COMPRESSED_RGB8_ETC2","COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_RGBA","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_RGBA_BPTC_UNORM","COMPRESSED_RGB_BPTC_SIGNED_FLOAT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT","COMPRESSED_RG_RGTC2","COMPRESSED_SIGNED_R11_EAC","COMPRESSED_SIGNED_RED_RGTC1","COMPRESSED_SIGNED_RG11_EAC","COMPRESSED_SIGNED_RG_RGTC2","COMPRESSED_SRGB","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_SRGB8_ETC2","COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_SRGB_ALPHA","COMPRESSED_SRGB_ALPHA_BPTC_UNORM","COMPRESSED_TEXTURE_FORMATS","COMPUTE_SHADER","COMPUTE_SHADER_BIT","COMPUTE_SUBROUTINE","COMPUTE_SUBROUTINE_UNIFORM","COMPUTE_TEXTURE","COMPUTE_WORK_GROUP_SIZE","CONDITION_SATISFIED","CONSTANT_ALPHA","CONSTANT_COLOR","CONTEXT_COMPATIBILITY_PROFILE_BIT","CONTEXT_CORE_PROFILE_BIT","CONTEXT_FLAGS","CONTEXT_FLAG_DEBUG_BIT","CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT","CONTEXT_FLAG_ROBUST_ACCESS_BIT","CONTEXT_LOST","CONTEXT_PROFILE_MASK","CONTEXT_RELEASE_BEHAVIOR","CONTEXT_RELEASE_BEHAVIOR_FLUSH","COPY","COPY_INVERTED","COPY_READ_BUFFER","COPY_READ_BUFFER_BINDING","COPY_WRITE_BUFFER","COPY_WRITE_BUFFER_BINDING","CULL_FACE","CULL_FACE_MODE","CURRENT_PROGRAM","CURRENT_QUERY","CURRENT_VERTEX_ATTRIB","CW","DEBUG_CALLBACK_FUNCTION","DEBUG_CALLBACK_USER_PARAM","DEBUG_GROUP_STACK_DEPTH","DEBUG_LOGGED_MESSAGES","DEBUG_NEXT_LOGGED_MESSAGE_LENGTH","DEBUG_OUTPUT","DEBUG_OUTPUT_SYNCHRONOUS","DEBUG_SEVERITY_HIGH","DEBUG_SEVERITY_LOW","DEBUG_SEVERITY_MEDIUM","DEBUG_SEVERITY_NOTIFICATION","DEBUG_SOURCE_API","DEBUG_SOURCE_APPLICATION","DEBUG_SOURCE_OTHER","DEBUG_SOURCE_SHADER_COMPILER","DEBUG_SOURCE_THIRD_PARTY","DEBUG_SOURCE_WINDOW_SYSTEM","DEBUG_TYPE_DEPRECATED_BEHAVIOR","DEBUG_TYPE_ERROR","DEBUG_TYPE_MARKER","DEBUG_TYPE_OTHER","DEBUG_TYPE_PERFORMANCE","DEBUG_TYPE_POP_GROUP","DEBUG_TYPE_PORTABILITY","DEBUG_TYPE_PUSH_GROUP","DEBUG_TYPE_UNDEFINED_BEHAVIOR","DECR","DECR_WRAP","DELETE_STATUS","DEPTH","DEPTH24_STENCIL8","DEPTH32F_STENCIL8","DEPTH_ATTACHMENT","DEPTH_BUFFER_BIT","DEPTH_CLAMP","DEPTH_CLEAR_VALUE","DEPTH_COMPONENT","DEPTH_COMPONENT16","DEPTH_COMPONENT24","DEPTH_COMPONENT32","DEPTH_COMPONENT32F","DEPTH_COMPONENTS","DEPTH_FUNC","DEPTH_RANGE","DEPTH_RENDERABLE","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","DEPTH_STENCIL_TEXTURE_MODE","DEPTH_TEST","DEPTH_WRITEMASK","DISPATCH_INDIRECT_BUFFER","DISPATCH_INDIRECT_BUFFER_BINDING","DISPLAY_LIST","DITHER","DONT_CARE","DOUBLE","DOUBLEBUFFER","DOUBLE_MAT2","DOUBLE_MAT2x3","DOUBLE_MAT2x4","DOUBLE_MAT3","DOUBLE_MAT3x2","DOUBLE_MAT3x4","DOUBLE_MAT4","DOUBLE_MAT4x2","DOUBLE_MAT4x3","DOUBLE_VEC2","DOUBLE_VEC3","DOUBLE_VEC4","DRAW_BUFFER","DRAW_BUFFER0","DRAW_BUFFER1","DRAW_BUFFER10","DRAW_BUFFER11","DRAW_BUFFER12","DRAW_BUFFER13","DRAW_BUFFER14","DRAW_BUFFER15","DRAW_BUFFER2","DRAW_BUFFER3","DRAW_BUFFER4","DRAW_BUFFER5","DRAW_BUFFER6","DRAW_BUFFER7","DRAW_BUFFER8","DRAW_BUFFER9","DRAW_FRAMEBUFFER","DRAW_FRAMEBUFFER_BINDING","DRAW_INDIRECT_BUFFER","DRAW_INDIRECT_BUFFER_BINDING","DST_ALPHA","DST_COLOR","DYNAMIC_COPY","DYNAMIC_DRAW","DYNAMIC_READ","DYNAMIC_STORAGE_BIT","ELEMENT_ARRAY_BARRIER_BIT","ELEMENT_ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER_BINDING","EQUAL","EQUIV","EXTENSIONS","FALSE","FASTEST","FILL","FILTER","FIRST_VERTEX_CONVENTION","FIXED","FIXED_ONLY","FLOAT","FLOAT_32_UNSIGNED_INT_24_8_REV","FLOAT_MAT2","FLOAT_MAT2x3","FLOAT_MAT2x4","FLOAT_MAT3","FLOAT_MAT3x2","FLOAT_MAT3x4","FLOAT_MAT4","FLOAT_MAT4x2","FLOAT_MAT4x3","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","FRACTIONAL_EVEN","FRACTIONAL_ODD","FRAGMENT_INTERPOLATION_OFFSET_BITS","FRAGMENT_SHADER","FRAGMENT_SHADER_BIT","FRAGMENT_SHADER_DERIVATIVE_HINT","FRAGMENT_SUBROUTINE","FRAGMENT_SUBROUTINE_UNIFORM","FRAGMENT_TEXTURE","FRAMEBUFFER","FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE","FRAMEBUFFER_ATTACHMENT_BLUE_SIZE","FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING","FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE","FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE","FRAMEBUFFER_ATTACHMENT_GREEN_SIZE","FRAMEBUFFER_ATTACHMENT_LAYERED","FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","FRAMEBUFFER_ATTACHMENT_RED_SIZE","FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE","FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER","FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","FRAMEBUFFER_BARRIER_BIT","FRAMEBUFFER_BINDING","FRAMEBUFFER_BLEND","FRAMEBUFFER_COMPLETE","FRAMEBUFFER_DEFAULT","FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS","FRAMEBUFFER_DEFAULT_HEIGHT","FRAMEBUFFER_DEFAULT_LAYERS","FRAMEBUFFER_DEFAULT_SAMPLES","FRAMEBUFFER_DEFAULT_WIDTH","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER","FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","FRAMEBUFFER_INCOMPLETE_READ_BUFFER","FRAMEBUFFER_RENDERABLE","FRAMEBUFFER_RENDERABLE_LAYERED","FRAMEBUFFER_SRGB","FRAMEBUFFER_UNDEFINED","FRAMEBUFFER_UNSUPPORTED","FRONT","FRONT_AND_BACK","FRONT_FACE","FRONT_LEFT","FRONT_RIGHT","FULL_SUPPORT","FUNC_ADD","FUNC_REVERSE_SUBTRACT","FUNC_SUBTRACT","GEOMETRY_INPUT_TYPE","GEOMETRY_OUTPUT_TYPE","GEOMETRY_SHADER","GEOMETRY_SHADER_BIT","GEOMETRY_SHADER_INVOCATIONS","GEOMETRY_SUBROUTINE","GEOMETRY_SUBROUTINE_UNIFORM","GEOMETRY_TEXTURE","GEOMETRY_VERTICES_OUT","GEQUAL","GET_TEXTURE_IMAGE_FORMAT","GET_TEXTURE_IMAGE_TYPE","GREATER","GREEN","GREEN_INTEGER","GUILTY_CONTEXT_RESET","HALF_FLOAT","HIGH_FLOAT","HIGH_INT","IMAGE_1D","IMAGE_1D_ARRAY","IMAGE_2D","IMAGE_2D_ARRAY","IMAGE_2D_MULTISAMPLE","IMAGE_2D_MULTISAMPLE_ARRAY","IMAGE_2D_RECT","IMAGE_3D","IMAGE_BINDING_ACCESS","IMAGE_BINDING_FORMAT","IMAGE_BINDING_LAYER","IMAGE_BINDING_LAYERED","IMAGE_BINDING_LEVEL","IMAGE_BINDING_NAME","IMAGE_BUFFER","IMAGE_CLASS_10_10_10_2","IMAGE_CLASS_11_11_10","IMAGE_CLASS_1_X_16","IMAGE_CLASS_1_X_32","IMAGE_CLASS_1_X_8","IMAGE_CLASS_2_X_16","IMAGE_CLASS_2_X_32","IMAGE_CLASS_2_X_8","IMAGE_CLASS_4_X_16","IMAGE_CLASS_4_X_32","IMAGE_CLASS_4_X_8","IMAGE_COMPATIBILITY_CLASS","IMAGE_CUBE","IMAGE_CUBE_MAP_ARRAY","IMAGE_FORMAT_COMPATIBILITY_BY_CLASS","IMAGE_FORMAT_COMPATIBILITY_BY_SIZE","IMAGE_FORMAT_COMPATIBILITY_TYPE","IMAGE_PIXEL_FORMAT","IMAGE_PIXEL_TYPE","IMAGE_TEXEL_SIZE","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","INCR","INCR_WRAP","INFO_LOG_LENGTH","INNOCENT_CONTEXT_RESET","INT","INTERLEAVED_ATTRIBS","INTERNALFORMAT_ALPHA_SIZE","INTERNALFORMAT_ALPHA_TYPE","INTERNALFORMAT_BLUE_SIZE","INTERNALFORMAT_BLUE_TYPE","INTERNALFORMAT_DEPTH_SIZE","INTERNALFORMAT_DEPTH_TYPE","INTERNALFORMAT_GREEN_SIZE","INTERNALFORMAT_GREEN_TYPE","INTERNALFORMAT_PREFERRED","INTERNALFORMAT_RED_SIZE","INTERNALFORMAT_RED_TYPE","INTERNALFORMAT_SHARED_SIZE","INTERNALFORMAT_STENCIL_SIZE","INTERNALFORMAT_STENCIL_TYPE","INTERNALFORMAT_SUPPORTED","INT_2_10_10_10_REV","INT_IMAGE_1D","INT_IMAGE_1D_ARRAY","INT_IMAGE_2D","INT_IMAGE_2D_ARRAY","INT_IMAGE_2D_MULTISAMPLE","INT_IMAGE_2D_MULTISAMPLE_ARRAY","INT_IMAGE_2D_RECT","INT_IMAGE_3D","INT_IMAGE_BUFFER","INT_IMAGE_CUBE","INT_IMAGE_CUBE_MAP_ARRAY","INT_SAMPLER_1D","INT_SAMPLER_1D_ARRAY","INT_SAMPLER_2D","INT_SAMPLER_2D_ARRAY","INT_SAMPLER_2D_MULTISAMPLE","INT_SAMPLER_2D_MULTISAMPLE_ARRAY","INT_SAMPLER_2D_RECT","INT_SAMPLER_3D","INT_SAMPLER_BUFFER","INT_SAMPLER_CUBE","INT_SAMPLER_CUBE_MAP_ARRAY","INT_VEC2","INT_VEC3","INT_VEC4","INVALID_ENUM","INVALID_FRAMEBUFFER_OPERATION","INVALID_INDEX","INVALID_OPERATION","INVALID_VALUE","INVERT","ISOLINES","IS_PER_PATCH","IS_ROW_MAJOR","KEEP","LAST_VERTEX_CONVENTION","LAYER_PROVOKING_VERTEX","LEFT","LEQUAL","LESS","LINE","LINEAR","LINEAR_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINES","LINES_ADJACENCY","LINE_LOOP","LINE_SMOOTH","LINE_SMOOTH_HINT","LINE_STRIP","LINE_STRIP_ADJACENCY","LINE_WIDTH","LINE_WIDTH_GRANULARITY","LINE_WIDTH_RANGE","LINK_STATUS","LOCATION","LOCATION_COMPONENT","LOCATION_INDEX","LOGIC_OP_MODE","LOSE_CONTEXT_ON_RESET","LOWER_LEFT","LOW_FLOAT","LOW_INT","MAJOR_VERSION","MANUAL_GENERATE_MIPMAP","MAP_COHERENT_BIT","MAP_FLUSH_EXPLICIT_BIT","MAP_INVALIDATE_BUFFER_BIT","MAP_INVALIDATE_RANGE_BIT","MAP_PERSISTENT_BIT","MAP_READ_BIT","MAP_UNSYNCHRONIZED_BIT","MAP_WRITE_BIT","MATRIX_STRIDE","MAX","MAX_3D_TEXTURE_SIZE","MAX_ARRAY_TEXTURE_LAYERS","MAX_ATOMIC_COUNTER_BUFFER_BINDINGS","MAX_ATOMIC_COUNTER_BUFFER_SIZE","MAX_CLIP_DISTANCES","MAX_COLOR_ATTACHMENTS","MAX_COLOR_TEXTURE_SAMPLES","MAX_COMBINED_ATOMIC_COUNTERS","MAX_COMBINED_ATOMIC_COUNTER_BUFFERS","MAX_COMBINED_CLIP_AND_CULL_DISTANCES","MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS","MAX_COMBINED_DIMENSIONS","MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS","MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS","MAX_COMBINED_IMAGE_UNIFORMS","MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS","MAX_COMBINED_SHADER_OUTPUT_RESOURCES","MAX_COMBINED_SHADER_STORAGE_BLOCKS","MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS","MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_COMBINED_UNIFORM_BLOCKS","MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS","MAX_COMPUTE_ATOMIC_COUNTERS","MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS","MAX_COMPUTE_IMAGE_UNIFORMS","MAX_COMPUTE_SHADER_STORAGE_BLOCKS","MAX_COMPUTE_SHARED_MEMORY_SIZE","MAX_COMPUTE_TEXTURE_IMAGE_UNITS","MAX_COMPUTE_UNIFORM_BLOCKS","MAX_COMPUTE_UNIFORM_COMPONENTS","MAX_COMPUTE_WORK_GROUP_COUNT","MAX_COMPUTE_WORK_GROUP_INVOCATIONS","MAX_COMPUTE_WORK_GROUP_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","MAX_CULL_DISTANCES","MAX_DEBUG_GROUP_STACK_DEPTH","MAX_DEBUG_LOGGED_MESSAGES","MAX_DEBUG_MESSAGE_LENGTH","MAX_DEPTH","MAX_DEPTH_TEXTURE_SAMPLES","MAX_DRAW_BUFFERS","MAX_DUAL_SOURCE_DRAW_BUFFERS","MAX_ELEMENTS_INDICES","MAX_ELEMENTS_VERTICES","MAX_ELEMENT_INDEX","MAX_FRAGMENT_ATOMIC_COUNTERS","MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS","MAX_FRAGMENT_IMAGE_UNIFORMS","MAX_FRAGMENT_INPUT_COMPONENTS","MAX_FRAGMENT_INTERPOLATION_OFFSET","MAX_FRAGMENT_SHADER_STORAGE_BLOCKS","MAX_FRAGMENT_UNIFORM_BLOCKS","MAX_FRAGMENT_UNIFORM_COMPONENTS","MAX_FRAGMENT_UNIFORM_VECTORS","MAX_FRAMEBUFFER_HEIGHT","MAX_FRAMEBUFFER_LAYERS","MAX_FRAMEBUFFER_SAMPLES","MAX_FRAMEBUFFER_WIDTH","MAX_GEOMETRY_ATOMIC_COUNTERS","MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS","MAX_GEOMETRY_IMAGE_UNIFORMS","MAX_GEOMETRY_INPUT_COMPONENTS","MAX_GEOMETRY_OUTPUT_COMPONENTS","MAX_GEOMETRY_OUTPUT_VERTICES","MAX_GEOMETRY_SHADER_INVOCATIONS","MAX_GEOMETRY_SHADER_STORAGE_BLOCKS","MAX_GEOMETRY_TEXTURE_IMAGE_UNITS","MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS","MAX_GEOMETRY_UNIFORM_BLOCKS","MAX_GEOMETRY_UNIFORM_COMPONENTS","MAX_HEIGHT","MAX_IMAGE_SAMPLES","MAX_IMAGE_UNITS","MAX_INTEGER_SAMPLES","MAX_LABEL_LENGTH","MAX_LAYERS","MAX_NAME_LENGTH","MAX_NUM_ACTIVE_VARIABLES","MAX_NUM_COMPATIBLE_SUBROUTINES","MAX_PATCH_VERTICES","MAX_PROGRAM_TEXEL_OFFSET","MAX_PROGRAM_TEXTURE_GATHER_OFFSET","MAX_RECTANGLE_TEXTURE_SIZE","MAX_RENDERBUFFER_SIZE","MAX_SAMPLES","MAX_SAMPLE_MASK_WORDS","MAX_SERVER_WAIT_TIMEOUT","MAX_SHADER_STORAGE_BLOCK_SIZE","MAX_SHADER_STORAGE_BUFFER_BINDINGS","MAX_SUBROUTINES","MAX_SUBROUTINE_UNIFORM_LOCATIONS","MAX_TESS_CONTROL_ATOMIC_COUNTERS","MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS","MAX_TESS_CONTROL_IMAGE_UNIFORMS","MAX_TESS_CONTROL_INPUT_COMPONENTS","MAX_TESS_CONTROL_OUTPUT_COMPONENTS","MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS","MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS","MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS","MAX_TESS_CONTROL_UNIFORM_BLOCKS","MAX_TESS_CONTROL_UNIFORM_COMPONENTS","MAX_TESS_EVALUATION_ATOMIC_COUNTERS","MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS","MAX_TESS_EVALUATION_IMAGE_UNIFORMS","MAX_TESS_EVALUATION_INPUT_COMPONENTS","MAX_TESS_EVALUATION_OUTPUT_COMPONENTS","MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS","MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS","MAX_TESS_EVALUATION_UNIFORM_BLOCKS","MAX_TESS_EVALUATION_UNIFORM_COMPONENTS","MAX_TESS_GEN_LEVEL","MAX_TESS_PATCH_COMPONENTS","MAX_TEXTURE_BUFFER_SIZE","MAX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_LOD_BIAS","MAX_TEXTURE_SIZE","MAX_TRANSFORM_FEEDBACK_BUFFERS","MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS","MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS","MAX_UNIFORM_BLOCK_SIZE","MAX_UNIFORM_BUFFER_BINDINGS","MAX_UNIFORM_LOCATIONS","MAX_VARYING_COMPONENTS","MAX_VARYING_FLOATS","MAX_VARYING_VECTORS","MAX_VERTEX_ATOMIC_COUNTERS","MAX_VERTEX_ATOMIC_COUNTER_BUFFERS","MAX_VERTEX_ATTRIBS","MAX_VERTEX_ATTRIB_BINDINGS","MAX_VERTEX_ATTRIB_RELATIVE_OFFSET","MAX_VERTEX_ATTRIB_STRIDE","MAX_VERTEX_IMAGE_UNIFORMS","MAX_VERTEX_OUTPUT_COMPONENTS","MAX_VERTEX_SHADER_STORAGE_BLOCKS","MAX_VERTEX_STREAMS","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_VERTEX_UNIFORM_BLOCKS","MAX_VERTEX_UNIFORM_COMPONENTS","MAX_VERTEX_UNIFORM_VECTORS","MAX_VIEWPORTS","MAX_VIEWPORT_DIMS","MAX_WIDTH","MEDIUM_FLOAT","MEDIUM_INT","MIN","MINOR_VERSION","MIN_FRAGMENT_INTERPOLATION_OFFSET","MIN_MAP_BUFFER_ALIGNMENT","MIN_PROGRAM_TEXEL_OFFSET","MIN_PROGRAM_TEXTURE_GATHER_OFFSET","MIN_SAMPLE_SHADING_VALUE","MIPMAP","MIRRORED_REPEAT","MIRROR_CLAMP_TO_EDGE","MULTISAMPLE","NAME_LENGTH","NAND","NEAREST","NEAREST_MIPMAP_LINEAR","NEAREST_MIPMAP_NEAREST","NEGATIVE_ONE_TO_ONE","NEVER","NICEST","NONE","NOOP","NOR","NOTEQUAL","NO_ERROR","NO_RESET_NOTIFICATION","NUM_ACTIVE_VARIABLES","NUM_COMPATIBLE_SUBROUTINES","NUM_COMPRESSED_TEXTURE_FORMATS","NUM_EXTENSIONS","NUM_PROGRAM_BINARY_FORMATS","NUM_SAMPLE_COUNTS","NUM_SHADER_BINARY_FORMATS","NUM_SHADING_LANGUAGE_VERSIONS","OBJECT_TYPE","OFFSET","ONE","ONE_MINUS_CONSTANT_ALPHA","ONE_MINUS_CONSTANT_COLOR","ONE_MINUS_DST_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_SRC1_ALPHA","ONE_MINUS_SRC1_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_SRC_COLOR","OR","OR_INVERTED","OR_REVERSE","OUT_OF_MEMORY","PACK_ALIGNMENT","PACK_COMPRESSED_BLOCK_DEPTH","PACK_COMPRESSED_BLOCK_HEIGHT","PACK_COMPRESSED_BLOCK_SIZE","PACK_COMPRESSED_BLOCK_WIDTH","PACK_IMAGE_HEIGHT","PACK_LSB_FIRST","PACK_ROW_LENGTH","PACK_SKIP_IMAGES","PACK_SKIP_PIXELS","PACK_SKIP_ROWS","PACK_SWAP_BYTES","PATCHES","PATCH_DEFAULT_INNER_LEVEL","PATCH_DEFAULT_OUTER_LEVEL","PATCH_VERTICES","PIXEL_BUFFER_BARRIER_BIT","PIXEL_PACK_BUFFER","PIXEL_PACK_BUFFER_BINDING","PIXEL_UNPACK_BUFFER","PIXEL_UNPACK_BUFFER_BINDING","POINT","POINTS","POINT_FADE_THRESHOLD_SIZE","POINT_SIZE","POINT_SIZE_GRANULARITY","POINT_SIZE_RANGE","POINT_SPRITE_COORD_ORIGIN","POLYGON_MODE","POLYGON_OFFSET_FACTOR","POLYGON_OFFSET_FILL","POLYGON_OFFSET_LINE","POLYGON_OFFSET_POINT","POLYGON_OFFSET_UNITS","POLYGON_SMOOTH","POLYGON_SMOOTH_HINT","PRIMITIVES_GENERATED","PRIMITIVE_RESTART","PRIMITIVE_RESTART_FIXED_INDEX","PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED","PRIMITIVE_RESTART_INDEX","PROGRAM","PROGRAM_BINARY_FORMATS","PROGRAM_BINARY_LENGTH","PROGRAM_BINARY_RETRIEVABLE_HINT","PROGRAM_INPUT","PROGRAM_OUTPUT","PROGRAM_PIPELINE","PROGRAM_PIPELINE_BINDING","PROGRAM_POINT_SIZE","PROGRAM_SEPARABLE","PROVOKING_VERTEX","PROXY_TEXTURE_1D","PROXY_TEXTURE_1D_ARRAY","PROXY_TEXTURE_2D","PROXY_TEXTURE_2D_ARRAY","PROXY_TEXTURE_2D_MULTISAMPLE","PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY","PROXY_TEXTURE_3D","PROXY_TEXTURE_CUBE_MAP","PROXY_TEXTURE_CUBE_MAP_ARRAY","PROXY_TEXTURE_RECTANGLE","QUADS","QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION","QUERY","QUERY_BUFFER","QUERY_BUFFER_BARRIER_BIT","QUERY_BUFFER_BINDING","QUERY_BY_REGION_NO_WAIT","QUERY_BY_REGION_NO_WAIT_INVERTED","QUERY_BY_REGION_WAIT","QUERY_BY_REGION_WAIT_INVERTED","QUERY_COUNTER_BITS","QUERY_NO_WAIT","QUERY_NO_WAIT_INVERTED","QUERY_RESULT","QUERY_RESULT_AVAILABLE","QUERY_RESULT_NO_WAIT","QUERY_TARGET","QUERY_WAIT","QUERY_WAIT_INVERTED","R11F_G11F_B10F","R16","R16F","R16I","R16UI","R16_SNORM","R32F","R32I","R32UI","R3_G3_B2","R8","R8I","R8UI","R8_SNORM","RASTERIZER_DISCARD","READ_BUFFER","READ_FRAMEBUFFER","READ_FRAMEBUFFER_BINDING","READ_ONLY","READ_PIXELS","READ_PIXELS_FORMAT","READ_PIXELS_TYPE","READ_WRITE","RED","RED_INTEGER","REFERENCED_BY_COMPUTE_SHADER","REFERENCED_BY_FRAGMENT_SHADER","REFERENCED_BY_GEOMETRY_SHADER","REFERENCED_BY_TESS_CONTROL_SHADER","REFERENCED_BY_TESS_EVALUATION_SHADER","REFERENCED_BY_VERTEX_SHADER","RENDERBUFFER","RENDERBUFFER_ALPHA_SIZE","RENDERBUFFER_BINDING","RENDERBUFFER_BLUE_SIZE","RENDERBUFFER_DEPTH_SIZE","RENDERBUFFER_GREEN_SIZE","RENDERBUFFER_HEIGHT","RENDERBUFFER_INTERNAL_FORMAT","RENDERBUFFER_RED_SIZE","RENDERBUFFER_SAMPLES","RENDERBUFFER_STENCIL_SIZE","RENDERBUFFER_WIDTH","RENDERER","REPEAT","REPLACE","RESET_NOTIFICATION_STRATEGY","RG","RG16","RG16F","RG16I","RG16UI","RG16_SNORM","RG32F","RG32I","RG32UI","RG8","RG8I","RG8UI","RG8_SNORM","RGB","RGB10","RGB10_A2","RGB10_A2UI","RGB12","RGB16","RGB16F","RGB16I","RGB16UI","RGB16_SNORM","RGB32F","RGB32I","RGB32UI","RGB4","RGB5","RGB565","RGB5_A1","RGB8","RGB8I","RGB8UI","RGB8_SNORM","RGB9_E5","RGBA","RGBA12","RGBA16","RGBA16F","RGBA16I","RGBA16UI","RGBA16_SNORM","RGBA2","RGBA32F","RGBA32I","RGBA32UI","RGBA4","RGBA8","RGBA8I","RGBA8UI","RGBA8_SNORM","RGBA_INTEGER","RGB_INTEGER","RG_INTEGER","RIGHT","SAMPLER","SAMPLER_1D","SAMPLER_1D_ARRAY","SAMPLER_1D_ARRAY_SHADOW","SAMPLER_1D_SHADOW","SAMPLER_2D","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_2D_MULTISAMPLE","SAMPLER_2D_MULTISAMPLE_ARRAY","SAMPLER_2D_RECT","SAMPLER_2D_RECT_SHADOW","SAMPLER_2D_SHADOW","SAMPLER_3D","SAMPLER_BINDING","SAMPLER_BUFFER","SAMPLER_CUBE","SAMPLER_CUBE_MAP_ARRAY","SAMPLER_CUBE_MAP_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","SAMPLES","SAMPLES_PASSED","SAMPLE_ALPHA_TO_COVERAGE","SAMPLE_ALPHA_TO_ONE","SAMPLE_BUFFERS","SAMPLE_COVERAGE","SAMPLE_COVERAGE_INVERT","SAMPLE_COVERAGE_VALUE","SAMPLE_MASK","SAMPLE_MASK_VALUE","SAMPLE_POSITION","SAMPLE_SHADING","SCISSOR_BOX","SCISSOR_TEST","SEPARATE_ATTRIBS","SET","SHADER","SHADER_BINARY_FORMATS","SHADER_COMPILER","SHADER_IMAGE_ACCESS_BARRIER_BIT","SHADER_IMAGE_ATOMIC","SHADER_IMAGE_LOAD","SHADER_IMAGE_STORE","SHADER_SOURCE_LENGTH","SHADER_STORAGE_BARRIER_BIT","SHADER_STORAGE_BLOCK","SHADER_STORAGE_BUFFER","SHADER_STORAGE_BUFFER_BINDING","SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT","SHADER_STORAGE_BUFFER_SIZE","SHADER_STORAGE_BUFFER_START","SHADER_TYPE","SHADING_LANGUAGE_VERSION","SHORT","SIGNALED","SIGNED_NORMALIZED","SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST","SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE","SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST","SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE","SMOOTH_LINE_WIDTH_GRANULARITY","SMOOTH_LINE_WIDTH_RANGE","SMOOTH_POINT_SIZE_GRANULARITY","SMOOTH_POINT_SIZE_RANGE","SRC1_ALPHA","SRC1_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","SRC_COLOR","SRGB","SRGB8","SRGB8_ALPHA8","SRGB_ALPHA","SRGB_READ","SRGB_WRITE","STACK_OVERFLOW","STACK_UNDERFLOW","STATIC_COPY","STATIC_DRAW","STATIC_READ","STENCIL","STENCIL_ATTACHMENT","STENCIL_BACK_FAIL","STENCIL_BACK_FUNC","STENCIL_BACK_PASS_DEPTH_FAIL","STENCIL_BACK_PASS_DEPTH_PASS","STENCIL_BACK_REF","STENCIL_BACK_VALUE_MASK","STENCIL_BACK_WRITEMASK","STENCIL_BUFFER_BIT","STENCIL_CLEAR_VALUE","STENCIL_COMPONENTS","STENCIL_FAIL","STENCIL_FUNC","STENCIL_INDEX","STENCIL_INDEX1","STENCIL_INDEX16","STENCIL_INDEX4","STENCIL_INDEX8","STENCIL_PASS_DEPTH_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_REF","STENCIL_RENDERABLE","STENCIL_TEST","STENCIL_VALUE_MASK","STENCIL_WRITEMASK","STEREO","STREAM_COPY","STREAM_DRAW","STREAM_READ","SUBPIXEL_BITS","SYNC_CONDITION","SYNC_FENCE","SYNC_FLAGS","SYNC_FLUSH_COMMANDS_BIT","SYNC_GPU_COMMANDS_COMPLETE","SYNC_STATUS","TESS_CONTROL_OUTPUT_VERTICES","TESS_CONTROL_SHADER","TESS_CONTROL_SHADER_BIT","TESS_CONTROL_SUBROUTINE","TESS_CONTROL_SUBROUTINE_UNIFORM","TESS_CONTROL_TEXTURE","TESS_EVALUATION_SHADER","TESS_EVALUATION_SHADER_BIT","TESS_EVALUATION_SUBROUTINE","TESS_EVALUATION_SUBROUTINE_UNIFORM","TESS_EVALUATION_TEXTURE","TESS_GEN_MODE","TESS_GEN_POINT_MODE","TESS_GEN_SPACING","TESS_GEN_VERTEX_ORDER","TEXTURE","TEXTURE0","TEXTURE1","TEXTURE10","TEXTURE11","TEXTURE12","TEXTURE13","TEXTURE14","TEXTURE15","TEXTURE16","TEXTURE17","TEXTURE18","TEXTURE19","TEXTURE2","TEXTURE20","TEXTURE21","TEXTURE22","TEXTURE23","TEXTURE24","TEXTURE25","TEXTURE26","TEXTURE27","TEXTURE28","TEXTURE29","TEXTURE3","TEXTURE30","TEXTURE31","TEXTURE4","TEXTURE5","TEXTURE6","TEXTURE7","TEXTURE8","TEXTURE9","TEXTURE_1D","TEXTURE_1D_ARRAY","TEXTURE_2D","TEXTURE_2D_ARRAY","TEXTURE_2D_MULTISAMPLE","TEXTURE_2D_MULTISAMPLE_ARRAY","TEXTURE_3D","TEXTURE_ALPHA_SIZE","TEXTURE_ALPHA_TYPE","TEXTURE_BASE_LEVEL","TEXTURE_BINDING_1D","TEXTURE_BINDING_1D_ARRAY","TEXTURE_BINDING_2D","TEXTURE_BINDING_2D_ARRAY","TEXTURE_BINDING_2D_MULTISAMPLE","TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY","TEXTURE_BINDING_3D","TEXTURE_BINDING_BUFFER","TEXTURE_BINDING_CUBE_MAP","TEXTURE_BINDING_CUBE_MAP_ARRAY","TEXTURE_BINDING_RECTANGLE","TEXTURE_BLUE_SIZE","TEXTURE_BLUE_TYPE","TEXTURE_BORDER_COLOR","TEXTURE_BUFFER","TEXTURE_BUFFER_BINDING","TEXTURE_BUFFER_DATA_STORE_BINDING","TEXTURE_BUFFER_OFFSET","TEXTURE_BUFFER_OFFSET_ALIGNMENT","TEXTURE_BUFFER_SIZE","TEXTURE_COMPARE_FUNC","TEXTURE_COMPARE_MODE","TEXTURE_COMPRESSED","TEXTURE_COMPRESSED_BLOCK_HEIGHT","TEXTURE_COMPRESSED_BLOCK_SIZE","TEXTURE_COMPRESSED_BLOCK_WIDTH","TEXTURE_COMPRESSED_IMAGE_SIZE","TEXTURE_COMPRESSION_HINT","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_ARRAY","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Z","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_SEAMLESS","TEXTURE_DEPTH","TEXTURE_DEPTH_SIZE","TEXTURE_DEPTH_TYPE","TEXTURE_FETCH_BARRIER_BIT","TEXTURE_FIXED_SAMPLE_LOCATIONS","TEXTURE_GATHER","TEXTURE_GATHER_SHADOW","TEXTURE_GREEN_SIZE","TEXTURE_GREEN_TYPE","TEXTURE_HEIGHT","TEXTURE_IMAGE_FORMAT","TEXTURE_IMAGE_TYPE","TEXTURE_IMMUTABLE_FORMAT","TEXTURE_IMMUTABLE_LEVELS","TEXTURE_INTERNAL_FORMAT","TEXTURE_LOD_BIAS","TEXTURE_MAG_FILTER","TEXTURE_MAX_LEVEL","TEXTURE_MAX_LOD","TEXTURE_MIN_FILTER","TEXTURE_MIN_LOD","TEXTURE_RECTANGLE","TEXTURE_RED_SIZE","TEXTURE_RED_TYPE","TEXTURE_SAMPLES","TEXTURE_SHADOW","TEXTURE_SHARED_SIZE","TEXTURE_STENCIL_SIZE","TEXTURE_SWIZZLE_A","TEXTURE_SWIZZLE_B","TEXTURE_SWIZZLE_G","TEXTURE_SWIZZLE_R","TEXTURE_SWIZZLE_RGBA","TEXTURE_TARGET","TEXTURE_UPDATE_BARRIER_BIT","TEXTURE_VIEW","TEXTURE_VIEW_MIN_LAYER","TEXTURE_VIEW_MIN_LEVEL","TEXTURE_VIEW_NUM_LAYERS","TEXTURE_VIEW_NUM_LEVELS","TEXTURE_WIDTH","TEXTURE_WRAP_R","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TIMEOUT_EXPIRED","TIMEOUT_IGNORED","TIMESTAMP","TIME_ELAPSED","TOP_LEVEL_ARRAY_SIZE","TOP_LEVEL_ARRAY_STRIDE","TRANSFORM_FEEDBACK","TRANSFORM_FEEDBACK_ACTIVE","TRANSFORM_FEEDBACK_BARRIER_BIT","TRANSFORM_FEEDBACK_BINDING","TRANSFORM_FEEDBACK_BUFFER","TRANSFORM_FEEDBACK_BUFFER_ACTIVE","TRANSFORM_FEEDBACK_BUFFER_BINDING","TRANSFORM_FEEDBACK_BUFFER_INDEX","TRANSFORM_FEEDBACK_BUFFER_MODE","TRANSFORM_FEEDBACK_BUFFER_PAUSED","TRANSFORM_FEEDBACK_BUFFER_SIZE","TRANSFORM_FEEDBACK_BUFFER_START","TRANSFORM_FEEDBACK_BUFFER_STRIDE","TRANSFORM_FEEDBACK_PAUSED","TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN","TRANSFORM_FEEDBACK_VARYING","TRANSFORM_FEEDBACK_VARYINGS","TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH","TRIANGLES","TRIANGLES_ADJACENCY","TRIANGLE_FAN","TRIANGLE_STRIP","TRIANGLE_STRIP_ADJACENCY","TRUE","TYPE","UNDEFINED_VERTEX","UNIFORM","UNIFORM_ARRAY_STRIDE","UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX","UNIFORM_BARRIER_BIT","UNIFORM_BLOCK","UNIFORM_BLOCK_ACTIVE_UNIFORMS","UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","UNIFORM_BLOCK_BINDING","UNIFORM_BLOCK_DATA_SIZE","UNIFORM_BLOCK_INDEX","UNIFORM_BLOCK_NAME_LENGTH","UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER","UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER","UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER","UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER","UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","UNIFORM_BUFFER","UNIFORM_BUFFER_BINDING","UNIFORM_BUFFER_OFFSET_ALIGNMENT","UNIFORM_BUFFER_SIZE","UNIFORM_BUFFER_START","UNIFORM_IS_ROW_MAJOR","UNIFORM_MATRIX_STRIDE","UNIFORM_NAME_LENGTH","UNIFORM_OFFSET","UNIFORM_SIZE","UNIFORM_TYPE","UNKNOWN_CONTEXT_RESET","UNPACK_ALIGNMENT","UNPACK_COMPRESSED_BLOCK_DEPTH","UNPACK_COMPRESSED_BLOCK_HEIGHT","UNPACK_COMPRESSED_BLOCK_SIZE","UNPACK_COMPRESSED_BLOCK_WIDTH","UNPACK_IMAGE_HEIGHT","UNPACK_LSB_FIRST","UNPACK_ROW_LENGTH","UNPACK_SKIP_IMAGES","UNPACK_SKIP_PIXELS","UNPACK_SKIP_ROWS","UNPACK_SWAP_BYTES","UNSIGNALED","UNSIGNED_BYTE","UNSIGNED_BYTE_2_3_3_REV","UNSIGNED_BYTE_3_3_2","UNSIGNED_INT","UNSIGNED_INT_10F_11F_11F_REV","UNSIGNED_INT_10_10_10_2","UNSIGNED_INT_24_8","UNSIGNED_INT_2_10_10_10_REV","UNSIGNED_INT_5_9_9_9_REV","UNSIGNED_INT_8_8_8_8","UNSIGNED_INT_8_8_8_8_REV","UNSIGNED_INT_ATOMIC_COUNTER","UNSIGNED_INT_IMAGE_1D","UNSIGNED_INT_IMAGE_1D_ARRAY","UNSIGNED_INT_IMAGE_2D","UNSIGNED_INT_IMAGE_2D_ARRAY","UNSIGNED_INT_IMAGE_2D_MULTISAMPLE","UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY","UNSIGNED_INT_IMAGE_2D_RECT","UNSIGNED_INT_IMAGE_3D","UNSIGNED_INT_IMAGE_BUFFER","UNSIGNED_INT_IMAGE_CUBE","UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY","UNSIGNED_INT_SAMPLER_1D","UNSIGNED_INT_SAMPLER_1D_ARRAY","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_2D_ARRAY","UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE","UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY","UNSIGNED_INT_SAMPLER_2D_RECT","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_BUFFER","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY","UNSIGNED_INT_VEC2","UNSIGNED_INT_VEC3","UNSIGNED_INT_VEC4","UNSIGNED_NORMALIZED","UNSIGNED_SHORT","UNSIGNED_SHORT_1_5_5_5_REV","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_4_4_4_4_REV","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","UNSIGNED_SHORT_5_6_5_REV","UPPER_LEFT","VALIDATE_STATUS","VENDOR","VERSION","VERTEX_ARRAY","VERTEX_ARRAY_BINDING","VERTEX_ATTRIB_ARRAY_BARRIER_BIT","VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","VERTEX_ATTRIB_ARRAY_DIVISOR","VERTEX_ATTRIB_ARRAY_ENABLED","VERTEX_ATTRIB_ARRAY_INTEGER","VERTEX_ATTRIB_ARRAY_LONG","VERTEX_ATTRIB_ARRAY_NORMALIZED","VERTEX_ATTRIB_ARRAY_POINTER","VERTEX_ATTRIB_ARRAY_SIZE","VERTEX_ATTRIB_ARRAY_STRIDE","VERTEX_ATTRIB_ARRAY_TYPE","VERTEX_ATTRIB_BINDING","VERTEX_ATTRIB_RELATIVE_OFFSET","VERTEX_BINDING_BUFFER","VERTEX_BINDING_DIVISOR","VERTEX_BINDING_OFFSET","VERTEX_BINDING_STRIDE","VERTEX_PROGRAM_POINT_SIZE","VERTEX_SHADER","VERTEX_SHADER_BIT","VERTEX_SUBROUTINE","VERTEX_SUBROUTINE_UNIFORM","VERTEX_TEXTURE","VIEWPORT","VIEWPORT_BOUNDS_RANGE","VIEWPORT_INDEX_PROVOKING_VERTEX","VIEWPORT_SUBPIXEL_BITS","VIEW_CLASS_128_BITS","VIEW_CLASS_16_BITS","VIEW_CLASS_24_BITS","VIEW_CLASS_32_BITS","VIEW_CLASS_48_BITS","VIEW_CLASS_64_BITS","VIEW_CLASS_8_BITS","VIEW_CLASS_96_BITS","VIEW_CLASS_BPTC_FLOAT","VIEW_CLASS_BPTC_UNORM","VIEW_CLASS_RGTC1_RED","VIEW_CLASS_RGTC2_RG","VIEW_CLASS_S3TC_DXT1_RGB","VIEW_CLASS_S3TC_DXT1_RGBA","VIEW_CLASS_S3TC_DXT3_RGBA","VIEW_CLASS_S3TC_DXT5_RGBA","VIEW_COMPATIBILITY_CLASS","WAIT_FAILED","WRITE_ONLY","XOR","ZERO","ZERO_TO_ONE","ActiveShaderProgram","ActiveTexture","AttachShader","BeginConditionalRender","BeginQuery","BeginQueryIndexed","BeginTransformFeedback","BindAttribLocation","BindBuffer","BindBufferBase","BindBufferRange","BindBuffersBase","BindBuffersRange","BindFragDataLocation","BindFragDataLocationIndexed","BindFramebuffer","BindImageTexture","BindImageTextures","BindProgramPipeline","BindRenderbuffer","BindSampler","BindSamplers","BindTexture","BindTextureUnit","BindTextures","BindTransformFeedback","BindVertexArray","BindVertexBuffer","BindVertexBuffers","BlendColor","BlendEquation","BlendEquationSeparate","BlendEquationSeparatei","BlendEquationi","BlendFunc","BlendFuncSeparate","BlendFuncSeparatei","BlendFunci","BlitFramebuffer","BlitNamedFramebuffer","BufferData","BufferStorage","BufferSubData","CheckFramebufferStatus","CheckNamedFramebufferStatus","ClampColor","Clear","ClearBufferData","ClearBufferSubData","ClearBufferfi","ClearBufferfv","ClearBufferiv","ClearBufferuiv","ClearColor","ClearDepth","ClearDepthf","ClearNamedBufferData","ClearNamedBufferSubData","ClearNamedFramebufferfi","ClearNamedFramebufferfv","ClearNamedFramebufferiv","ClearNamedFramebufferuiv","ClearStencil","ClearTexImage","ClearTexSubImage","ClientWaitSync","ClipControl","ColorMask","ColorMaski","ColorP3ui","ColorP3uiv","ColorP4ui","ColorP4uiv","CompileShader","CompressedTexImage1D","CompressedTexImage2D","CompressedTexImage3D","CompressedTexSubImage1D","CompressedTexSubImage2D","CompressedTexSubImage3D","CompressedTextureSubImage1D","CompressedTextureSubImage2D","CompressedTextureSubImage3D","CopyBufferSubData","CopyImageSubData","CopyNamedBufferSubData","CopyTexImage1D","CopyTexImage2D","CopyTexSubImage1D","CopyTexSubImage2D","CopyTexSubImage3D","CopyTextureSubImage1D","CopyTextureSubImage2D","CopyTextureSubImage3D","CreateBuffers","CreateFramebuffers","CreateProgram","CreateProgramPipelines","CreateQueries","CreateRenderbuffers","CreateSamplers","CreateShader","CreateShaderProgramv","CreateTextures","CreateTransformFeedbacks","CreateVertexArrays","CullFace","DebugMessageCallback","DebugMessageControl","DebugMessageInsert","DeleteBuffers","DeleteFramebuffers","DeleteProgram","DeleteProgramPipelines","DeleteQueries","DeleteRenderbuffers","DeleteSamplers","DeleteShader","DeleteSync","DeleteTextures","DeleteTransformFeedbacks","DeleteVertexArrays","DepthFunc","DepthMask","DepthRange","DepthRangeArrayv","DepthRangeIndexed","DepthRangef","DetachShader","Disable","DisableVertexArrayAttrib","DisableVertexAttribArray","Disablei","DispatchCompute","DispatchComputeIndirect","DrawArrays","DrawArraysIndirect","DrawArraysInstanced","DrawArraysInstancedBaseInstance","DrawBuffer","DrawBuffers","DrawElements","DrawElementsBaseVertex","DrawElementsIndirect","DrawElementsInstanced","DrawElementsInstancedBaseInstance","DrawElementsInstancedBaseVertex","DrawElementsInstancedBaseVertexBaseInstance","DrawRangeElements","DrawRangeElementsBaseVertex","DrawTransformFeedback","DrawTransformFeedbackInstanced","DrawTransformFeedbackStream","DrawTransformFeedbackStreamInstanced","Enable","EnableVertexArrayAttrib","EnableVertexAttribArray","Enablei","EndConditionalRender","EndQuery","EndQueryIndexed","EndTransformFeedback","FenceSync","Finish","Flush","FlushMappedBufferRange","FlushMappedNamedBufferRange","FramebufferParameteri","FramebufferRenderbuffer","FramebufferTexture","FramebufferTexture1D","FramebufferTexture2D","FramebufferTexture3D","FramebufferTextureLayer","FrontFace","GenBuffers","GenFramebuffers","GenProgramPipelines","GenQueries","GenRenderbuffers","GenSamplers","GenTextures","GenTransformFeedbacks","GenVertexArrays","GenerateMipmap","GenerateTextureMipmap","GetActiveAtomicCounterBufferiv","GetActiveAttrib","GetActiveSubroutineName","GetActiveSubroutineUniformName","GetActiveSubroutineUniformiv","GetActiveUniform","GetActiveUniformBlockName","GetActiveUniformBlockiv","GetActiveUniformName","GetActiveUniformsiv","GetAttachedShaders","GetAttribLocation","GetBooleani_v","GetBooleanv","GetBufferParameteri64v","GetBufferParameteriv","GetBufferPointerv","GetBufferSubData","GetCompressedTexImage","GetCompressedTextureImage","GetCompressedTextureSubImage","GetDebugMessageLog","GetDoublei_v","GetDoublev","GetError","GetFloati_v","GetFloatv","GetFragDataIndex","GetFragDataLocation","GetFramebufferAttachmentParameteriv","GetFramebufferParameteriv","GetGraphicsResetStatus","GetInteger64i_v","GetInteger64v","GetIntegeri_v","GetIntegerv","GetInternalformati64v","GetInternalformativ","GetMultisamplefv","GetNamedBufferParameteri64v","GetNamedBufferParameteriv","GetNamedBufferPointerv","GetNamedBufferSubData","GetNamedFramebufferAttachmentParameteriv","GetNamedFramebufferParameteriv","GetNamedRenderbufferParameteriv","GetObjectLabel","GetObjectPtrLabel","GetPointerv","GetProgramBinary","GetProgramInfoLog","GetProgramInterfaceiv","GetProgramPipelineInfoLog","GetProgramPipelineiv","GetProgramResourceIndex","GetProgramResourceLocation","GetProgramResourceLocationIndex","GetProgramResourceName","GetProgramResourceiv","GetProgramStageiv","GetProgramiv","GetQueryBufferObjecti64v","GetQueryBufferObjectiv","GetQueryBufferObjectui64v","GetQueryBufferObjectuiv","GetQueryIndexediv","GetQueryObjecti64v","GetQueryObjectiv","GetQueryObjectui64v","GetQueryObjectuiv","GetQueryiv","GetRenderbufferParameteriv","GetSamplerParameterIiv","GetSamplerParameterIuiv","GetSamplerParameterfv","GetSamplerParameteriv","GetShaderInfoLog","GetShaderPrecisionFormat","GetShaderSource","GetShaderiv","GetString","GetStringi","GetSubroutineIndex","GetSubroutineUniformLocation","GetSynciv","GetTexImage","GetTexLevelParameterfv","GetTexLevelParameteriv","GetTexParameterIiv","GetTexParameterIuiv","GetTexParameterfv","GetTexParameteriv","GetTextureImage","GetTextureLevelParameterfv","GetTextureLevelParameteriv","GetTextureParameterIiv","GetTextureParameterIuiv","GetTextureParameterfv","GetTextureParameteriv","GetTextureSubImage","GetTransformFeedbackVarying","GetTransformFeedbacki64_v","GetTransformFeedbacki_v","GetTransformFeedbackiv","GetUniformBlockIndex","GetUniformIndices","GetUniformLocation","GetUniformSubroutineuiv","GetUniformdv","GetUniformfv","GetUniformiv","GetUniformuiv","GetVertexArrayIndexed64iv","GetVertexArrayIndexediv","GetVertexArrayiv","GetVertexAttribIiv","GetVertexAttribIuiv","GetVertexAttribLdv","GetVertexAttribPointerv","GetVertexAttribdv","GetVertexAttribfv","GetVertexAttribiv","GetnColorTable","GetnCompressedTexImage","GetnConvolutionFilter","GetnHistogram","GetnMapdv","GetnMapfv","GetnMapiv","GetnMinmax","GetnPixelMapfv","GetnPixelMapuiv","GetnPixelMapusv","GetnPolygonStipple","GetnSeparableFilter","GetnTexImage","GetnUniformdv","GetnUniformfv","GetnUniformiv","GetnUniformuiv","Hint","InvalidateBufferData","InvalidateBufferSubData","InvalidateFramebuffer","InvalidateNamedFramebufferData","InvalidateNamedFramebufferSubData","InvalidateSubFramebuffer","InvalidateTexImage","InvalidateTexSubImage","IsBuffer","IsEnabled","IsEnabledi","IsFramebuffer","IsProgram","IsProgramPipeline","IsQuery","IsRenderbuffer","IsSampler","IsShader","IsSync","IsTexture","IsTransformFeedback","IsVertexArray","LineWidth","LinkProgram","LogicOp","MapBuffer","MapBufferRange","MapNamedBuffer","MapNamedBufferRange","MemoryBarrier","MemoryBarrierByRegion","MinSampleShading","MultiDrawArrays","MultiDrawArraysIndirect","MultiDrawElements","MultiDrawElementsBaseVertex","MultiDrawElementsIndirect","MultiTexCoordP1ui","MultiTexCoordP1uiv","MultiTexCoordP2ui","MultiTexCoordP2uiv","MultiTexCoordP3ui","MultiTexCoordP3uiv","MultiTexCoordP4ui","MultiTexCoordP4uiv","NamedBufferData","NamedBufferStorage","NamedBufferSubData","NamedFramebufferDrawBuffer","NamedFramebufferDrawBuffers","NamedFramebufferParameteri","NamedFramebufferReadBuffer","NamedFramebufferRenderbuffer","NamedFramebufferTexture","NamedFramebufferTextureLayer","NamedRenderbufferStorage","NamedRenderbufferStorageMultisample","NormalP3ui","NormalP3uiv","ObjectLabel","ObjectPtrLabel","PatchParameterfv","PatchParameteri","PauseTransformFeedback","PixelStoref","PixelStorei","PointParameterf","PointParameterfv","PointParameteri","PointParameteriv","PointSize","PolygonMode","PolygonOffset","PopDebugGroup","PrimitiveRestartIndex","ProgramBinary","ProgramParameteri","ProgramUniform1d","ProgramUniform1dv","ProgramUniform1f","ProgramUniform1fv","ProgramUniform1i","ProgramUniform1iv","ProgramUniform1ui","ProgramUniform1uiv","ProgramUniform2d","ProgramUniform2dv","ProgramUniform2f","ProgramUniform2fv","ProgramUniform2i","ProgramUniform2iv","ProgramUniform2ui","ProgramUniform2uiv","ProgramUniform3d","ProgramUniform3dv","ProgramUniform3f","ProgramUniform3fv","ProgramUniform3i","ProgramUniform3iv","ProgramUniform3ui","ProgramUniform3uiv","ProgramUniform4d","ProgramUniform4dv","ProgramUniform4f","ProgramUniform4fv","ProgramUniform4i","ProgramUniform4iv","ProgramUniform4ui","ProgramUniform4uiv","ProgramUniformMatrix2dv","ProgramUniformMatrix2fv","ProgramUniformMatrix2x3dv","ProgramUniformMatrix2x3fv","ProgramUniformMatrix2x4dv","ProgramUniformMatrix2x4fv","ProgramUniformMatrix3dv","ProgramUniformMatrix3fv","ProgramUniformMatrix3x2dv","ProgramUniformMatrix3x2fv","ProgramUniformMatrix3x4dv","ProgramUniformMatrix3x4fv","ProgramUniformMatrix4dv","ProgramUniformMatrix4fv","ProgramUniformMatrix4x2dv","ProgramUniformMatrix4x2fv","ProgramUniformMatrix4x3dv","ProgramUniformMatrix4x3fv","ProvokingVertex","PushDebugGroup","QueryCounter","ReadBuffer","ReadPixels","ReadnPixels","ReleaseShaderCompiler","RenderbufferStorage","RenderbufferStorageMultisample","ResumeTransformFeedback","SampleCoverage","SampleMaski","SamplerParameterIiv","SamplerParameterIuiv","SamplerParameterf","SamplerParameterfv","SamplerParameteri","SamplerParameteriv","Scissor","ScissorArrayv","ScissorIndexed","ScissorIndexedv","SecondaryColorP3ui","SecondaryColorP3uiv","ShaderBinary","ShaderSource","ShaderStorageBlockBinding","StencilFunc","StencilFuncSeparate","StencilMask","StencilMaskSeparate","StencilOp","StencilOpSeparate","TexBuffer","TexBufferRange","TexCoordP1ui","TexCoordP1uiv","TexCoordP2ui","TexCoordP2uiv","TexCoordP3ui","TexCoordP3uiv","TexCoordP4ui","TexCoordP4uiv","TexImage1D","TexImage2D","TexImage2DMultisample","TexImage3D","TexImage3DMultisample","TexParameterIiv","TexParameterIuiv","TexParameterf","TexParameterfv","TexParameteri","TexParameteriv","TexStorage1D","TexStorage2D","TexStorage2DMultisample","TexStorage3D","TexStorage3DMultisample","TexSubImage1D","TexSubImage2D","TexSubImage3D","TextureBarrier","TextureBuffer","TextureBufferRange","TextureParameterIiv","TextureParameterIuiv","TextureParameterf","TextureParameterfv","TextureParameteri","TextureParameteriv","TextureStorage1D","TextureStorage2D","TextureStorage2DMultisample","TextureStorage3D","TextureStorage3DMultisample","TextureSubImage1D","TextureSubImage2D","TextureSubImage3D","TextureView","TransformFeedbackBufferBase","TransformFeedbackBufferRange","TransformFeedbackVaryings","Uniform1d","Uniform1dv","Uniform1f","Uniform1fv","Uniform1i","Uniform1iv","Uniform1ui","Uniform1uiv","Uniform2d","Uniform2dv","Uniform2f","Uniform2fv","Uniform2i","Uniform2iv","Uniform2ui","Uniform2uiv","Uniform3d","Uniform3dv","Uniform3f","Uniform3fv","Uniform3i","Uniform3iv","Uniform3ui","Uniform3uiv","Uniform4d","Uniform4dv","Uniform4f","Uniform4fv","Uniform4i","Uniform4iv","Uniform4ui","Uniform4uiv","UniformBlockBinding","UniformMatrix2dv","UniformMatrix2fv","UniformMatrix2x3dv","UniformMatrix2x3fv","UniformMatrix2x4dv","UniformMatrix2x4fv","UniformMatrix3dv","UniformMatrix3fv","UniformMatrix3x2dv","UniformMatrix3x2fv","UniformMatrix3x4dv","UniformMatrix3x4fv","UniformMatrix4dv","UniformMatrix4fv","UniformMatrix4x2dv","UniformMatrix4x2fv","UniformMatrix4x3dv","UniformMatrix4x3fv","UniformSubroutinesuiv","UnmapBuffer","UnmapNamedBuffer","UseProgram","UseProgramStages","ValidateProgram","ValidateProgramPipeline","VertexArrayAttribBinding","VertexArrayAttribFormat","VertexArrayAttribIFormat","VertexArrayAttribLFormat","VertexArrayBindingDivisor","VertexArrayElementBuffer","VertexArrayVertexBuffer","VertexArrayVertexBuffers","VertexAttrib1d","VertexAttrib1dv","VertexAttrib1f","VertexAttrib1fv","VertexAttrib1s","VertexAttrib1sv","VertexAttrib2d","VertexAttrib2dv","VertexAttrib2f","VertexAttrib2fv","VertexAttrib2s","VertexAttrib2sv","VertexAttrib3d","VertexAttrib3dv","VertexAttrib3f","VertexAttrib3fv","VertexAttrib3s","VertexAttrib3sv","VertexAttrib4Nbv","VertexAttrib4Niv","VertexAttrib4Nsv","VertexAttrib4Nub","VertexAttrib4Nubv","VertexAttrib4Nuiv","VertexAttrib4Nusv","VertexAttrib4bv","VertexAttrib4d","VertexAttrib4dv","VertexAttrib4f","VertexAttrib4fv","VertexAttrib4iv","VertexAttrib4s","VertexAttrib4sv","VertexAttrib4ubv","VertexAttrib4uiv","VertexAttrib4usv","VertexAttribBinding","VertexAttribDivisor","VertexAttribFormat","VertexAttribI1i","VertexAttribI1iv","VertexAttribI1ui","VertexAttribI1uiv","VertexAttribI2i","VertexAttribI2iv","VertexAttribI2ui","VertexAttribI2uiv","VertexAttribI3i","VertexAttribI3iv","VertexAttribI3ui","VertexAttribI3uiv","VertexAttribI4bv","VertexAttribI4i","VertexAttribI4iv","VertexAttribI4sv","VertexAttribI4ubv","VertexAttribI4ui","VertexAttribI4uiv","VertexAttribI4usv","VertexAttribIFormat","VertexAttribIPointer","VertexAttribL1d","VertexAttribL1dv","VertexAttribL2d","VertexAttribL2dv","VertexAttribL3d","VertexAttribL3dv","VertexAttribL4d","VertexAttribL4dv","VertexAttribLFormat","VertexAttribLPointer","VertexAttribP1ui","VertexAttribP1uiv","VertexAttribP2ui","VertexAttribP2uiv","VertexAttribP3ui","VertexAttribP3uiv","VertexAttribP4ui","VertexAttribP4uiv","VertexAttribPointer","VertexBindingDivisor","VertexP2ui","VertexP2uiv","VertexP3ui","VertexP3uiv","VertexP4ui","VertexP4uiv","Viewport","ViewportArrayv","ViewportIndexedf","ViewportIndexedfv","WaitSync","FnPtr","new","load_with","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id"],"q":["gl","gl::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gl","gl::ActiveShaderProgram","","gl","gl::ActiveTexture","","gl","gl::AttachShader","","gl","gl::BeginConditionalRender","","gl","gl::BeginQuery","","gl","gl::BeginQueryIndexed","","gl","gl::BeginTransformFeedback","","gl","gl::BindAttribLocation","","gl","gl::BindBuffer","","gl","gl::BindBufferBase","","gl","gl::BindBufferRange","","gl","gl::BindBuffersBase","","gl","gl::BindBuffersRange","","gl","gl::BindFragDataLocation","","gl","gl::BindFragDataLocationIndexed","","gl","gl::BindFramebuffer","","gl","gl::BindImageTexture","","gl","gl::BindImageTextures","","gl","gl::BindProgramPipeline","","gl","gl::BindRenderbuffer","","gl","gl::BindSampler","","gl","gl::BindSamplers","","gl","gl::BindTexture","","gl","gl::BindTextureUnit","","gl","gl::BindTextures","","gl","gl::BindTransformFeedback","","gl","gl::BindVertexArray","","gl","gl::BindVertexBuffer","","gl","gl::BindVertexBuffers","","gl","gl::BlendColor","","gl","gl::BlendEquation","","gl","gl::BlendEquationSeparate","","gl","gl::BlendEquationSeparatei","","gl","gl::BlendEquationi","","gl","gl::BlendFunc","","gl","gl::BlendFuncSeparate","","gl","gl::BlendFuncSeparatei","","gl","gl::BlendFunci","","gl","gl::BlitFramebuffer","","gl","gl::BlitNamedFramebuffer","","gl","gl::BufferData","","gl","gl::BufferStorage","","gl","gl::BufferSubData","","gl","gl::CheckFramebufferStatus","","gl","gl::CheckNamedFramebufferStatus","","gl","gl::ClampColor","","gl","gl::Clear","","gl","gl::ClearBufferData","","gl","gl::ClearBufferSubData","","gl","gl::ClearBufferfi","","gl","gl::ClearBufferfv","","gl","gl::ClearBufferiv","","gl","gl::ClearBufferuiv","","gl","gl::ClearColor","","gl","gl::ClearDepth","","gl","gl::ClearDepthf","","gl","gl::ClearNamedBufferData","","gl","gl::ClearNamedBufferSubData","","gl","gl::ClearNamedFramebufferfi","","gl","gl::ClearNamedFramebufferfv","","gl","gl::ClearNamedFramebufferiv","","gl","gl::ClearNamedFramebufferuiv","","gl","gl::ClearStencil","","gl","gl::ClearTexImage","","gl","gl::ClearTexSubImage","","gl","gl::ClientWaitSync","","gl","gl::ClipControl","","gl","gl::ColorMask","","gl","gl::ColorMaski","","gl","gl::ColorP3ui","","gl","gl::ColorP3uiv","","gl","gl::ColorP4ui","","gl","gl::ColorP4uiv","","gl","gl::CompileShader","","gl","gl::CompressedTexImage1D","","gl","gl::CompressedTexImage2D","","gl","gl::CompressedTexImage3D","","gl","gl::CompressedTexSubImage1D","","gl","gl::CompressedTexSubImage2D","","gl","gl::CompressedTexSubImage3D","","gl","gl::CompressedTextureSubImage1D","","gl","gl::CompressedTextureSubImage2D","","gl","gl::CompressedTextureSubImage3D","","gl","gl::CopyBufferSubData","","gl","gl::CopyImageSubData","","gl","gl::CopyNamedBufferSubData","","gl","gl::CopyTexImage1D","","gl","gl::CopyTexImage2D","","gl","gl::CopyTexSubImage1D","","gl","gl::CopyTexSubImage2D","","gl","gl::CopyTexSubImage3D","","gl","gl::CopyTextureSubImage1D","","gl","gl::CopyTextureSubImage2D","","gl","gl::CopyTextureSubImage3D","","gl","gl::CreateBuffers","","gl","gl::CreateFramebuffers","","gl","gl::CreateProgram","","gl","gl::CreateProgramPipelines","","gl","gl::CreateQueries","","gl","gl::CreateRenderbuffers","","gl","gl::CreateSamplers","","gl","gl::CreateShader","","gl","gl::CreateShaderProgramv","","gl","gl::CreateTextures","","gl","gl::CreateTransformFeedbacks","","gl","gl::CreateVertexArrays","","gl","gl::CullFace","","gl","gl::DebugMessageCallback","","gl","gl::DebugMessageControl","","gl","gl::DebugMessageInsert","","gl","gl::DeleteBuffers","","gl","gl::DeleteFramebuffers","","gl","gl::DeleteProgram","","gl","gl::DeleteProgramPipelines","","gl","gl::DeleteQueries","","gl","gl::DeleteRenderbuffers","","gl","gl::DeleteSamplers","","gl","gl::DeleteShader","","gl","gl::DeleteSync","","gl","gl::DeleteTextures","","gl","gl::DeleteTransformFeedbacks","","gl","gl::DeleteVertexArrays","","gl","gl::DepthFunc","","gl","gl::DepthMask","","gl","gl::DepthRange","","gl","gl::DepthRangeArrayv","","gl","gl::DepthRangeIndexed","","gl","gl::DepthRangef","","gl","gl::DetachShader","","gl","gl::Disable","","gl","gl::DisableVertexArrayAttrib","","gl","gl::DisableVertexAttribArray","","gl","gl::Disablei","","gl","gl::DispatchCompute","","gl","gl::DispatchComputeIndirect","","gl","gl::DrawArrays","","gl","gl::DrawArraysIndirect","","gl","gl::DrawArraysInstanced","","gl","gl::DrawArraysInstancedBaseInstance","","gl","gl::DrawBuffer","","gl","gl::DrawBuffers","","gl","gl::DrawElements","","gl","gl::DrawElementsBaseVertex","","gl","gl::DrawElementsIndirect","","gl","gl::DrawElementsInstanced","","gl","gl::DrawElementsInstancedBaseInstance","","gl","gl::DrawElementsInstancedBaseVertex","","gl","gl::DrawElementsInstancedBaseVertexBaseInstance","","gl","gl::DrawRangeElements","","gl","gl::DrawRangeElementsBaseVertex","","gl","gl::DrawTransformFeedback","","gl","gl::DrawTransformFeedbackInstanced","","gl","gl::DrawTransformFeedbackStream","","gl","gl::DrawTransformFeedbackStreamInstanced","","gl","gl::Enable","","gl","gl::EnableVertexArrayAttrib","","gl","gl::EnableVertexAttribArray","","gl","gl::Enablei","","gl","gl::EndConditionalRender","","gl","gl::EndQuery","","gl","gl::EndQueryIndexed","","gl","gl::EndTransformFeedback","","gl","gl::FenceSync","","gl","gl::Finish","","gl","gl::Flush","","gl","gl::FlushMappedBufferRange","","gl","gl::FlushMappedNamedBufferRange","","gl","gl::FramebufferParameteri","","gl","gl::FramebufferRenderbuffer","","gl","gl::FramebufferTexture","","gl","gl::FramebufferTexture1D","","gl","gl::FramebufferTexture2D","","gl","gl::FramebufferTexture3D","","gl","gl::FramebufferTextureLayer","","gl","gl::FrontFace","","gl","gl::GenBuffers","","gl","gl::GenFramebuffers","","gl","gl::GenProgramPipelines","","gl","gl::GenQueries","","gl","gl::GenRenderbuffers","","gl","gl::GenSamplers","","gl","gl::GenTextures","","gl","gl::GenTransformFeedbacks","","gl","gl::GenVertexArrays","","gl","gl::GenerateMipmap","","gl","gl::GenerateTextureMipmap","","gl","gl::GetActiveAtomicCounterBufferiv","","gl","gl::GetActiveAttrib","","gl","gl::GetActiveSubroutineName","","gl","gl::GetActiveSubroutineUniformName","","gl","gl::GetActiveSubroutineUniformiv","","gl","gl::GetActiveUniform","","gl","gl::GetActiveUniformBlockName","","gl","gl::GetActiveUniformBlockiv","","gl","gl::GetActiveUniformName","","gl","gl::GetActiveUniformsiv","","gl","gl::GetAttachedShaders","","gl","gl::GetAttribLocation","","gl","gl::GetBooleani_v","","gl","gl::GetBooleanv","","gl","gl::GetBufferParameteri64v","","gl","gl::GetBufferParameteriv","","gl","gl::GetBufferPointerv","","gl","gl::GetBufferSubData","","gl","gl::GetCompressedTexImage","","gl","gl::GetCompressedTextureImage","","gl","gl::GetCompressedTextureSubImage","","gl","gl::GetDebugMessageLog","","gl","gl::GetDoublei_v","","gl","gl::GetDoublev","","gl","gl::GetError","","gl","gl::GetFloati_v","","gl","gl::GetFloatv","","gl","gl::GetFragDataIndex","","gl","gl::GetFragDataLocation","","gl","gl::GetFramebufferAttachmentParameteriv","","gl","gl::GetFramebufferParameteriv","","gl","gl::GetGraphicsResetStatus","","gl","gl::GetInteger64i_v","","gl","gl::GetInteger64v","","gl","gl::GetIntegeri_v","","gl","gl::GetIntegerv","","gl","gl::GetInternalformati64v","","gl","gl::GetInternalformativ","","gl","gl::GetMultisamplefv","","gl","gl::GetNamedBufferParameteri64v","","gl","gl::GetNamedBufferParameteriv","","gl","gl::GetNamedBufferPointerv","","gl","gl::GetNamedBufferSubData","","gl","gl::GetNamedFramebufferAttachmentParameteriv","","gl","gl::GetNamedFramebufferParameteriv","","gl","gl::GetNamedRenderbufferParameteriv","","gl","gl::GetObjectLabel","","gl","gl::GetObjectPtrLabel","","gl","gl::GetPointerv","","gl","gl::GetProgramBinary","","gl","gl::GetProgramInfoLog","","gl","gl::GetProgramInterfaceiv","","gl","gl::GetProgramPipelineInfoLog","","gl","gl::GetProgramPipelineiv","","gl","gl::GetProgramResourceIndex","","gl","gl::GetProgramResourceLocation","","gl","gl::GetProgramResourceLocationIndex","","gl","gl::GetProgramResourceName","","gl","gl::GetProgramResourceiv","","gl","gl::GetProgramStageiv","","gl","gl::GetProgramiv","","gl","gl::GetQueryBufferObjecti64v","","gl","gl::GetQueryBufferObjectiv","","gl","gl::GetQueryBufferObjectui64v","","gl","gl::GetQueryBufferObjectuiv","","gl","gl::GetQueryIndexediv","","gl","gl::GetQueryObjecti64v","","gl","gl::GetQueryObjectiv","","gl","gl::GetQueryObjectui64v","","gl","gl::GetQueryObjectuiv","","gl","gl::GetQueryiv","","gl","gl::GetRenderbufferParameteriv","","gl","gl::GetSamplerParameterIiv","","gl","gl::GetSamplerParameterIuiv","","gl","gl::GetSamplerParameterfv","","gl","gl::GetSamplerParameteriv","","gl","gl::GetShaderInfoLog","","gl","gl::GetShaderPrecisionFormat","","gl","gl::GetShaderSource","","gl","gl::GetShaderiv","","gl","gl::GetString","","gl","gl::GetStringi","","gl","gl::GetSubroutineIndex","","gl","gl::GetSubroutineUniformLocation","","gl","gl::GetSynciv","","gl","gl::GetTexImage","","gl","gl::GetTexLevelParameterfv","","gl","gl::GetTexLevelParameteriv","","gl","gl::GetTexParameterIiv","","gl","gl::GetTexParameterIuiv","","gl","gl::GetTexParameterfv","","gl","gl::GetTexParameteriv","","gl","gl::GetTextureImage","","gl","gl::GetTextureLevelParameterfv","","gl","gl::GetTextureLevelParameteriv","","gl","gl::GetTextureParameterIiv","","gl","gl::GetTextureParameterIuiv","","gl","gl::GetTextureParameterfv","","gl","gl::GetTextureParameteriv","","gl","gl::GetTextureSubImage","","gl","gl::GetTransformFeedbackVarying","","gl","gl::GetTransformFeedbacki64_v","","gl","gl::GetTransformFeedbacki_v","","gl","gl::GetTransformFeedbackiv","","gl","gl::GetUniformBlockIndex","","gl","gl::GetUniformIndices","","gl","gl::GetUniformLocation","","gl","gl::GetUniformSubroutineuiv","","gl","gl::GetUniformdv","","gl","gl::GetUniformfv","","gl","gl::GetUniformiv","","gl","gl::GetUniformuiv","","gl","gl::GetVertexArrayIndexed64iv","","gl","gl::GetVertexArrayIndexediv","","gl","gl::GetVertexArrayiv","","gl","gl::GetVertexAttribIiv","","gl","gl::GetVertexAttribIuiv","","gl","gl::GetVertexAttribLdv","","gl","gl::GetVertexAttribPointerv","","gl","gl::GetVertexAttribdv","","gl","gl::GetVertexAttribfv","","gl","gl::GetVertexAttribiv","","gl","gl::GetnColorTable","","gl","gl::GetnCompressedTexImage","","gl","gl::GetnConvolutionFilter","","gl","gl::GetnHistogram","","gl","gl::GetnMapdv","","gl","gl::GetnMapfv","","gl","gl::GetnMapiv","","gl","gl::GetnMinmax","","gl","gl::GetnPixelMapfv","","gl","gl::GetnPixelMapuiv","","gl","gl::GetnPixelMapusv","","gl","gl::GetnPolygonStipple","","gl","gl::GetnSeparableFilter","","gl","gl::GetnTexImage","","gl","gl::GetnUniformdv","","gl","gl::GetnUniformfv","","gl","gl::GetnUniformiv","","gl","gl::GetnUniformuiv","","gl","gl::Hint","","gl","gl::InvalidateBufferData","","gl","gl::InvalidateBufferSubData","","gl","gl::InvalidateFramebuffer","","gl","gl::InvalidateNamedFramebufferData","","gl","gl::InvalidateNamedFramebufferSubData","","gl","gl::InvalidateSubFramebuffer","","gl","gl::InvalidateTexImage","","gl","gl::InvalidateTexSubImage","","gl","gl::IsBuffer","","gl","gl::IsEnabled","","gl","gl::IsEnabledi","","gl","gl::IsFramebuffer","","gl","gl::IsProgram","","gl","gl::IsProgramPipeline","","gl","gl::IsQuery","","gl","gl::IsRenderbuffer","","gl","gl::IsSampler","","gl","gl::IsShader","","gl","gl::IsSync","","gl","gl::IsTexture","","gl","gl::IsTransformFeedback","","gl","gl::IsVertexArray","","gl","gl::LineWidth","","gl","gl::LinkProgram","","gl","gl::LogicOp","","gl","gl::MapBuffer","","gl","gl::MapBufferRange","","gl","gl::MapNamedBuffer","","gl","gl::MapNamedBufferRange","","gl","gl::MemoryBarrier","","gl","gl::MemoryBarrierByRegion","","gl","gl::MinSampleShading","","gl","gl::MultiDrawArrays","","gl","gl::MultiDrawArraysIndirect","","gl","gl::MultiDrawElements","","gl","gl::MultiDrawElementsBaseVertex","","gl","gl::MultiDrawElementsIndirect","","gl","gl::MultiTexCoordP1ui","","gl","gl::MultiTexCoordP1uiv","","gl","gl::MultiTexCoordP2ui","","gl","gl::MultiTexCoordP2uiv","","gl","gl::MultiTexCoordP3ui","","gl","gl::MultiTexCoordP3uiv","","gl","gl::MultiTexCoordP4ui","","gl","gl::MultiTexCoordP4uiv","","gl","gl::NamedBufferData","","gl","gl::NamedBufferStorage","","gl","gl::NamedBufferSubData","","gl","gl::NamedFramebufferDrawBuffer","","gl","gl::NamedFramebufferDrawBuffers","","gl","gl::NamedFramebufferParameteri","","gl","gl::NamedFramebufferReadBuffer","","gl","gl::NamedFramebufferRenderbuffer","","gl","gl::NamedFramebufferTexture","","gl","gl::NamedFramebufferTextureLayer","","gl","gl::NamedRenderbufferStorage","","gl","gl::NamedRenderbufferStorageMultisample","","gl","gl::NormalP3ui","","gl","gl::NormalP3uiv","","gl","gl::ObjectLabel","","gl","gl::ObjectPtrLabel","","gl","gl::PatchParameterfv","","gl","gl::PatchParameteri","","gl","gl::PauseTransformFeedback","","gl","gl::PixelStoref","","gl","gl::PixelStorei","","gl","gl::PointParameterf","","gl","gl::PointParameterfv","","gl","gl::PointParameteri","","gl","gl::PointParameteriv","","gl","gl::PointSize","","gl","gl::PolygonMode","","gl","gl::PolygonOffset","","gl","gl::PopDebugGroup","","gl","gl::PrimitiveRestartIndex","","gl","gl::ProgramBinary","","gl","gl::ProgramParameteri","","gl","gl::ProgramUniform1d","","gl","gl::ProgramUniform1dv","","gl","gl::ProgramUniform1f","","gl","gl::ProgramUniform1fv","","gl","gl::ProgramUniform1i","","gl","gl::ProgramUniform1iv","","gl","gl::ProgramUniform1ui","","gl","gl::ProgramUniform1uiv","","gl","gl::ProgramUniform2d","","gl","gl::ProgramUniform2dv","","gl","gl::ProgramUniform2f","","gl","gl::ProgramUniform2fv","","gl","gl::ProgramUniform2i","","gl","gl::ProgramUniform2iv","","gl","gl::ProgramUniform2ui","","gl","gl::ProgramUniform2uiv","","gl","gl::ProgramUniform3d","","gl","gl::ProgramUniform3dv","","gl","gl::ProgramUniform3f","","gl","gl::ProgramUniform3fv","","gl","gl::ProgramUniform3i","","gl","gl::ProgramUniform3iv","","gl","gl::ProgramUniform3ui","","gl","gl::ProgramUniform3uiv","","gl","gl::ProgramUniform4d","","gl","gl::ProgramUniform4dv","","gl","gl::ProgramUniform4f","","gl","gl::ProgramUniform4fv","","gl","gl::ProgramUniform4i","","gl","gl::ProgramUniform4iv","","gl","gl::ProgramUniform4ui","","gl","gl::ProgramUniform4uiv","","gl","gl::ProgramUniformMatrix2dv","","gl","gl::ProgramUniformMatrix2fv","","gl","gl::ProgramUniformMatrix2x3dv","","gl","gl::ProgramUniformMatrix2x3fv","","gl","gl::ProgramUniformMatrix2x4dv","","gl","gl::ProgramUniformMatrix2x4fv","","gl","gl::ProgramUniformMatrix3dv","","gl","gl::ProgramUniformMatrix3fv","","gl","gl::ProgramUniformMatrix3x2dv","","gl","gl::ProgramUniformMatrix3x2fv","","gl","gl::ProgramUniformMatrix3x4dv","","gl","gl::ProgramUniformMatrix3x4fv","","gl","gl::ProgramUniformMatrix4dv","","gl","gl::ProgramUniformMatrix4fv","","gl","gl::ProgramUniformMatrix4x2dv","","gl","gl::ProgramUniformMatrix4x2fv","","gl","gl::ProgramUniformMatrix4x3dv","","gl","gl::ProgramUniformMatrix4x3fv","","gl","gl::ProvokingVertex","","gl","gl::PushDebugGroup","","gl","gl::QueryCounter","","gl","gl::ReadBuffer","","gl","gl::ReadPixels","","gl","gl::ReadnPixels","","gl","gl::ReleaseShaderCompiler","","gl","gl::RenderbufferStorage","","gl","gl::RenderbufferStorageMultisample","","gl","gl::ResumeTransformFeedback","","gl","gl::SampleCoverage","","gl","gl::SampleMaski","","gl","gl::SamplerParameterIiv","","gl","gl::SamplerParameterIuiv","","gl","gl::SamplerParameterf","","gl","gl::SamplerParameterfv","","gl","gl::SamplerParameteri","","gl","gl::SamplerParameteriv","","gl","gl::Scissor","","gl","gl::ScissorArrayv","","gl","gl::ScissorIndexed","","gl","gl::ScissorIndexedv","","gl","gl::SecondaryColorP3ui","","gl","gl::SecondaryColorP3uiv","","gl","gl::ShaderBinary","","gl","gl::ShaderSource","","gl","gl::ShaderStorageBlockBinding","","gl","gl::StencilFunc","","gl","gl::StencilFuncSeparate","","gl","gl::StencilMask","","gl","gl::StencilMaskSeparate","","gl","gl::StencilOp","","gl","gl::StencilOpSeparate","","gl","gl::TexBuffer","","gl","gl::TexBufferRange","","gl","gl::TexCoordP1ui","","gl","gl::TexCoordP1uiv","","gl","gl::TexCoordP2ui","","gl","gl::TexCoordP2uiv","","gl","gl::TexCoordP3ui","","gl","gl::TexCoordP3uiv","","gl","gl::TexCoordP4ui","","gl","gl::TexCoordP4uiv","","gl","gl::TexImage1D","","gl","gl::TexImage2D","","gl","gl::TexImage2DMultisample","","gl","gl::TexImage3D","","gl","gl::TexImage3DMultisample","","gl","gl::TexParameterIiv","","gl","gl::TexParameterIuiv","","gl","gl::TexParameterf","","gl","gl::TexParameterfv","","gl","gl::TexParameteri","","gl","gl::TexParameteriv","","gl","gl::TexStorage1D","","gl","gl::TexStorage2D","","gl","gl::TexStorage2DMultisample","","gl","gl::TexStorage3D","","gl","gl::TexStorage3DMultisample","","gl","gl::TexSubImage1D","","gl","gl::TexSubImage2D","","gl","gl::TexSubImage3D","","gl","gl::TextureBarrier","","gl","gl::TextureBuffer","","gl","gl::TextureBufferRange","","gl","gl::TextureParameterIiv","","gl","gl::TextureParameterIuiv","","gl","gl::TextureParameterf","","gl","gl::TextureParameterfv","","gl","gl::TextureParameteri","","gl","gl::TextureParameteriv","","gl","gl::TextureStorage1D","","gl","gl::TextureStorage2D","","gl","gl::TextureStorage2DMultisample","","gl","gl::TextureStorage3D","","gl","gl::TextureStorage3DMultisample","","gl","gl::TextureSubImage1D","","gl","gl::TextureSubImage2D","","gl","gl::TextureSubImage3D","","gl","gl::TextureView","","gl","gl::TransformFeedbackBufferBase","","gl","gl::TransformFeedbackBufferRange","","gl","gl::TransformFeedbackVaryings","","gl","gl::Uniform1d","","gl","gl::Uniform1dv","","gl","gl::Uniform1f","","gl","gl::Uniform1fv","","gl","gl::Uniform1i","","gl","gl::Uniform1iv","","gl","gl::Uniform1ui","","gl","gl::Uniform1uiv","","gl","gl::Uniform2d","","gl","gl::Uniform2dv","","gl","gl::Uniform2f","","gl","gl::Uniform2fv","","gl","gl::Uniform2i","","gl","gl::Uniform2iv","","gl","gl::Uniform2ui","","gl","gl::Uniform2uiv","","gl","gl::Uniform3d","","gl","gl::Uniform3dv","","gl","gl::Uniform3f","","gl","gl::Uniform3fv","","gl","gl::Uniform3i","","gl","gl::Uniform3iv","","gl","gl::Uniform3ui","","gl","gl::Uniform3uiv","","gl","gl::Uniform4d","","gl","gl::Uniform4dv","","gl","gl::Uniform4f","","gl","gl::Uniform4fv","","gl","gl::Uniform4i","","gl","gl::Uniform4iv","","gl","gl::Uniform4ui","","gl","gl::Uniform4uiv","","gl","gl::UniformBlockBinding","","gl","gl::UniformMatrix2dv","","gl","gl::UniformMatrix2fv","","gl","gl::UniformMatrix2x3dv","","gl","gl::UniformMatrix2x3fv","","gl","gl::UniformMatrix2x4dv","","gl","gl::UniformMatrix2x4fv","","gl","gl::UniformMatrix3dv","","gl","gl::UniformMatrix3fv","","gl","gl::UniformMatrix3x2dv","","gl","gl::UniformMatrix3x2fv","","gl","gl::UniformMatrix3x4dv","","gl","gl::UniformMatrix3x4fv","","gl","gl::UniformMatrix4dv","","gl","gl::UniformMatrix4fv","","gl","gl::UniformMatrix4x2dv","","gl","gl::UniformMatrix4x2fv","","gl","gl::UniformMatrix4x3dv","","gl","gl::UniformMatrix4x3fv","","gl","gl::UniformSubroutinesuiv","","gl","gl::UnmapBuffer","","gl","gl::UnmapNamedBuffer","","gl","gl::UseProgram","","gl","gl::UseProgramStages","","gl","gl::ValidateProgram","","gl","gl::ValidateProgramPipeline","","gl","gl::VertexArrayAttribBinding","","gl","gl::VertexArrayAttribFormat","","gl","gl::VertexArrayAttribIFormat","","gl","gl::VertexArrayAttribLFormat","","gl","gl::VertexArrayBindingDivisor","","gl","gl::VertexArrayElementBuffer","","gl","gl::VertexArrayVertexBuffer","","gl","gl::VertexArrayVertexBuffers","","gl","gl::VertexAttrib1d","","gl","gl::VertexAttrib1dv","","gl","gl::VertexAttrib1f","","gl","gl::VertexAttrib1fv","","gl","gl::VertexAttrib1s","","gl","gl::VertexAttrib1sv","","gl","gl::VertexAttrib2d","","gl","gl::VertexAttrib2dv","","gl","gl::VertexAttrib2f","","gl","gl::VertexAttrib2fv","","gl","gl::VertexAttrib2s","","gl","gl::VertexAttrib2sv","","gl","gl::VertexAttrib3d","","gl","gl::VertexAttrib3dv","","gl","gl::VertexAttrib3f","","gl","gl::VertexAttrib3fv","","gl","gl::VertexAttrib3s","","gl","gl::VertexAttrib3sv","","gl","gl::VertexAttrib4Nbv","","gl","gl::VertexAttrib4Niv","","gl","gl::VertexAttrib4Nsv","","gl","gl::VertexAttrib4Nub","","gl","gl::VertexAttrib4Nubv","","gl","gl::VertexAttrib4Nuiv","","gl","gl::VertexAttrib4Nusv","","gl","gl::VertexAttrib4bv","","gl","gl::VertexAttrib4d","","gl","gl::VertexAttrib4dv","","gl","gl::VertexAttrib4f","","gl","gl::VertexAttrib4fv","","gl","gl::VertexAttrib4iv","","gl","gl::VertexAttrib4s","","gl","gl::VertexAttrib4sv","","gl","gl::VertexAttrib4ubv","","gl","gl::VertexAttrib4uiv","","gl","gl::VertexAttrib4usv","","gl","gl::VertexAttribBinding","","gl","gl::VertexAttribDivisor","","gl","gl::VertexAttribFormat","","gl","gl::VertexAttribI1i","","gl","gl::VertexAttribI1iv","","gl","gl::VertexAttribI1ui","","gl","gl::VertexAttribI1uiv","","gl","gl::VertexAttribI2i","","gl","gl::VertexAttribI2iv","","gl","gl::VertexAttribI2ui","","gl","gl::VertexAttribI2uiv","","gl","gl::VertexAttribI3i","","gl","gl::VertexAttribI3iv","","gl","gl::VertexAttribI3ui","","gl","gl::VertexAttribI3uiv","","gl","gl::VertexAttribI4bv","","gl","gl::VertexAttribI4i","","gl","gl::VertexAttribI4iv","","gl","gl::VertexAttribI4sv","","gl","gl::VertexAttribI4ubv","","gl","gl::VertexAttribI4ui","","gl","gl::VertexAttribI4uiv","","gl","gl::VertexAttribI4usv","","gl","gl::VertexAttribIFormat","","gl","gl::VertexAttribIPointer","","gl","gl::VertexAttribL1d","","gl","gl::VertexAttribL1dv","","gl","gl::VertexAttribL2d","","gl","gl::VertexAttribL2dv","","gl","gl::VertexAttribL3d","","gl","gl::VertexAttribL3dv","","gl","gl::VertexAttribL4d","","gl","gl::VertexAttribL4dv","","gl","gl::VertexAttribLFormat","","gl","gl::VertexAttribLPointer","","gl","gl::VertexAttribP1ui","","gl","gl::VertexAttribP1uiv","","gl","gl::VertexAttribP2ui","","gl","gl::VertexAttribP2uiv","","gl","gl::VertexAttribP3ui","","gl","gl::VertexAttribP3uiv","","gl","gl::VertexAttribP4ui","","gl","gl::VertexAttribP4uiv","","gl","gl::VertexAttribPointer","","gl","gl::VertexBindingDivisor","","gl","gl::VertexP2ui","","gl","gl::VertexP2uiv","","gl","gl::VertexP3ui","","gl","gl::VertexP3uiv","","gl","gl::VertexP4ui","","gl","gl::VertexP4uiv","","gl","gl::Viewport","","gl","gl::ViewportArrayv","","gl","gl::ViewportIndexedf","","gl","gl::ViewportIndexedfv","","gl","gl::WaitSync","","glgl::types","","","","","","","","","","","","","","","","","","","","","gl","","","","","",""],"dallbacks: ActiveTextureARB","Fallbacks: AttachObjectARB","Fallbacks: BeginConditionalRenderNV","Fallbacks: BeginQueryARB","","Fallbacks: BeginTransformFeedbackEXT, …","Fallbacks: BindAttribLocationARB","Fallbacks: BindBufferARB","Fallbacks: BindBufferBaseEXT, BindBufferBaseNV","Fallbacks: BindBufferRangeEXT, BindBufferRangeNV","","","Fallbacks: BindFragDataLocationEXT","Fallbacks: BindFragDataLocationIndexedEXT","","","","","","","","Fallbacks: BindTextureEXT","","","","Fallbacks: BindVertexArrayOES","","","Fallbacks: BlendColorEXT","Fallbacks: BlendEquationEXT","Fallbacks: BlendEquationSeparateEXT","Fallbacks: BlendEquationSeparateIndexedAMD, …","Fallbacks: BlendEquationIndexedAMD, BlendEquationiARB, …","","Fallbacks: BlendFuncSeparateEXT, BlendFuncSeparateINGR","Fallbacks: BlendFuncSeparateIndexedAMD, …","Fallbacks: BlendFuncIndexedAMD, BlendFunciARB, …","Fallbacks: BlitFramebufferEXT, BlitFramebufferNV","","Fallbacks: BufferDataARB","Fallbacks: BufferStorageEXT","Fallbacks: BufferSubDataARB","Fallbacks: CheckFramebufferStatusEXT","","Fallbacks: ClampColorARB","","","","","","","","","","Fallbacks: ClearDepthfOES","","","","","","","","Fallbacks: ClearTexImageEXT","Fallbacks: ClearTexSubImageEXT","Fallbacks: ClientWaitSyncAPPLE","Fallbacks: ClipControlEXT","","Fallbacks: ColorMaskIndexedEXT, ColorMaskiEXT, …","","","","","Fallbacks: CompileShaderARB","Fallbacks: CompressedTexImage1DARB","Fallbacks: CompressedTexImage2DARB","Fallbacks: CompressedTexImage3DARB","Fallbacks: CompressedTexSubImage1DARB","Fallbacks: CompressedTexSubImage2DARB","Fallbacks: CompressedTexSubImage3DARB","","","","Fallbacks: CopyBufferSubDataNV","Fallbacks: CopyImageSubDataEXT, CopyImageSubDataOES","","Fallbacks: CopyTexImage1DEXT","Fallbacks: CopyTexImage2DEXT","Fallbacks: CopyTexSubImage1DEXT","Fallbacks: CopyTexSubImage2DEXT","Fallbacks: CopyTexSubImage3DEXT","","","","","","Fallbacks: CreateProgramObjectARB","","","","","Fallbacks: CreateShaderObjectARB","","","","","","Fallbacks: DebugMessageCallbackARB, …","Fallbacks: DebugMessageControlARB, DebugMessageControlKHR","Fallbacks: DebugMessageInsertARB, DebugMessageInsertKHR","Fallbacks: DeleteBuffersARB","Fallbacks: DeleteFramebuffersEXT","","","Fallbacks: DeleteQueriesARB","Fallbacks: DeleteRenderbuffersEXT","","","Fallbacks: DeleteSyncAPPLE","","Fallbacks: DeleteTransformFeedbacksNV","Fallbacks: DeleteVertexArraysAPPLE, DeleteVertexArraysOES","","","","","","Fallbacks: DepthRangefOES","Fallbacks: DetachObjectARB","","","Fallbacks: DisableVertexAttribArrayARB","Fallbacks: DisableIndexedEXT, DisableiEXT, DisableiNV, …","","","Fallbacks: DrawArraysEXT","","Fallbacks: DrawArraysInstancedANGLE, …","Fallbacks: DrawArraysInstancedBaseInstanceEXT","","Fallbacks: DrawBuffersARB, DrawBuffersATI, DrawBuffersEXT","","Fallbacks: DrawElementsBaseVertexEXT, …","","Fallbacks: DrawElementsInstancedANGLE, …","Fallbacks: DrawElementsInstancedBaseInstanceEXT","Fallbacks: DrawElementsInstancedBaseVertexEXT, …","Fallbacks: DrawElementsInstancedBaseVertexBaseInstanceEXT","Fallbacks: DrawRangeElementsEXT","Fallbacks: DrawRangeElementsBaseVertexEXT, …","Fallbacks: DrawTransformFeedbackEXT, …","Fallbacks: DrawTransformFeedbackInstancedEXT","","","","","Fallbacks: EnableVertexAttribArrayARB","Fallbacks: EnableIndexedEXT, EnableiEXT, EnableiNV, …","Fallbacks: EndConditionalRenderNV, EndConditionalRenderNVX","Fallbacks: EndQueryARB","","Fallbacks: EndTransformFeedbackEXT, EndTransformFeedbackNV","Fallbacks: FenceSyncAPPLE","","","Fallbacks: FlushMappedBufferRangeAPPLE, …","","","Fallbacks: FramebufferRenderbufferEXT","Fallbacks: FramebufferTextureARB, FramebufferTextureEXT, …","Fallbacks: FramebufferTexture1DEXT","Fallbacks: FramebufferTexture2DEXT","Fallbacks: FramebufferTexture3DEXT","Fallbacks: FramebufferTextureLayerARB, …","","Fallbacks: GenBuffersARB","Fallbacks: GenFramebuffersEXT","","Fallbacks: GenQueriesARB","Fallbacks: GenRenderbuffersEXT","","","Fallbacks: GenTransformFeedbacksNV","Fallbacks: GenVertexArraysAPPLE, GenVertexArraysOES","Fallbacks: GenerateMipmapEXT","","","Fallbacks: GetActiveAttribARB","","","","Fallbacks: GetActiveUniformARB","","","","","","Fallbacks: GetAttribLocationARB","Fallbacks: GetBooleanIndexedvEXT","","","Fallbacks: GetBufferParameterivARB","Fallbacks: GetBufferPointervARB, GetBufferPointervOES","Fallbacks: GetBufferSubDataARB","Fallbacks: GetCompressedTexImageARB","","","Fallbacks: GetDebugMessageLogARB, GetDebugMessageLogKHR","Fallbacks: GetDoubleIndexedvEXT, GetDoublei_vEXT","","","Fallbacks: GetFloatIndexedvEXT, GetFloati_vEXT, …","","Fallbacks: GetFragDataIndexEXT","Fallbacks: GetFragDataLocationEXT","Fallbacks: GetFramebufferAttachmentParameterivEXT","","Fallbacks: GetGraphicsResetStatusEXT, …","","Fallbacks: GetInteger64vAPPLE","Fallbacks: GetIntegerIndexedvEXT","","","","Fallbacks: GetMultisamplefvNV","","","","","","","","Fallbacks: GetObjectLabelKHR","Fallbacks: GetObjectPtrLabelKHR","Fallbacks: GetPointervEXT, GetPointervKHR","Fallbacks: GetProgramBinaryOES","","","","","","","","","","","","","","","","","Fallbacks: GetQueryObjecti64vEXT","Fallbacks: GetQueryObjectivARB, GetQueryObjectivEXT","Fallbacks: GetQueryObjectui64vEXT","Fallbacks: GetQueryObjectuivARB","Fallbacks: GetQueryivARB","Fallbacks: GetRenderbufferParameterivEXT","Fallbacks: GetSamplerParameterIivEXT, …","Fallbacks: GetSamplerParameterIuivEXT, …","","","","","Fallbacks: GetShaderSourceARB","","","","","","Fallbacks: GetSyncivAPPLE","","","","Fallbacks: GetTexParameterIivEXT, GetTexParameterIivOES","Fallbacks: GetTexParameterIuivEXT, GetTexParameterIuivOES","","","","","","","","","","","Fallbacks: GetTransformFeedbackVaryingEXT","","","","","","Fallbacks: GetUniformLocationARB","","","Fallbacks: GetUniformfvARB","Fallbacks: GetUniformivARB","Fallbacks: GetUniformuivEXT","","","","Fallbacks: GetVertexAttribIivEXT","Fallbacks: GetVertexAttribIuivEXT","Fallbacks: GetVertexAttribLdvEXT","Fallbacks: GetVertexAttribPointervARB, …","Fallbacks: GetVertexAttribdvARB, GetVertexAttribdvNV","Fallbacks: GetVertexAttribfvARB, GetVertexAttribfvNV","Fallbacks: GetVertexAttribivARB, GetVertexAttribivNV","","","","","","","","","","","","","","","","Fallbacks: GetnUniformfvEXT, GetnUniformfvKHR","Fallbacks: GetnUniformivEXT, GetnUniformivKHR","Fallbacks: GetnUniformuivKHR","","","","","","","","","","Fallbacks: IsBufferARB","","Fallbacks: IsEnabledIndexedEXT, IsEnablediEXT, …","Fallbacks: IsFramebufferEXT","","","Fallbacks: IsQueryARB","Fallbacks: IsRenderbufferEXT","","","Fallbacks: IsSyncAPPLE","","Fallbacks: IsTransformFeedbackNV","Fallbacks: IsVertexArrayAPPLE, IsVertexArrayOES","","Fallbacks: LinkProgramARB","","Fallbacks: MapBufferARB, MapBufferOES","Fallbacks: MapBufferRangeEXT","","","Fallbacks: MemoryBarrierEXT","","Fallbacks: MinSampleShadingARB, MinSampleShadingOES","Fallbacks: MultiDrawArraysEXT","Fallbacks: MultiDrawArraysIndirectAMD, …","Fallbacks: MultiDrawElementsEXT","Fallbacks: MultiDrawElementsBaseVertexEXT","Fallbacks: MultiDrawElementsIndirectAMD, …","","","","","","","","","","Fallbacks: NamedBufferStorageEXT","Fallbacks: NamedBufferSubDataEXT","","","","","","","","","","","","Fallbacks: ObjectLabelKHR","Fallbacks: ObjectPtrLabelKHR","","Fallbacks: PatchParameteriEXT, PatchParameteriOES","Fallbacks: PauseTransformFeedbackNV","","","Fallbacks: PointParameterfARB, PointParameterfEXT, …","Fallbacks: PointParameterfvARB, PointParameterfvEXT, …","Fallbacks: PointParameteriNV","Fallbacks: PointParameterivNV","","Fallbacks: PolygonModeNV","","Fallbacks: PopDebugGroupKHR","","Fallbacks: ProgramBinaryOES","Fallbacks: ProgramParameteriARB, ProgramParameteriEXT","","","Fallbacks: ProgramUniform1fEXT","Fallbacks: ProgramUniform1fvEXT","Fallbacks: ProgramUniform1iEXT","Fallbacks: ProgramUniform1ivEXT","Fallbacks: ProgramUniform1uiEXT","Fallbacks: ProgramUniform1uivEXT","","","Fallbacks: ProgramUniform2fEXT","Fallbacks: ProgramUniform2fvEXT","Fallbacks: ProgramUniform2iEXT","Fallbacks: ProgramUniform2ivEXT","Fallbacks: ProgramUniform2uiEXT","Fallbacks: ProgramUniform2uivEXT","","","Fallbacks: ProgramUniform3fEXT","Fallbacks: ProgramUniform3fvEXT","Fallbacks: ProgramUniform3iEXT","Fallbacks: ProgramUniform3ivEXT","Fallbacks: ProgramUniform3uiEXT","Fallbacks: ProgramUniform3uivEXT","","","Fallbacks: ProgramUniform4fEXT","Fallbacks: ProgramUniform4fvEXT","Fallbacks: ProgramUniform4iEXT","Fallbacks: ProgramUniform4ivEXT","Fallbacks: ProgramUniform4uiEXT","Fallbacks: ProgramUniform4uivEXT","","Fallbacks: ProgramUniformMatrix2fvEXT","","Fallbacks: ProgramUniformMatrix2x3fvEXT","","Fallbacks: ProgramUniformMatrix2x4fvEXT","","Fallbacks: ProgramUniformMatrix3fvEXT","","Fallbacks: ProgramUniformMatrix3x2fvEXT","","Fallbacks: ProgramUniformMatrix3x4fvEXT","","Fallbacks: ProgramUniformMatrix4fvEXT","","Fallbacks: ProgramUniformMatrix4x2fvEXT","","Fallbacks: ProgramUniformMatrix4x3fvEXT","Fallbacks: ProvokingVertexEXT","Fallbacks: PushDebugGroupKHR","Fallbacks: QueryCounterEXT","","","Fallbacks: ReadnPixelsARB, ReadnPixelsEXT, ReadnPixelsKHR","","Fallbacks: RenderbufferStorageEXT","Fallbacks: RenderbufferStorageMultisampleEXT, …","Fallbacks: ResumeTransformFeedbackNV","Fallbacks: SampleCoverageARB","","Fallbacks: SamplerParameterIivEXT, SamplerParameterIivOES","Fallbacks: SamplerParameterIuivEXT, …","","","","","","Fallbacks: ScissorArrayvNV, ScissorArrayvOES","Fallbacks: ScissorIndexedNV, ScissorIndexedOES","Fallbacks: ScissorIndexedvNV, ScissorIndexedvOES","","","","Fallbacks: ShaderSourceARB","","","","","","","Fallbacks: StencilOpSeparateATI","Fallbacks: TexBufferARB, TexBufferEXT, TexBufferOES","Fallbacks: TexBufferRangeEXT, TexBufferRangeOES","","","","","","","","","","","","Fallbacks: TexImage3DEXT","","Fallbacks: TexParameterIivEXT, TexParameterIivOES","Fallbacks: TexParameterIuivEXT, TexParameterIuivOES","","","","","Fallbacks: TexStorage1DEXT","Fallbacks: TexStorage2DEXT","","Fallbacks: TexStorage3DEXT","Fallbacks: TexStorage3DMultisampleOES","Fallbacks: TexSubImage1DEXT","Fallbacks: TexSubImage2DEXT","Fallbacks: TexSubImage3DEXT","","","","","","","","","","","","","","","","","","Fallbacks: TextureViewEXT, TextureViewOES","","","Fallbacks: TransformFeedbackVaryingsEXT","","","Fallbacks: Uniform1fARB","Fallbacks: Uniform1fvARB","Fallbacks: Uniform1iARB","Fallbacks: Uniform1ivARB","Fallbacks: Uniform1uiEXT","Fallbacks: Uniform1uivEXT","","","Fallbacks: Uniform2fARB","Fallbacks: Uniform2fvARB","Fallbacks: Uniform2iARB","Fallbacks: Uniform2ivARB","Fallbacks: Uniform2uiEXT","Fallbacks: Uniform2uivEXT","","","Fallbacks: Uniform3fARB","Fallbacks: Uniform3fvARB","Fallbacks: Uniform3iARB","Fallbacks: Uniform3ivARB","Fallbacks: Uniform3uiEXT","Fallbacks: Uniform3uivEXT","","","Fallbacks: Uniform4fARB","Fallbacks: Uniform4fvARB","Fallbacks: Uniform4iARB","Fallbacks: Uniform4ivARB","Fallbacks: Uniform4uiEXT","Fallbacks: Uniform4uivEXT","","","Fallbacks: UniformMatrix2fvARB","","Fallbacks: UniformMatrix2x3fvNV","","Fallbacks: UniformMatrix2x4fvNV","","Fallbacks: UniformMatrix3fvARB","","Fallbacks: UniformMatrix3x2fvNV","","Fallbacks: UniformMatrix3x4fvNV","","Fallbacks: UniformMatrix4fvARB","","Fallbacks: UniformMatrix4x2fvNV","","Fallbacks: UniformMatrix4x3fvNV","","Fallbacks: UnmapBufferARB, UnmapBufferOES","","Fallbacks: UseProgramObjectARB","","Fallbacks: ValidateProgramARB","","","","","","","","","","Fallbacks: VertexAttrib1dARB, VertexAttrib1dNV","Fallbacks: VertexAttrib1dvARB, VertexAttrib1dvNV","Fallbacks: VertexAttrib1fARB, VertexAttrib1fNV","Fallbacks: VertexAttrib1fvARB, VertexAttrib1fvNV","Fallbacks: VertexAttrib1sARB, VertexAttrib1sNV","Fallbacks: VertexAttrib1svARB, VertexAttrib1svNV","Fallbacks: VertexAttrib2dARB, VertexAttrib2dNV","Fallbacks: VertexAttrib2dvARB, VertexAttrib2dvNV","Fallbacks: VertexAttrib2fARB, VertexAttrib2fNV","Fallbacks: VertexAttrib2fvARB, VertexAttrib2fvNV","Fallbacks: VertexAttrib2sARB, VertexAttrib2sNV","Fallbacks: VertexAttrib2svARB, VertexAttrib2svNV","Fallbacks: VertexAttrib3dARB, VertexAttrib3dNV","Fallbacks: VertexAttrib3dvARB, VertexAttrib3dvNV","Fallbacks: VertexAttrib3fARB, VertexAttrib3fNV","Fallbacks: VertexAttrib3fvARB, VertexAttrib3fvNV","Fallbacks: VertexAttrib3sARB, VertexAttrib3sNV","Fallbacks: VertexAttrib3svARB, VertexAttrib3svNV","Fallbacks: VertexAttrib4NbvARB","Fallbacks: VertexAttrib4NivARB","Fallbacks: VertexAttrib4NsvARB","Fallbacks: VertexAttrib4NubARB, VertexAttrib4ubNV","Fallbacks: VertexAttrib4NubvARB, VertexAttrib4ubvNV","Fallbacks: VertexAttrib4NuivARB","Fallbacks: VertexAttrib4NusvARB","Fallbacks: VertexAttrib4bvARB","Fallbacks: VertexAttrib4dARB, VertexAttrib4dNV","Fallbacks: VertexAttrib4dvARB, VertexAttrib4dvNV","Fallbacks: VertexAttrib4fARB, VertexAttrib4fNV","Fallbacks: VertexAttrib4fvARB, VertexAttrib4fvNV","Fallbacks: VertexAttrib4ivARB","Fallbacks: VertexAttrib4sARB, VertexAttrib4sNV","Fallbacks: VertexAttrib4svARB, VertexAttrib4svNV","Fallbacks: VertexAttrib4ubvARB","Fallbacks: VertexAttrib4uivARB","Fallbacks: VertexAttrib4usvARB","","Fallbacks: VertexAttribDivisorANGLE, …","","Fallbacks: VertexAttribI1iEXT","Fallbacks: VertexAttribI1ivEXT","Fallbacks: VertexAttribI1uiEXT","Fallbacks: VertexAttribI1uivEXT","Fallbacks: VertexAttribI2iEXT","Fallbacks: VertexAttribI2ivEXT","Fallbacks: VertexAttribI2uiEXT","Fallbacks: VertexAttribI2uivEXT","Fallbacks: VertexAttribI3iEXT","Fallbacks: VertexAttribI3ivEXT","Fallbacks: VertexAttribI3uiEXT","Fallbacks: VertexAttribI3uivEXT","Fallbacks: VertexAttribI4bvEXT","Fallbacks: VertexAttribI4iEXT","Fallbacks: VertexAttribI4ivEXT","Fallbacks: VertexAttribI4svEXT","Fallbacks: VertexAttribI4ubvEXT","Fallbacks: VertexAttribI4uiEXT","Fallbacks: VertexAttribI4uivEXT","Fallbacks: VertexAttribI4usvEXT","","Fallbacks: VertexAttribIPointerEXT","Fallbacks: VertexAttribL1dEXT","Fallbacks: VertexAttribL1dvEXT","Fallbacks: VertexAttribL2dEXT","Fallbacks: VertexAttribL2dvEXT","Fallbacks: VertexAttribL3dEXT","Fallbacks: VertexAttribL3dvEXT","Fallbacks: VertexAttribL4dEXT","Fallbacks: VertexAttribL4dvEXT","","Fallbacks: VertexAttribLPointerEXT","","","","","","","","","Fallbacks: VertexAttribPointerARB","","","","","","","","","Fallbacks: ViewportArrayvNV, ViewportArrayvOES","Fallbacks: ViewportIndexedfOES, ViewportIndexedfNV","Fallbacks: ViewportIndexedfvOES, ViewportIndexedfvNV","Fallbacks: WaitSyncAPPLE","","Creates a <code>FnPtr</code> from a load attempt.","Load each OpenGL symbol using a custom load function. …","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,1,1,1,1,1,1,1],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["gluint",6]]],[[["glenum",6]]],[[["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6]]],[[["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["glsizeiptr",6],["glintptr",6],["gluint",6]]],[[["glenum",6],["gluint",6],["glsizei",6]]],[[["glenum",6],["gluint",6],["glsizei",6]]],[[["gluint",6]]],[[["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["glint",6],["glboolean",6],["gluint",6]]],[[["gluint",6],["glsizei",6]]],[[["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["gluint",6]]],[[["gluint",6],["glsizei",6]]],[[["glenum",6],["gluint",6]]],[[["gluint",6]]],[[["gluint",6],["glsizei",6]]],[[["glenum",6],["gluint",6]]],[[["gluint",6]]],[[["glintptr",6],["gluint",6],["glsizei",6]]],[[["gluint",6],["glsizei",6]]],[[["glfloat",6]]],[[["glenum",6]]],[[["glenum",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6]]],[[["glenum",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["glbitfield",6],["glint",6]]],[[["glenum",6],["glint",6],["glbitfield",6],["gluint",6]]],[[["glenum",6],["glsizeiptr",6]]],[[["glenum",6],["glbitfield",6],["glsizeiptr",6]]],[[["glenum",6],["glintptr",6],["glsizeiptr",6]]],[[["glenum",6]],["glenum",6]],[[["glenum",6],["gluint",6]],["glenum",6]],[[["glenum",6]]],[[["glbitfield",6]]],[[["glenum",6]]],[[["glenum",6],["glsizeiptr",6],["glintptr",6]]],[[["glenum",6],["glint",6],["glfloat",6]]],[[["glenum",6],["glint",6]]],[[["glenum",6],["glint",6]]],[[["glenum",6],["glint",6]]],[[["glfloat",6]]],[[["gldouble",6]]],[[["glfloat",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["glsizeiptr",6],["glintptr",6],["gluint",6]]],[[["glenum",6],["glint",6],["gluint",6],["glfloat",6]]],[[["glenum",6],["gluint",6],["glint",6]]],[[["glenum",6],["gluint",6],["glint",6]]],[[["glenum",6],["gluint",6],["glint",6]]],[[["glint",6]]],[[["glenum",6],["glint",6],["gluint",6]]],[[["glenum",6],["glint",6],["glsizei",6],["gluint",6]]],[[["gluint64",6],["glbitfield",6],["glsync",6]],["glenum",6]],[[["glenum",6]]],[[["glboolean",6]]],[[["glboolean",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6]]],[[["gluint",6]]],[[["glenum",6],["glint",6],["glsizei",6]]],[[["glenum",6],["glint",6],["glsizei",6]]],[[["glenum",6],["glint",6],["glsizei",6]]],[[["glenum",6],["glint",6],["glsizei",6]]],[[["glenum",6],["glint",6],["glsizei",6]]],[[["glenum",6],["glint",6],["glsizei",6]]],[[["glenum",6],["glint",6],["glsizei",6],["gluint",6]]],[[["glenum",6],["glint",6],["glsizei",6],["gluint",6]]],[[["glenum",6],["glint",6],["glsizei",6],["gluint",6]]],[[["glenum",6],["glintptr",6],["glsizeiptr",6]]],[[["glenum",6],["glint",6],["gluint",6],["glsizei",6]]],[[["glintptr",6],["gluint",6],["glsizeiptr",6]]],[[["glenum",6],["glint",6],["glsizei",6]]],[[["glenum",6],["glint",6],["glsizei",6]]],[[["glenum",6],["glint",6],["glsizei",6]]],[[["glenum",6],["glint",6],["glsizei",6]]],[[["glenum",6],["glint",6],["glsizei",6]]],[[["glsizei",6],["gluint",6],["glint",6]]],[[["glint",6],["glsizei",6],["gluint",6]]],[[["glint",6],["glsizei",6],["gluint",6]]],[[["glsizei",6]]],[[["glsizei",6]]],[[],["gluint",6]],[[["glsizei",6]]],[[["glenum",6],["glsizei",6]]],[[["glsizei",6]]],[[["glsizei",6]]],[[["glenum",6]],["gluint",6]],[[["glenum",6],["glsizei",6]],["gluint",6]],[[["glenum",6],["glsizei",6]]],[[["glsizei",6]]],[[["glsizei",6]]],[[["glenum",6]]],[[["gldebugproc",6]]],[[["glenum",6],["glboolean",6],["glsizei",6]]],[[["glenum",6],["gluint",6],["glsizei",6]]],[[["glsizei",6]]],[[["glsizei",6]]],[[["gluint",6]]],[[["glsizei",6]]],[[["glsizei",6]]],[[["glsizei",6]]],[[["glsizei",6]]],[[["gluint",6]]],[[["glsync",6]]],[[["glsizei",6]]],[[["glsizei",6]]],[[["glsizei",6]]],[[["glenum",6]]],[[["glboolean",6]]],[[["gldouble",6]]],[[["gluint",6],["glsizei",6]]],[[["gldouble",6],["gluint",6]]],[[["glfloat",6]]],[[["gluint",6]]],[[["glenum",6]]],[[["gluint",6]]],[[["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["gluint",6]]],[[["glintptr",6]]],[[["glenum",6],["glint",6],["glsizei",6]]],[[["glenum",6]]],[[["glenum",6],["glint",6],["glsizei",6]]],[[["glenum",6],["glint",6],["glsizei",6],["gluint",6]]],[[["glenum",6]]],[[["glsizei",6]]],[[["glenum",6],["glsizei",6]]],[[["glenum",6],["glsizei",6],["glint",6]]],[[["glenum",6]]],[[["glenum",6],["glsizei",6]]],[[["glenum",6],["glsizei",6],["gluint",6]]],[[["glenum",6],["glsizei",6],["glint",6]]],[[["glenum",6],["glint",6],["glsizei",6],["gluint",6]]],[[["glenum",6],["gluint",6],["glsizei",6]]],[[["glenum",6],["glint",6],["gluint",6],["glsizei",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6],["glsizei",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6],["glsizei",6]]],[[["glenum",6]]],[[["gluint",6]]],[[["gluint",6]]],[[["glenum",6],["gluint",6]]],[[]],[[["glenum",6]]],[[["glenum",6],["gluint",6]]],[[]],[[["glenum",6],["glbitfield",6]],["glsync",6]],[[]],[[]],[[["glenum",6],["glintptr",6],["glsizeiptr",6]]],[[["glintptr",6],["gluint",6],["glsizeiptr",6]]],[[["glenum",6],["glint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6],["glint",6]]],[[["glenum",6],["gluint",6],["glint",6]]],[[["glenum",6],["gluint",6],["glint",6]]],[[["glenum",6],["glint",6],["gluint",6]]],[[["glenum",6],["glint",6],["gluint",6]]],[[["glenum",6]]],[[["glsizei",6]]],[[["glsizei",6]]],[[["glsizei",6]]],[[["glsizei",6]]],[[["glsizei",6]]],[[["glsizei",6]]],[[["glsizei",6]]],[[["glsizei",6]]],[[["glsizei",6]]],[[["glenum",6]]],[[["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["gluint",6],["glsizei",6]]],[[["glenum",6],["gluint",6],["glsizei",6]]],[[["glenum",6],["gluint",6],["glsizei",6]]],[[["glenum",6],["gluint",6]]],[[["gluint",6],["glsizei",6]]],[[["gluint",6],["glsizei",6]]],[[["glenum",6],["gluint",6]]],[[["gluint",6],["glsizei",6]]],[[["glenum",6],["gluint",6],["glsizei",6]]],[[["gluint",6],["glsizei",6]]],[[["gluint",6]],["glint",6]],[[["glenum",6],["gluint",6]]],[[["glenum",6]]],[[["glenum",6]]],[[["glenum",6]]],[[["glenum",6]]],[[["glenum",6],["glintptr",6],["glsizeiptr",6]]],[[["glenum",6],["glint",6]]],[[["glsizei",6],["gluint",6],["glint",6]]],[[["glint",6],["glsizei",6],["gluint",6]]],[[["gluint",6],["glsizei",6]],["gluint",6]],[[["glenum",6],["gluint",6]]],[[["glenum",6]]],[[],["glenum",6]],[[["glenum",6],["gluint",6]]],[[["glenum",6]]],[[["gluint",6]],["glint",6]],[[["gluint",6]],["glint",6]],[[["glenum",6]]],[[["glenum",6]]],[[],["glenum",6]],[[["glenum",6],["gluint",6]]],[[["glenum",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6]]],[[["glenum",6],["glsizei",6]]],[[["glenum",6],["glsizei",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glintptr",6],["gluint",6],["glsizeiptr",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6],["glsizei",6]]],[[["glsizei",6]]],[[["glenum",6]]],[[["gluint",6],["glsizei",6]]],[[["gluint",6],["glsizei",6]]],[[["glenum",6],["gluint",6]]],[[["gluint",6],["glsizei",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]],["gluint",6]],[[["glenum",6],["gluint",6]],["glint",6]],[[["glenum",6],["gluint",6]],["glint",6]],[[["glenum",6],["gluint",6],["glsizei",6]]],[[["glenum",6],["gluint",6],["glsizei",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["glintptr",6],["gluint",6]]],[[["glenum",6],["glintptr",6],["gluint",6]]],[[["glenum",6],["glintptr",6],["gluint",6]]],[[["glenum",6],["glintptr",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6]]],[[["glenum",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["gluint",6],["glsizei",6]]],[[["glenum",6]]],[[["gluint",6],["glsizei",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]],["gluint",6]],[[["glenum",6],["gluint",6]],["glint",6]],[[["glenum",6],["glsync",6],["glsizei",6]]],[[["glenum",6],["glint",6]]],[[["glenum",6],["glint",6]]],[[["glenum",6],["glint",6]]],[[["glenum",6]]],[[["glenum",6]]],[[["glenum",6]]],[[["glenum",6]]],[[["glenum",6],["glint",6],["gluint",6],["glsizei",6]]],[[["glenum",6],["gluint",6],["glint",6]]],[[["glenum",6],["gluint",6],["glint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["glint",6],["glsizei",6],["gluint",6]]],[[["gluint",6],["glsizei",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["gluint",6]],["gluint",6]],[[["gluint",6],["glsizei",6]]],[[["gluint",6]],["glint",6]],[[["glenum",6],["glint",6]]],[[["gluint",6],["glint",6]]],[[["gluint",6],["glint",6]]],[[["gluint",6],["glint",6]]],[[["gluint",6],["glint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["glsizei",6]]],[[["glenum",6],["glint",6],["glsizei",6]]],[[["glenum",6],["glsizei",6]]],[[["glenum",6],["glboolean",6],["glsizei",6]]],[[["glenum",6],["glsizei",6]]],[[["glenum",6],["glsizei",6]]],[[["glenum",6],["glsizei",6]]],[[["glenum",6],["glboolean",6],["glsizei",6]]],[[["glenum",6],["glsizei",6]]],[[["glenum",6],["glsizei",6]]],[[["glenum",6],["glsizei",6]]],[[["glsizei",6]]],[[["glenum",6],["glsizei",6]]],[[["glenum",6],["glint",6],["glsizei",6]]],[[["glsizei",6],["gluint",6],["glint",6]]],[[["glsizei",6],["gluint",6],["glint",6]]],[[["glsizei",6],["gluint",6],["glint",6]]],[[["glsizei",6],["gluint",6],["glint",6]]],[[["glenum",6]]],[[["gluint",6]]],[[["glintptr",6],["gluint",6],["glsizeiptr",6]]],[[["glenum",6],["glsizei",6]]],[[["gluint",6],["glsizei",6]]],[[["glint",6],["gluint",6],["glsizei",6]]],[[["glenum",6],["glint",6],["glsizei",6]]],[[["gluint",6],["glint",6]]],[[["glint",6],["glsizei",6],["gluint",6]]],[[["gluint",6]],["glboolean",6]],[[["glenum",6]],["glboolean",6]],[[["glenum",6],["gluint",6]],["glboolean",6]],[[["gluint",6]],["glboolean",6]],[[["gluint",6]],["glboolean",6]],[[["gluint",6]],["glboolean",6]],[[["gluint",6]],["glboolean",6]],[[["gluint",6]],["glboolean",6]],[[["gluint",6]],["glboolean",6]],[[["gluint",6]],["glboolean",6]],[[["glsync",6]],["glboolean",6]],[[["gluint",6]],["glboolean",6]],[[["gluint",6]],["glboolean",6]],[[["gluint",6]],["glboolean",6]],[[["glfloat",6]]],[[["gluint",6]]],[[["glenum",6]]],[[["glenum",6]]],[[["glenum",6],["glsizeiptr",6],["glintptr",6],["glbitfield",6]]],[[["glenum",6],["gluint",6]]],[[["glsizeiptr",6],["glintptr",6],["gluint",6],["glbitfield",6]]],[[["glbitfield",6]]],[[["glbitfield",6]]],[[["glfloat",6]]],[[["glenum",6],["glsizei",6]]],[[["glenum",6],["glsizei",6]]],[[["glenum",6],["glsizei",6]]],[[["glenum",6],["glsizei",6]]],[[["glenum",6],["glsizei",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6]]],[[["glenum",6],["gluint",6],["glsizeiptr",6]]],[[["glbitfield",6],["gluint",6],["glsizeiptr",6]]],[[["glintptr",6],["gluint",6],["glsizeiptr",6]]],[[["glenum",6],["gluint",6]]],[[["gluint",6],["glsizei",6]]],[[["glenum",6],["gluint",6],["glint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6],["glint",6]]],[[["glenum",6],["glint",6],["gluint",6]]],[[["glenum",6],["gluint",6],["glsizei",6]]],[[["glenum",6],["gluint",6],["glsizei",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6]]],[[["glenum",6],["gluint",6],["glsizei",6]]],[[["glsizei",6]]],[[["glenum",6]]],[[["glenum",6],["glint",6]]],[[]],[[["glenum",6],["glfloat",6]]],[[["glenum",6],["glint",6]]],[[["glenum",6],["glfloat",6]]],[[["glenum",6]]],[[["glenum",6],["glint",6]]],[[["glenum",6]]],[[["glfloat",6]]],[[["glenum",6]]],[[["glfloat",6]]],[[]],[[["gluint",6]]],[[["glenum",6],["gluint",6],["glsizei",6]]],[[["glenum",6],["gluint",6],["glint",6]]],[[["gldouble",6],["gluint",6],["glint",6]]],[[["glsizei",6],["gluint",6],["glint",6]]],[[["glfloat",6],["gluint",6],["glint",6]]],[[["glsizei",6],["gluint",6],["glint",6]]],[[["gluint",6],["glint",6]]],[[["glsizei",6],["gluint",6],["glint",6]]],[[["gluint",6],["glint",6]]],[[["glsizei",6],["gluint",6],["glint",6]]],[[["gldouble",6],["glint",6],["gluint",6]]],[[["glsizei",6],["gluint",6],["glint",6]]],[[["glint",6],["gluint",6],["glfloat",6]]],[[["glsizei",6],["gluint",6],["glint",6]]],[[["gluint",6],["glint",6]]],[[["glsizei",6],["gluint",6],["glint",6]]],[[["gluint",6],["glint",6]]],[[["glsizei",6],["gluint",6],["glint",6]]],[[["gldouble",6],["glint",6],["gluint",6]]],[[["glsizei",6],["gluint",6],["glint",6]]],[[["glint",6],["gluint",6],["glfloat",6]]],[[["glsizei",6],["gluint",6],["glint",6]]],[[["gluint",6],["glint",6]]],[[["glsizei",6],["gluint",6],["glint",6]]],[[["gluint",6],["glint",6]]],[[["glsizei",6],["gluint",6],["glint",6]]],[[["gldouble",6],["glint",6],["gluint",6]]],[[["glsizei",6],["gluint",6],["glint",6]]],[[["glint",6],["gluint",6],["glfloat",6]]],[[["glsizei",6],["gluint",6],["glint",6]]],[[["gluint",6],["glint",6]]],[[["glsizei",6],["gluint",6],["glint",6]]],[[["gluint",6],["glint",6]]],[[["glsizei",6],["gluint",6],["glint",6]]],[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]],[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]],[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]],[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]],[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]],[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]],[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]],[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]],[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]],[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]],[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]],[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]],[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]],[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]],[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]],[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]],[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]],[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]],[[["glenum",6]]],[[["glenum",6],["gluint",6],["glsizei",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6]]],[[["glenum",6],["glint",6],["glsizei",6]]],[[["glenum",6],["glint",6],["glsizei",6]]],[[]],[[["glenum",6],["glsizei",6]]],[[["glenum",6],["glsizei",6]]],[[]],[[["glboolean",6],["glfloat",6]]],[[["glbitfield",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6],["glfloat",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6],["glint",6]]],[[["glenum",6],["gluint",6]]],[[["glint",6],["glsizei",6]]],[[["gluint",6],["glsizei",6]]],[[["glint",6],["glsizei",6],["gluint",6]]],[[["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6]]],[[["glenum",6],["glsizei",6]]],[[["gluint",6],["glsizei",6]]],[[["gluint",6]]],[[["glenum",6],["glint",6],["gluint",6]]],[[["glenum",6],["glint",6],["gluint",6]]],[[["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6]]],[[["glenum",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["glsizeiptr",6],["glintptr",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6]]],[[["glenum",6],["glint",6],["glsizei",6]]],[[["glenum",6],["glint",6],["glsizei",6]]],[[["glenum",6],["glboolean",6],["glsizei",6]]],[[["glenum",6],["glint",6],["glsizei",6]]],[[["glenum",6],["glboolean",6],["glsizei",6]]],[[["glenum",6]]],[[["glenum",6]]],[[["glenum",6],["glfloat",6]]],[[["glenum",6]]],[[["glenum",6],["glint",6]]],[[["glenum",6]]],[[["glenum",6],["glsizei",6]]],[[["glenum",6],["glsizei",6]]],[[["glenum",6],["glboolean",6],["glsizei",6]]],[[["glenum",6],["glsizei",6]]],[[["glenum",6],["glboolean",6],["glsizei",6]]],[[["glenum",6],["glint",6],["glsizei",6]]],[[["glenum",6],["glint",6],["glsizei",6]]],[[["glenum",6],["glint",6],["glsizei",6]]],[[]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["glsizeiptr",6],["glintptr",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6],["glfloat",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6],["glint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6],["gluint",6],["glsizei",6]]],[[["glenum",6],["gluint",6],["glsizei",6]]],[[["glenum",6],["glboolean",6],["gluint",6],["glsizei",6]]],[[["glenum",6],["gluint",6],["glsizei",6]]],[[["glenum",6],["glboolean",6],["gluint",6],["glsizei",6]]],[[["glenum",6],["glint",6],["glsizei",6],["gluint",6]]],[[["glenum",6],["glint",6],["glsizei",6],["gluint",6]]],[[["glenum",6],["glint",6],["glsizei",6],["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["gluint",6]]],[[["glintptr",6],["gluint",6],["glsizeiptr",6]]],[[["glenum",6],["gluint",6],["glsizei",6]]],[[["gldouble",6],["glint",6]]],[[["glint",6],["glsizei",6]]],[[["glint",6],["glfloat",6]]],[[["glint",6],["glsizei",6]]],[[["glint",6]]],[[["glint",6],["glsizei",6]]],[[["glint",6],["gluint",6]]],[[["glint",6],["glsizei",6]]],[[["gldouble",6],["glint",6]]],[[["glint",6],["glsizei",6]]],[[["glint",6],["glfloat",6]]],[[["glint",6],["glsizei",6]]],[[["glint",6]]],[[["glint",6],["glsizei",6]]],[[["glint",6],["gluint",6]]],[[["glint",6],["glsizei",6]]],[[["gldouble",6],["glint",6]]],[[["glint",6],["glsizei",6]]],[[["glint",6],["glfloat",6]]],[[["glint",6],["glsizei",6]]],[[["glint",6]]],[[["glint",6],["glsizei",6]]],[[["glint",6],["gluint",6]]],[[["glint",6],["glsizei",6]]],[[["gldouble",6],["glint",6]]],[[["glint",6],["glsizei",6]]],[[["glint",6],["glfloat",6]]],[[["glint",6],["glsizei",6]]],[[["glint",6]]],[[["glint",6],["glsizei",6]]],[[["glint",6],["gluint",6]]],[[["glint",6],["glsizei",6]]],[[["gluint",6]]],[[["glboolean",6],["glint",6],["glsizei",6]]],[[["glboolean",6],["glint",6],["glsizei",6]]],[[["glboolean",6],["glint",6],["glsizei",6]]],[[["glboolean",6],["glint",6],["glsizei",6]]],[[["glboolean",6],["glint",6],["glsizei",6]]],[[["glboolean",6],["glint",6],["glsizei",6]]],[[["glboolean",6],["glint",6],["glsizei",6]]],[[["glboolean",6],["glint",6],["glsizei",6]]],[[["glboolean",6],["glint",6],["glsizei",6]]],[[["glboolean",6],["glint",6],["glsizei",6]]],[[["glboolean",6],["glint",6],["glsizei",6]]],[[["glboolean",6],["glint",6],["glsizei",6]]],[[["glboolean",6],["glint",6],["glsizei",6]]],[[["glboolean",6],["glint",6],["glsizei",6]]],[[["glboolean",6],["glint",6],["glsizei",6]]],[[["glboolean",6],["glint",6],["glsizei",6]]],[[["glboolean",6],["glint",6],["glsizei",6]]],[[["glboolean",6],["glint",6],["glsizei",6]]],[[["glenum",6],["glsizei",6]]],[[["glenum",6]],["glboolean",6]],[[["gluint",6]],["glboolean",6]],[[["gluint",6]]],[[["glbitfield",6],["gluint",6]]],[[["gluint",6]]],[[["gluint",6]]],[[["gluint",6]]],[[["glenum",6],["glint",6],["glboolean",6],["gluint",6]]],[[["glenum",6],["glint",6],["gluint",6]]],[[["glenum",6],["glint",6],["gluint",6]]],[[["gluint",6]]],[[["gluint",6]]],[[["glintptr",6],["gluint",6],["glsizei",6]]],[[["gluint",6],["glsizei",6]]],[[["gldouble",6],["gluint",6]]],[[["gluint",6]]],[[["gluint",6],["glfloat",6]]],[[["gluint",6]]],[[["glshort",6],["gluint",6]]],[[["gluint",6]]],[[["gldouble",6],["gluint",6]]],[[["gluint",6]]],[[["gluint",6],["glfloat",6]]],[[["gluint",6]]],[[["glshort",6],["gluint",6]]],[[["gluint",6]]],[[["gldouble",6],["gluint",6]]],[[["gluint",6]]],[[["gluint",6],["glfloat",6]]],[[["gluint",6]]],[[["glshort",6],["gluint",6]]],[[["gluint",6]]],[[["gluint",6]]],[[["gluint",6]]],[[["gluint",6]]],[[["gluint",6],["glubyte",6]]],[[["gluint",6]]],[[["gluint",6]]],[[["gluint",6]]],[[["gluint",6]]],[[["gldouble",6],["gluint",6]]],[[["gluint",6]]],[[["gluint",6],["glfloat",6]]],[[["gluint",6]]],[[["gluint",6]]],[[["glshort",6],["gluint",6]]],[[["gluint",6]]],[[["gluint",6]]],[[["gluint",6]]],[[["gluint",6]]],[[["gluint",6]]],[[["gluint",6]]],[[["glenum",6],["glint",6],["glboolean",6],["gluint",6]]],[[["gluint",6],["glint",6]]],[[["gluint",6]]],[[["gluint",6]]],[[["gluint",6]]],[[["gluint",6],["glint",6]]],[[["gluint",6]]],[[["gluint",6]]],[[["gluint",6]]],[[["gluint",6],["glint",6]]],[[["gluint",6]]],[[["gluint",6]]],[[["gluint",6]]],[[["gluint",6]]],[[["gluint",6],["glint",6]]],[[["gluint",6]]],[[["gluint",6]]],[[["gluint",6]]],[[["gluint",6]]],[[["gluint",6]]],[[["gluint",6]]],[[["glenum",6],["glint",6],["gluint",6]]],[[["glenum",6],["glint",6],["gluint",6],["glsizei",6]]],[[["gldouble",6],["gluint",6]]],[[["gluint",6]]],[[["gldouble",6],["gluint",6]]],[[["gluint",6]]],[[["gldouble",6],["gluint",6]]],[[["gluint",6]]],[[["gldouble",6],["gluint",6]]],[[["gluint",6]]],[[["glenum",6],["glint",6],["gluint",6]]],[[["glenum",6],["glint",6],["gluint",6],["glsizei",6]]],[[["glenum",6],["glboolean",6],["gluint",6]]],[[["glenum",6],["glboolean",6],["gluint",6]]],[[["glenum",6],["glboolean",6],["gluint",6]]],[[["glenum",6],["glboolean",6],["gluint",6]]],[[["glenum",6],["glboolean",6],["gluint",6]]],[[["glenum",6],["glboolean",6],["gluint",6]]],[[["glenum",6],["glboolean",6],["gluint",6]]],[[["glenum",6],["glboolean",6],["gluint",6]]],[[["glenum",6],["glint",6],["glboolean",6],["gluint",6],["glsizei",6]]],[[["gluint",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6]]],[[["glenum",6],["gluint",6]]],[[["glenum",6]]],[[["glint",6],["glsizei",6]]],[[["gluint",6],["glsizei",6]]],[[["gluint",6],["glfloat",6]]],[[["gluint",6]]],[[["gluint64",6],["glbitfield",6],["glsync",6]]],null,[[],["fnptr",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"FnPtr"],[4,"__GLsync"],[4,"_cl_context"],[4,"_cl_event"]]},\
"graphics":{"doc":"A library for 2D graphics that works with multiple …","t":[0,3,12,12,12,11,11,11,11,11,11,4,13,13,13,13,4,13,13,13,0,3,12,12,12,11,11,11,11,8,16,16,10,11,0,3,12,12,12,12,11,11,11,11,11,11,11,0,17,17,17,5,5,5,5,5,0,3,12,11,11,11,11,11,11,0,4,13,13,13,3,12,12,12,11,11,11,11,11,11,11,11,11,0,3,12,12,12,12,12,11,11,11,11,11,11,11,11,0,3,12,12,3,12,12,12,11,11,11,11,11,11,11,11,0,5,5,5,5,4,13,13,13,3,12,12,3,12,12,12,11,11,11,11,11,11,11,11,11,11,0,3,12,12,12,11,11,11,11,11,11,11,11,11,11,5,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,5,5,5,0,3,12,12,12,11,11,11,11,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,3,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,0,3,12,12,12,3,11,11,11,11,11,0,0,3,12,12,11,11,11,11,11,11,0,8,10,10,10,10,10,8,10,11,11,3,12,12,12,8,16,10,10,10,10,11,11,11,11,11,11,11,11,8,10,10,10,10,10,8,10,11,10,8,10,10,10,11,10,10,10,11,11,11,11,10,8,10,11,11,11,10,17,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["draw_state","DrawState","scissor","stencil","blend","new_alpha","new_clip","new_inside","new_outside","blend","scissor","Blend","Alpha","Add","Multiply","Invert","Stencil","Clip","Inside","Outside","character","Character","offset","size","texture","left","top","width","height","CharacterCache","Texture","Error","character","width","context","Context","viewport","view","transform","draw_state","new","new_viewport","new_abs","view","reset","store_view","get_view_size","color","WHITE","BLACK","TRANSPARENT","grey","alpha","hex","gamma_srgb_to_linear","gamma_linear_to_srgb","polygon","Polygon","color","new","color","draw","draw_tri","draw_tween_lerp","draw_tween_lerp_tri","line","Shape","Square","Round","Bevel","Line","color","radius","shape","new","new_round","color","radius","width","shape","draw","draw_tri","draw_arrow","circle_arc","CircleArc","color","radius","start","end","resolution","new","color","radius","start","end","resolution","draw","draw_tri","ellipse","Border","color","radius","Ellipse","color","border","resolution","new","new_border","color","border","maybe_border","resolution","draw","draw_tri","rectangle","rectangle_by_corners","centered","centered_square","square","Shape","Square","Round","Bevel","Border","color","radius","Rectangle","color","shape","border","new","new_round","new_border","new_round_border","color","shape","border","maybe_border","draw","draw_tri","image","Image","color","rectangle","source_rectangle","new","new_color","color","maybe_color","rect","maybe_rect","src_rect","maybe_src_rect","draw","draw_tri","draw_many","types","Area","Color","ColorComponent","Line","SourceRectangle","Polygon","Polygons","Radius","Resolution","Ray","Rectangle","Triangle","Width","FontSize","modular_index","offset","previous","next","text","Text","color","font_size","round","new","new_color","round","draw","triangulation","tx","ty","with_lerp_polygons_tri_list","with_ellipse_tri_list","with_round_border_line_tri_list","with_round_rectangle_tri_list","stream_polygon_tri_list","with_ellipse_border_tri_list","with_arc_tri_list","with_round_rectangle_border_tri_list","stream_quad_tri_list","with_polygon_tri_list","rect_tri_list_xy","rect_border_tri_list_xy","rect_tri_list_uv","math","multiply","dot","cross","add","sub","cast","mul","mul_scalar","square_len","transform_pos","transform_vec","Scalar","Matrix2d","Vec2d","Vec3d","perp","abs_transform","translate","rotate_radians","orient","scale","shear","identity","get_scale","separation","least_separation_4","margin_rectangle","relative_rectangle","overlap_rectangle","relative_source_rectangle","modular_offset","area_centroid","area","centroid","line_side","inside_triangle","triangle_face","to_barycentric","from_barycentric","hsv","deform","DeformGrid","cols","rows","rect","vertices","indices","texture_coords","ps","qs","wis","new","set_current","set_original","reset_control_points","reset_vertices_and_texture_coords","hit","draw_image","draw_image_tri","add_control_point","draw_vertical_lines","draw_horizontal_lines","update","grid","Grid","cols","rows","units","GridCells","draw","cells","cell_position","x_pos","y_pos","glyph_cache","rusttype","GlyphCache","font","factory","from_font","new","from_bytes","preload_chars","preload_printable_ascii","opt_character","radians","Radians","_90","_180","_360","deg_to_rad","rad_to_deg","ImageSize","get_size","get_width","get_height","Viewport","rect","draw_size","window_size","Graphics","Texture","clear_color","clear_stencil","tri_list","tri_list_uv","rectangle","polygon","polygon_tween_lerp","image","ellipse","line","circle_arc","deform_image","SourceRectangled","src_rect","src_rel","src_flip_h","src_flip_v","src_flip_hv","Rectangled","margin","expand","rel","Transformed","append_transform","prepend_transform","trans","rot_deg","rot_rad","orient","scale","zoom","flip_v","flip_h","flip_hv","shear","Colored","mul_rgba","tint","shade","hue_deg","hue_rad","BACK_END_MAX_VERTEX_COUNT","clear","image","ellipse","circle_arc","rectangle","polygon","line","text","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","fmt","eq","ne","clone","src_rect","src_rel","src_flip_h","src_flip_v","src_flip_hv","margin","rel","append_transform","prepend_transform","trans","rot_rad","orient","scale","shear","append_transform","prepend_transform","trans","rot_rad","orient","scale","shear","mul_rgba","hue_rad","mul_rgba","hue_rad","mul_rgba","hue_rad","mul_rgba","hue_rad","character","next","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","eq","ne","eq","eq","ne","partial_cmp","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","rectangle","polygon","polygon_tween_lerp","image","ellipse","line","circle_arc","deform_image","expand","rot_deg","zoom","flip_v","flip_h","flip_hv","tint","shade","hue_deg","abs_transform"],"q":["graphics","graphics::draw_state","","","","","","","","","","","","","","","","","","","graphics","graphics::character","","","","","","","","","","","","","graphics","graphics::context","","","","","","","","","","","","graphics","graphics::color","","","","","","","","graphics","graphics::polygon","","","","","","","","graphics","graphics::line","","","","","","","","","","","","","","","","","graphics","graphics::circle_arc","","","","","","","","","","","","","","graphics","graphics::ellipse","","","","","","","","","","","","","","","graphics","graphics::rectangle","","","","","","","","","","","","","","","","","","","","","","","","","graphics","graphics::image","","","","","","","","","","","","","","","graphics","graphics::types","","","","","","","","","","","","","","graphics","graphics::modular_index","","","graphics","graphics::text","","","","","","","","graphics","graphics::triangulation","","","","","","","","","","","","","","","graphics","graphics::math","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","graphics","graphics::deform","","","","","","","","","","","","","","","","","","","","","","graphics","graphics::grid","","","","","","","","","","graphics","graphics::glyph_cache","graphics::glyph_cache::rusttype","","","","","","","","","graphics","graphics::radians","","","","","","graphics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","graphics::draw_state","","","","","","","","","","","","","","","","","","","","","","","","","","","graphics::character","","","","","","","","","graphics::context","","","","","","","","","graphics::polygon","","","","","","","","","graphics::line","","","","","","","","","","","","","","","","","","graphics::circle_arc","","","","","","","","","graphics::ellipse","","","","","","","","","","","","","","","","","","graphics::rectangle","","","","","","","","","","","","","","","","","","","","","","","","","","","graphics::image","","","","","","","","","graphics::text","","","","","","","","","graphics::deform","","","","","","","","","graphics::grid","","","","","","","","","","","","","","","","","","","graphics::glyph_cache::rusttype","","","","","","","graphics","","","","","","","","","","","","","","","","","","","","","","","","","","","graphics::context","","","","","","","graphics","","graphics::line","","graphics::ellipse","","graphics::rectangle","","graphics::glyph_cache::rusttype","graphics::grid","graphics::draw_state","","","graphics::character","graphics::context","graphics::polygon","graphics::line","","graphics::circle_arc","graphics::ellipse","","graphics::rectangle","","","graphics::image","graphics::text","graphics::deform","graphics::grid","","graphics::draw_state","","","","","","","","","","","","graphics::grid","","graphics","","","","","","","","","","","","","","","","",""],"d":["Graphics draw state.","Graphics draw state used for blending, clipping and …","Scissor mask to use. If set, no pixel outside of this …","Stencil test to use. If None, no stencil testing is done.","Blend function to use. If None, blending is disabled.","Uses alpha blending.","Draws to stencil buffer with value 255. This can be used …","Tests against stencil buffer with value 255. Draws inside …","Tests against stencil buffer with value 255. Draws …","Sets blending.","Sets scissor <code>[x, y, w, h]</code>.","The blend setting to use when drawing.","Alpha blending (allows semi-transparent pixels).","Additive blending.","Multiply color components.","Invert colors when rendering a white shape.","Stencil buffer settings.","Draw to stencil buffer.","Draw pixels that have stencil value.","Draw pixels that does not have stencil value.","A text character","Holds rendered character data.","The offset of character.","The size of character, including space.","The texture of the character.","The left offset.","The top offset.","Gets width of character, including space to the next one.","Sets height of character, including space to the next one.","Stores characters in a buffer and loads them by demand.","The texture type associated with the character cache.","The error type associated with the character cache.","Get reference to character.","Return the width for some given text.","Transformation context","Drawing 2d context.","Viewport information.","View transformation.","Current transformation.","Current draw state settings.","Creates a new drawing context.","Creates a new context with absolute transform in point …","Creates a new drawing context in absolute coordinates.","Moves the current transform to the view coordinate system.","Moves the current transform to the default coordinate …","Stores the current transform as new view.","Computes the current view size.","Helper methods for colors","White color.","Black color.","Transparent color.","Returns a grey color","Returns a semi-transparent white color","Converts from hexadecimal color format","Converts gamma (brightness) from sRGB to linear color …","Converts gamma (brightness) of a color from linear color …","Draw polygon","A polygon","The color of the polygon","Creates new polygon","Sets color.","Draws polygon using the default method.","Draws polygon using triangulation.","Draws tweened polygon with linear interpolation, using …","Draws tweened polygon with linear interpolation, using …","Draw Line","The shape of the line","Square edges","Round edges","Bevel edges","A colored line with a default border radius","The line color","The line radius","The line shape","Creates a new line","Creates a new line","Sets color.","Sets radius.","Sets width.","Sets shape.","Draws line using default method.","Draws line using triangulation.","Draws an arrow","Draw an arc","A curved line","The arcs color","The radius of the arc (Thickness of the drawing, not the …","The start of the arc in radians","The end of the arc in radians","The resolution for the arc.","Creates a new arc","Sets the arcs color.","Sets the radius of the arc (Thickness of the arc, not the …","Sets the start of the arc (in radians).","Sets the end of the arc (in radians).","Sets the resolution of the arcs smoothness.","Draws circle arc using default method.","Draws circle arc using triangulation.","Draw ellipse","Ellipse border","The border color","The border radius","An ellipse with filled color","The ellipse color","The ellipse border","The resolution for the shape, 360 degrees.","Creates a new ellipse","Creates a new ellipse border","Sets ellipse color.","Sets ellipse border.","Sets optional ellipse border.","Sets resolution of the ellipse smoothness.","Draws ellipse using default method.","Draws ellipse using triangulation.","Draw rectangle","Create <code>types::Rectangle</code> by the two opposite corners.","Use x, y, half-width, half-height","Create <code>types::Rectangle</code> for a square with a center in (<code>x</code>, …","Create <code>types::Rectangle</code> for a square with a top-left …","The shape of the rectangle corners","Square corners","Round corners, with resolution per corner.","Bevel corners","The border of the rectangle","The color of the border","The radius of the border. The half-width of the line by …","A filled rectangle","The rectangle color","The roundness of the rectangle","The border","Creates a new rectangle.","Creates a new rectangle with rounded corners.","Creates a new rectangle border.","Creates a new rectangle border with rounded corners.","Sets color.","Sets shape of the corners.","Sets border properties.","Sets optional border.","Draws the rectangle using the default method.","Draws the rectangle using triangulation.","Draw an image","An image","The color","The rectangle to draw image inside","The image source rectangle","Creates a new image","Creates a new colored image","Sets color.","Sets optional color.","Sets rectangle.","Sets optional rectangle.","Sets source rectangle.","Sets optional source rectangle.","Draws image using default method.","Draws image using triangulation.","Draws many images.","Contains type aliases used in this library","The type used for area.","[red, green, blue, alpha]","The type used for color component.","[x1, y1, x2, y2]","[x, y, w, h]","[p0, p1, …]","A slice of polygons.","The type used for radius.","The type used for resolution.","[x, y, dir_x, dir_y]","Rectangle dimensions: [x, y, w, h]","[x1, y1, x2, y2, x3, y3]","The type used for width.","The type used for font size.","Helper functions for computing modular index safely.","Computes modular offset safely for indices.","Computes previous modular index safely.","Computes next modular index safely.","Draw text","Renders text","The color","The font size","Whether or not the text’s position should be rounded …","Creates a new text with black color","Creates a new colored text","A builder method indicating that the Text’s position …","Draws text with a character cache","Methods for converting shapes into triangles.","Transformed x coordinate as f32.","Transformed y coordinate as f32.","Streams tweened polygons using linear interpolation.","Streams an ellipse specified by a resolution.","Streams a round border line.","Streams a round rectangle.","Streams a polygon into tri list. Uses buffers that fit …","Streams an ellipse border specified by a resolution.","Streams an arc between the two radian boundaries.","Streams a round rectangle border.","Streams a quad into tri list.","Splits polygon into convex segments. Create a buffer that …","Creates triangle list vertices from rectangle.","Creates triangle list vertices from rectangle.","Creates triangle list texture coords from image.","Various methods for computing with vectors.","Multiplies two matrices.","Computes the dot product.","Computes the cross product.","Adds two vectors.","Subtracts ‘b’ from ‘a’.","Converts to another vector type.","Multiplies two vectors component wise.","Multiplies the vector with a scalar.","Computes the square length of a vector.","Transforms a 2D position through matrix.","Transforms a 2D vector through matrix.","The type used for scalars.","The type used for matrices.","The type used for 2D vectors.","The type used for 3D vectors.","Creates a perpendicular vector.","Transforms from normalized to absolute coordinates.","Creates a translation matrix.","Creates a rotation matrix.","Orients x axis to look at point.","Create a scale matrix.","Create a shear matrix.","Create an identity matrix.","Extract scale information from matrix.","Compute the shortest vector from point to ray. A ray …","Returns the least separation out of four. Each seperation …","Shrinks a rectangle by a factor on all sides.","Computes a relative rectangle using the rectangle as a …","Computes overlap between two rectangles. The area of the …","Computes a relative source rectangle using the source …","Computes modular offset safely for numbers.","Computes the area and centroid of a simple polygon.","Computes area of a simple polygon.","Computes centroid of a simple polygon.","Returns a number that tells which side it is relative to …","Returns true if point is inside triangle.","Returns true if triangle is clockwise.","Transforms from cartesian coordinates to barycentric.","Transforms from barycentric coordinates to cartesian.","Transform color with hue, saturation and value.","Least square deforming of a 2D grid.","Represents a deformed grid.","The number of columns in the grid.","The number of rows in the grid.","The grid undeformed, which is a plain rectangle.","The vertices, deformed.","The triangle indices.","The texture coordinates.","Initial position of control points.","The current position of control points.","A weight computation buffer, one for each control point.","Creates a new DeformGrid.","Sets current control position.","Sets original control position.","Removes all control points.","Sets vertices and texture coords back to default.","Finds original coordinate. If the deformed grid is …","Draws deformed image using default method.","Draws deformed image using triangulation.","Adds a control point, in original coordinates.","Draw vertical grid lines.","Draw horizontal grid lines.","Updates the grid, by deforming the vertices.","A flat grid with square cells.","Represents a flat grid with square cells.","Number of columns.","Number of rows.","The width and height of each grid cell.","Iterates through the cells of a grid as (u32, u32).","Draws the grid.","Get a GridIterator for the grid","Get on-screen position of a grid cell","Get on-screen x position of a grid cell","Get on-screen y position of a grid cell","Implementations of the <code>CharacterCache</code> trait.","Glyph caching using the RustType library.","A struct used for caching rendered font.","The font.","The factory used to create textures.","Constructs a GlyphCache from a Font.","Constructor for a GlyphCache.","Creates a GlyphCache for a font stored in memory.","Load all characters in the <code>chars</code> iterator for <code>size</code>","Load all the printable ASCII characters for <code>size</code>. …","Return <code>ch</code> for <code>size</code> if it’s already cached. Don’t load.…","Reexport radians helper trait from vecmath","Useful constants for radians.","Returns radians corresponding to 90 degrees.","Returns radians corresponding to 180 degrees.","Returns radians corresponding to 360 degrees.","Convert a value to radians from degrees. Equivalent to …","Convert a value to degrees from radians. Equivalent to …","Implemented by all images to be used with generic …","Get the image size.","Gets the image width.","Gets the image height.","Stores viewport information.","Viewport in pixels. <code>[x, y, width height]</code> where <code>(x, y)</code> is …","The size of frame buffer in pixels.","The size of window in points.","Implemented by all graphics back-ends.","The texture type associated with the back-end.","Clears background with a color.","Clears stencil buffer with a value, usually 0.","Renders list of 2d triangles using a solid color.","Renders list of 2d triangles using a color and a texture.","Draws a rectangle.","Draws a polygon.","Draws a tweened polygon using linear interpolation.","Draws image.","Draws ellipse.","Draws line.","Draws circle arc.","Draws deformed image.","Should be implemented by contexts that have source …","Adds a source rectangle.","Moves to a relative source rectangle using the current …","Flips the source rectangle horizontally.","Flips the source rectangle vertically.","Flips the source rectangle horizontally and vertically.","Should be implemented by contexts that have rectangle …","Shrinks the current rectangle equally by all sides.","Expands the current rectangle equally by all sides.","Moves to a relative rectangle using the current rectangle …","Implemented by contexts that can transform.","Appends transform to the current one.","Prepends transform to the current one.","Translate x and y in local coordinates.","Rotates degrees in local coordinates.","Rotate radians in local coordinates.","Orients x axis to look at point locally.","Scales in local coordinates.","Scales in both directions in local coordinates.","Flips vertically in local coordinates.","Flips horizontally in local coordinates.","Flips horizontally and vertically in local coordinates.","Shears in local coordinates.","Implemented by contexts that contains color.","Multiplies with red, green, blue and alpha values.","Mixes the current color with white.","Mixes the current color with black.","Rotates hue by degrees.","Rotates hue by radians.","Any triangulation method called on the back-end never …","Clears the screen.","Draws image.","Draws ellipse.","Draws arc","Draws rectangle.","Draws polygon.","Draws line.","Draws text.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draws a rectangle.","Draws a polygon.","Draws a tweened polygon using linear interpolation.","Draws image.","Draws ellipse.","Draws line.","Draws circle arc.","Draws deformed image.","Expands the current rectangle equally by all sides.","Rotates degrees in local coordinates.","Scales in both directions in local coordinates.","Flips vertically in local coordinates.","Flips horizontally in local coordinates.","Flips horizontally and vertically in local coordinates.","Mixes the current color with white.","Mixes the current color with black.","Rotates hue by degrees.","Computes absolute transform for 2D graphics, which uses a …"],"i":[0,0,1,1,1,1,1,1,1,1,1,0,2,2,2,2,0,3,3,3,0,0,4,4,4,4,4,4,4,0,5,5,5,5,0,0,6,6,6,6,6,6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,0,0,8,8,8,0,9,9,9,9,9,9,9,9,9,9,9,9,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,11,11,0,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,13,13,13,0,14,14,0,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,19,19,19,0,19,19,19,19,19,0,0,0,20,20,20,20,20,20,20,20,0,0,21,21,21,21,21,0,22,22,22,0,23,23,23,0,24,24,24,24,24,24,24,24,24,24,24,24,24,0,25,25,25,25,25,0,26,26,26,0,27,27,27,27,27,27,27,27,27,27,27,27,0,28,28,28,28,28,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,29,29,29,29,29,29,29,29,29,29,20,20,20,20,20,20,20,23,23,23,23,23,23,23,23,23,23,23,23,23,30,30,30,30,30,31,31,32,32,32,32,32,32,32,6,6,6,6,6,6,6,33,33,9,9,12,12,15,15,20,29,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,29,1,1,1,2,3,3,1,2,3,1,2,3,19,29,24,24,24,24,24,24,24,24,26,27,27,27,27,27,28,28,28,23],"f":[null,null,null,null,null,[[],["drawstate",3]],[[],["drawstate",3]],[[],["drawstate",3]],[[],["drawstate",3]],[[["blend",4]],["drawstate",3]],[[],["drawstate",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["scalar",6]],[[],["scalar",6]],[[],["scalar",6]],[[],["scalar",6]],null,null,null,[[["fontsize",6],["char",15]],[["result",4],["character",3]]],[[["fontsize",6],["str",15]],[["result",4],["scalar",6]]],null,null,null,null,null,null,[[],["context",3]],[[["viewport",3]],["context",3]],[[["scalar",6]],["context",3]],[[]],[[]],[[]],[[],["vec2d",6]],null,null,null,null,[[["colorcomponent",6]],["color",6]],[[["colorcomponent",6]],["color",6]],[[["str",15]],["color",6]],[[["color",6]],["color",6]],[[["color",6]],["color",6]],null,null,null,[[["color",6]],["polygon",3]],[[["color",6]]],[[["polygon",6],["matrix2d",6],["drawstate",3]]],[[["polygon",6],["matrix2d",6],["drawstate",3]]],[[["scalar",6],["polygons",6],["matrix2d",6],["drawstate",3]]],[[["scalar",6],["polygons",6],["matrix2d",6],["drawstate",3]]],null,null,null,null,null,null,null,null,null,[[["color",6],["radius",6]],["line",3]],[[["color",6],["radius",6]],["line",3]],[[["color",6]]],[[["radius",6]]],[[["width",6]]],[[["shape",4]]],[[["into",8],["line",6],["matrix2d",6],["drawstate",3]]],[[["into",8],["line",6],["matrix2d",6],["drawstate",3]]],[[["scalar",6],["into",8],["line",6],["matrix2d",6],["drawstate",3]]],null,null,null,null,null,null,null,[[["scalar",6],["radius",6],["color",6]],["circlearc",3]],[[["color",6]]],[[["radius",6]]],[[["scalar",6]]],[[["scalar",6]]],[[["resolution",6]]],[[["rectangle",6],["into",8],["matrix2d",6],["drawstate",3]]],[[["rectangle",6],["into",8],["matrix2d",6],["drawstate",3]]],null,null,null,null,null,null,null,null,[[["color",6]],["ellipse",3]],[[["color",6],["radius",6]],["ellipse",3]],[[["color",6]]],[[["border",3]]],[[["option",4],["border",3]]],[[["resolution",6]]],[[["rectangle",6],["into",8],["matrix2d",6],["drawstate",3]]],[[["rectangle",6],["into",8],["matrix2d",6],["drawstate",3]]],null,[[["scalar",6]],["rectangle",6]],[[["rectangle",6]],["rectangle",6]],[[["scalar",6]],["rectangle",6]],[[["scalar",6]],["rectangle",6]],null,null,null,null,null,null,null,null,null,null,null,[[["color",6]],["rectangle",3]],[[["color",6],["radius",6]],["rectangle",3]],[[["color",6],["radius",6]],["rectangle",3]],[[["color",6],["radius",6]],["rectangle",3]],[[["color",6]]],[[["shape",4]]],[[["border",3]]],[[["option",4],["border",3]]],[[["into",8],["rectangle",6],["matrix2d",6],["drawstate",3]]],[[["into",8],["rectangle",6],["matrix2d",6],["drawstate",3]]],null,null,null,null,null,[[],["image",3]],[[["color",6]],["image",3]],[[["color",6]]],[[["color",6],["option",4]]],[[["into",8],["rectangle",6]]],[[["option",4],["into",8],["rectangle",6]]],[[["sourcerectangle",6]]],[[["option",4],["sourcerectangle",6]]],[[["matrix2d",6],["drawstate",3]]],[[["matrix2d",6],["drawstate",3]]],[[["color",6],["matrix2d",6],["drawstate",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15],["isize",15]],["usize",15]],[[["usize",15]],["usize",15]],[[["usize",15]],["usize",15]],null,null,null,null,null,[[["fontsize",6]],["text",3]],[[["fontsize",6],["color",6]],["text",3]],[[],["text",3]],[[["drawstate",3],["matrix2d",6],["str",15]],["result",4]],null,[[["scalar",6],["matrix2d",6]],["f32",15]],[[["scalar",6],["matrix2d",6]],["f32",15]],[[["scalar",6],["matrix2d",6],["polygons",6]]],[[["rectangle",6],["matrix2d",6],["resolution",6]]],[[["line",6],["radius",6],["resolution",6],["matrix2d",6]]],[[["radius",6],["resolution",6],["matrix2d",6],["rectangle",6]]],[[["matrix2d",6]]],[[["radius",6],["resolution",6],["matrix2d",6],["rectangle",6]]],[[["scalar",6],["radius",6],["resolution",6],["matrix2d",6],["rectangle",6]]],[[["radius",6],["resolution",6],["matrix2d",6],["rectangle",6]]],[[["matrix2d",6]]],[[["matrix2d",6],["polygon",6]]],[[["matrix2d",6],["rectangle",6]]],[[["matrix2d",6],["radius",6],["rectangle",6]]],[[["sourcerectangle",6]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[],["matrix2d",6]],[[["vec2d",6]],["matrix2d",6]],[[],["matrix2d",6]],[[],["matrix2d",6]],[[],["matrix2d",6]],[[["vec2d",6]],["matrix2d",6]],[[],["matrix2d",6]],[[["matrix2d",6]],["vec2d",6]],[[["ray",6],["vec2d",6]],["vec2d",6]],[[["vec2d",6]],["vec2d",6]],[[["rectangle",6]],["rectangle",6]],[[["vec2d",6],["rectangle",6]],["rectangle",6]],[[["rectangle",6]],[["option",4],["rectangle",6]]],[[["sourcerectangle",6]],["sourcerectangle",6]],[[],[["add",8],["copy",8],["rem",8]]],[[["polygon",6]]],[[["polygon",6]]],[[["polygon",6]],["vec2d",6]],[[["vec2d",6],["line",6]]],[[["triangle",6],["vec2d",6]],["bool",15]],[[["triangle",6]],["bool",15]],[[["triangle",6],["vec2d",6]],["vec3d",6]],[[["triangle",6],["vec3d",6]],["vec2d",6]],[[["color",6],["f32",15]],["color",6]],null,null,null,null,null,null,null,null,null,null,null,[[["usize",15],["rectangle",6]],["deformgrid",3]],[[["usize",15],["vec2d",6]]],[[["usize",15],["vec2d",6]]],[[]],[[]],[[["vec2d",6]],[["vec2d",6],["option",4]]],[[["matrix2d",6],["drawstate",3]]],[[["matrix2d",6],["drawstate",3]]],[[["vec2d",6]]],[[["line",3],["matrix2d",6],["drawstate",3]]],[[["line",3],["matrix2d",6],["drawstate",3]]],[[]],null,null,null,null,null,null,[[["line",3],["matrix2d",6],["drawstate",3]]],[[],["gridcells",3]],[[],["vec2d",6]],[[],["scalar",6]],[[],["scalar",6]],null,null,null,null,null,[[["texturesettings",3],["font",3]]],[[["texturesettings",3]],[["glyphcache",3],["result",6]]],[[["texturesettings",3]],[["result",4],["glyphcache",3]]],[[["fontsize",6]],["result",4]],[[["fontsize",6]],["result",4]],[[["fontsize",6],["char",15]],[["option",4],["character",3]]],null,null,[[]],[[]],[[]],[[]],[[]],null,[[]],[[],["u32",15]],[[],["u32",15]],null,null,null,null,null,null,[[["color",6]]],[[["u8",15]]],[[["drawstate",3]]],[[["drawstate",3]]],[[["matrix2d",6],["rectangle",3],["into",8],["rectangle",6],["drawstate",3]]],[[["polygon",3],["polygon",6],["matrix2d",6],["drawstate",3]]],[[["polygon",3],["scalar",6],["polygons",6],["matrix2d",6],["drawstate",3]]],[[["image",3],["matrix2d",6],["drawstate",3]]],[[["ellipse",3],["into",8],["rectangle",6],["matrix2d",6],["drawstate",3]]],[[["line",3],["into",8],["line",6],["matrix2d",6],["drawstate",3]]],[[["circlearc",3],["into",8],["rectangle",6],["matrix2d",6],["drawstate",3]]],[[["deformgrid",3],["matrix2d",6],["drawstate",3]]],null,[[["scalar",6]]],[[["scalar",6]]],[[]],[[]],[[]],null,[[["scalar",6]]],[[["scalar",6]]],[[["scalar",6]]],null,[[["matrix2d",6]]],[[["matrix2d",6]]],[[["scalar",6]]],[[["scalar",6]]],[[["scalar",6]]],[[["scalar",6]]],[[["scalar",6]]],[[["scalar",6]]],[[]],[[]],[[]],[[["vec2d",6]]],null,[[["colorcomponent",6]]],[[["colorcomponent",6]]],[[["colorcomponent",6]]],[[["colorcomponent",6]]],[[["colorcomponent",6]]],null,[[["color",6]]],[[["matrix2d",6]]],[[["color",6],["matrix2d",6],["into",8],["rectangle",6]]],[[["color",6],["matrix2d",6],["into",8],["rectangle",6],["radius",6],["scalar",6]]],[[["color",6],["matrix2d",6],["into",8],["rectangle",6]]],[[["color",6],["polygon",6],["matrix2d",6]]],[[["color",6],["matrix2d",6],["into",8],["line",6],["radius",6]]],[[["color",6],["fontsize",6],["matrix2d",6],["str",15]],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],[["error",3],["result",4]]],[[["viewport",3]],["bool",15]],[[["viewport",3]],["bool",15]],[[],["viewport",3]],[[["scalar",6]]],[[["scalar",6]]],[[]],[[]],[[]],[[["scalar",6]]],[[["scalar",6]]],[[["matrix2d",6]]],[[["matrix2d",6]]],[[["scalar",6]]],[[["scalar",6]]],[[["scalar",6]]],[[["scalar",6]]],[[["vec2d",6]]],[[["matrix2d",6]]],[[["matrix2d",6]]],[[["scalar",6]]],[[["scalar",6]]],[[["scalar",6]]],[[["scalar",6]]],[[["vec2d",6]]],[[["colorcomponent",6]]],[[["colorcomponent",6]]],[[["colorcomponent",6]]],[[["colorcomponent",6]]],[[["colorcomponent",6]]],[[["colorcomponent",6]]],[[["colorcomponent",6]]],[[["colorcomponent",6]]],[[["fontsize",6],["char",15]],[["result",4],["character",3]]],[[],["option",4]],[[],["drawstate",3]],[[],["blend",4]],[[],["stencil",4]],[[],["character",3]],[[],["context",3]],[[],["polygon",3]],[[],["shape",4]],[[],["line",3]],[[],["circlearc",3]],[[],["border",3]],[[],["ellipse",3]],[[],["shape",4]],[[],["border",3]],[[],["rectangle",3]],[[],["image",3]],[[],["text",3]],[[],["deformgrid",3]],[[],["grid",3]],[[],["gridcells",3]],[[]],[[["drawstate",3]],["bool",15]],[[["drawstate",3]],["bool",15]],[[["blend",4]],["bool",15]],[[["stencil",4]],["bool",15]],[[["stencil",4]],["bool",15]],[[["drawstate",3]],[["ordering",4],["option",4]]],[[["blend",4]],[["ordering",4],["option",4]]],[[["stencil",4]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["matrix2d",6],["rectangle",3],["into",8],["rectangle",6],["drawstate",3]]],[[["polygon",3],["polygon",6],["matrix2d",6],["drawstate",3]]],[[["polygon",3],["scalar",6],["polygons",6],["matrix2d",6],["drawstate",3]]],[[["image",3],["matrix2d",6],["drawstate",3]]],[[["ellipse",3],["into",8],["rectangle",6],["matrix2d",6],["drawstate",3]]],[[["line",3],["into",8],["line",6],["matrix2d",6],["drawstate",3]]],[[["circlearc",3],["into",8],["rectangle",6],["matrix2d",6],["drawstate",3]]],[[["deformgrid",3],["matrix2d",6],["drawstate",3]]],[[["scalar",6]]],[[["scalar",6]]],[[["scalar",6]]],[[]],[[]],[[]],[[["colorcomponent",6]]],[[["colorcomponent",6]]],[[["colorcomponent",6]]],[[]]],"p":[[3,"DrawState"],[4,"Blend"],[4,"Stencil"],[3,"Character"],[8,"CharacterCache"],[3,"Context"],[3,"Polygon"],[4,"Shape"],[3,"Line"],[3,"CircleArc"],[3,"Border"],[3,"Ellipse"],[4,"Shape"],[3,"Border"],[3,"Rectangle"],[3,"Image"],[3,"Text"],[3,"DeformGrid"],[3,"Grid"],[3,"GlyphCache"],[8,"Radians"],[8,"ImageSize"],[3,"Viewport"],[8,"Graphics"],[8,"SourceRectangled"],[8,"Rectangled"],[8,"Transformed"],[8,"Colored"],[3,"GridCells"],[6,"SourceRectangle"],[6,"Rectangle"],[6,"Matrix2d"],[6,"Color"]]},\
"image":{"doc":"This crate provides native rust implementations of image …","t":[0,0,3,11,11,11,11,0,5,0,0,5,5,5,5,5,8,16,10,10,3,5,5,4,13,13,13,13,13,5,5,5,5,5,5,5,5,5,5,5,5,5,0,3,3,0,4,13,13,13,11,3,11,3,11,11,0,4,13,13,13,13,3,12,12,12,12,12,12,12,12,12,12,12,3,11,3,11,11,11,0,3,17,3,3,12,12,5,3,3,12,12,12,12,12,12,12,5,3,5,0,3,3,0,3,3,0,3,11,3,11,11,0,3,3,3,12,12,12,12,12,4,13,13,13,13,13,13,13,3,12,12,12,3,12,12,12,12,3,12,12,12,12,3,4,13,13,13,13,4,13,13,0,3,0,3,11,0,0,3,12,12,12,12,12,12,3,11,11,3,4,13,13,13,13,13,13,13,3,12,5,3,12,5,3,12,5,3,12,5,3,12,5,3,12,5,4,13,13,8,16,10,10,11,10,11,11,10,11,8,16,16,10,11,11,10,11,10,11,11,10,11,8,10,10,10,10,10,11,11,11,4,13,13,13,13,13,13,13,6,3,3,3,4,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,8,10,6,6,3,8,16,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,6,6,8,5,5,5,5,5,5,4,13,13,13,13,13,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["math","nq","NeuQuant","new","init","map_pixel","index_of","utils","clamp","imageops","colorops","grayscale","invert","contrast","brighten","huerotate","ColorMap","Color","index_of","map_color","BiLevel","dither","index_colors","FilterType","Nearest","Triangle","CatmullRom","Gaussian","Lanczos3","flip_horizontal","flip_vertical","rotate180","rotate270","rotate90","blur","filter3x3","resize","thumbnail","unsharpen","crop","overlay","replace","bmp","BMPDecoder","BMPEncoder","dxt","DXTVariant","DXT1","DXT3","DXT5","colortype","DXTDecoder","new","DXTEncoder","new","encode","gif","DisposalMethod","Any","Keep","Background","Previous","Frame","delay","dispose","transparent","needs_user_input","top","left","width","height","interlaced","palette","buffer","Decoder","new","Encoder","new","encode","encode_frames","hdr","HDRAdapter","SIGNATURE","HDRDecoder","RGBE8Pixel","c","e","rgbe8","HDRImageDecoderIterator","HDRMetadata","width","height","orientation","exposure","color_correction","pixel_aspect_ratio","custom_attributes","read_raw_file","HDREncoder","to_rgbe8","ico","ICODecoder","ICOEncoder","jpeg","JPEGDecoder","JPEGEncoder","png","PNGDecoder","new","PNGEncoder","new","encode","pnm","PNMDecoder","PNMEncoder","ArbitraryHeader","height","width","depth","maxval","tupltype","ArbitraryTuplType","BlackAndWhite","BlackAndWhiteAlpha","Grayscale","GrayscaleAlpha","RGB","RGBAlpha","Custom","BitmapHeader","encoding","height","width","GraymapHeader","encoding","height","width","maxwhite","PixmapHeader","encoding","height","width","maxval","PNMHeader","PNMSubtype","Bitmap","Graymap","Pixmap","ArbitraryMap","SampleEncoding","Binary","Ascii","tga","TGADecoder","tiff","TIFFDecoder","new","webp","vp8","Frame","width","height","ybuf","keyframe","for_display","pixel_type","VP8Decoder","new","decode_frame","WebpDecoder","ColorType","Gray","RGB","Palette","GrayA","RGBA","BGR","BGRA","Luma","data","Luma","LumaA","data","LumaA","Rgb","data","Rgb","Rgba","data","Rgba","Bgr","data","Bgr","Bgra","data","Bgra","DecodingResult","U8","U16","GenericImage","InnerImage","get_pixel_mut","put_pixel","unsafe_put_pixel","blend_pixel","pixels_mut","copy_from","inner_mut","sub_image","GenericImageView","Pixel","InnerImageView","dimensions","width","height","bounds","in_bounds","get_pixel","unsafe_get_pixel","pixels","inner","view","ImageDecoder","dimensions","colortype","row_len","read_scanline","read_image","is_animated","into_frames","load_rect","ImageError","FormatError","DimensionError","UnsupportedError","UnsupportedColor","NotEnoughData","IoError","ImageEnd","ImageResult","MutPixels","Pixels","SubImage","FilterType","Nearest","Triangle","CatmullRom","Gaussian","Lanczos3","ImageFormat","PNG","JPEG","GIF","WEBP","PNM","TIFF","TGA","BMP","ICO","HDR","ImageOutputFormat","PNG","JPEG","PNM","GIF","ICO","BMP","Unsupported","ConvertBuffer","convert","GrayAlphaImage","GrayImage","ImageBuffer","Pixel","Subpixel","channel_count","channels","channels_mut","color_model","color_type","channels4","from_channels","from_slice","from_slice_mut","to_rgb","to_rgba","to_luma","to_luma_alpha","to_bgr","to_bgra","map","apply","map_with_alpha","apply_with_alpha","map2","apply2","invert","blend","RgbImage","RgbaImage","Primitive","guess_format","load","load_from_memory","load_from_memory_with_format","open","save_buffer","DynamicImage","ImageLuma8","ImageLumaA8","ImageRgb8","ImageRgba8","ImageBgr8","ImageBgra8","Frame","Frames","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","fmt","fmt","default","eq","clone","clone","index_of","map_color","index_of","map_color","channel_count","color_model","color_type","channels","channels_mut","channels4","from_channels","from_slice","from_slice_mut","to_rgb","to_bgr","to_rgba","to_bgra","to_luma","to_luma_alpha","map","apply","map_with_alpha","apply_with_alpha","map2","apply2","invert","blend","channel_count","color_model","color_type","channels","channels_mut","channels4","from_channels","from_slice","from_slice_mut","to_rgb","to_bgr","to_rgba","to_bgra","to_luma","to_luma_alpha","map","apply","map_with_alpha","apply_with_alpha","map2","apply2","invert","blend","channel_count","color_model","color_type","channels","channels_mut","channels4","from_channels","from_slice","from_slice_mut","to_rgb","to_bgr","to_rgba","to_bgra","to_luma","to_luma_alpha","map","apply","map_with_alpha","apply_with_alpha","map2","apply2","invert","blend","channel_count","color_model","color_type","channels","channels_mut","channels4","from_channels","from_slice","from_slice_mut","to_rgb","to_bgr","to_rgba","to_bgra","to_luma","to_luma_alpha","map","apply","map_with_alpha","apply_with_alpha","map2","apply2","invert","blend","channel_count","color_model","color_type","channels","channels_mut","channels4","from_channels","from_slice","from_slice_mut","to_rgb","to_bgr","to_rgba","to_bgra","to_luma","to_luma_alpha","map","apply","map_with_alpha","apply_with_alpha","map2","apply2","invert","blend","channel_count","color_model","color_type","channels","channels_mut","channels4","from_channels","from_slice","from_slice_mut","to_rgb","to_bgr","to_rgba","to_bgra","to_luma","to_luma_alpha","map","apply","map_with_alpha","apply_with_alpha","map2","apply2","invert","blend","convert","dimensions","colortype","row_len","read_scanline","read_image","dimensions","colortype","row_len","read_scanline","read_image","dimensions","colortype","row_len","read_scanline","read_image","is_animated","into_frames","dimensions","colortype","row_len","read_scanline","read_image","dimensions","colortype","row_len","read_scanline","read_image","dimensions","colortype","row_len","read_scanline","read_image","dimensions","colortype","row_len","read_scanline","read_image","dimensions","colortype","row_len","read_scanline","read_image","dimensions","colortype","row_len","read_scanline","read_image","dimensions","colortype","row_len","read_scanline","read_image","dimensions","colortype","row_len","read_scanline","read_image","dimensions","bounds","get_pixel","unsafe_get_pixel","inner","dimensions","bounds","get_pixel","inner","dimensions","bounds","get_pixel","view","inner","get_pixel_mut","put_pixel","unsafe_put_pixel","blend_pixel","inner_mut","put_pixel","blend_pixel","get_pixel_mut","inner_mut","get_pixel_mut","put_pixel","blend_pixel","sub_image","inner_mut","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into_iter","next","size_hint","next","next","next","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","eq","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","deref","deref_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","hash","hash","hash","hash","hash","hash","hash","description","cause","new","new","encode","from_u8","from_rgba","from_rgba_speed","from_palette_pixels","from_indexed_pixels","from_rgb","from_rgb_speed","new","new_nonstrict","to_hdr","to_ldr","to_ldr_scale_gamma","new","with_strictness","metadata","read_image_native","read_image_transform","read_image_ldr","read_image_hdr","new","encode","new","new","encode","new","new","new_with_quality","encode","new","into_inner","subtype","new","with_subtype","with_header","with_dynamic_header","encode","magic_constant","sample_encoding","subtype","width","height","maximal_sample","as_bitmap","as_graymap","as_pixmap","as_arbitrary","write","new","new","new","new","from_parts","delay","buffer","into_buffer","left","top","from_raw","into_raw","dimensions","width","height","pixels","enumerate_pixels","get_pixel","pixels_mut","enumerate_pixels_mut","get_pixel_mut","put_pixel","save","new","from_pixel","from_fn","from_vec","into_vec","expand_palette","expand_palette","new_luma8","new_luma_a8","new_rgb8","new_rgba8","new_bgra8","new_bgr8","to_rgb","to_rgba","to_bgr","to_bgra","to_luma","to_luma_alpha","crop","as_rgb8","as_mut_rgb8","as_bgr8","as_mut_bgr8","as_rgba8","as_mut_rgba8","as_bgra8","as_mut_bgra8","as_luma8","as_mut_luma8","as_luma_alpha8","as_mut_luma_alpha8","raw_pixels","color","grayscale","invert","resize","resize_exact","thumbnail","thumbnail_exact","resize_to_fill","blur","unsharpen","filter3x3","adjust_contrast","brighten","huerotate","flipv","fliph","rotate90","rotate180","rotate270","write_to","save","is_animated","into_frames","load_rect","width","height","in_bounds","unsafe_get_pixel","pixels","view","unsafe_put_pixel","pixels_mut","copy_from","sub_image","new","change_bounds","to_image"],"q":["image","image::math","image::math::nq","","","","","image::math","image::math::utils","image","image::imageops","image::imageops::colorops","","","","","","","","","","","","image::imageops","","","","","","","","","","","","","","","","","","","image","image::bmp","","image","image::dxt","","","","","","","","","","image","image::gif","","","","","","","","","","","","","","","","","","","","","","","image","image::hdr","","","","","","","","","","","","","","","","","","","image","image::ico","","image","image::jpeg","","image","image::png","","","","","image","image::pnm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image","image::tga","image","image::tiff","","image","image::webp","image::webp::vp8","","","","","","","","","","image::webp","image","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::math::nq","","","","","","","image::imageops::colorops","","","","","","","","","image::imageops","","","","","","","","","image::bmp","","","","","","","","","","","","","","image::dxt","","","","","","","","","","","","","","","","","","","","","","","image::gif","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::hdr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::ico","","","","","","","","","","","","","","image::jpeg","","","","","","","","","","","","","","image::png","","","","","","","","","","","","","","image::pnm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::tga","","","","","","","image::tiff","","","","","","","image::webp","","","","","","","image::webp::vp8","","","","","","","","","","","","","","","","image","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::gif","","","","","","image::imageops::colorops","","image::math::nq","","image","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::bmp","","","","","image::dxt","","","","","image::gif","","","","","","","image::hdr","","","","","image::ico","","","","","image::jpeg","","","","","image::png","","","","","image::pnm","","","","","image::tga","","","","","image::tiff","","","","","image::webp","","","","","image","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::pnm","","","","image","","","","","image::hdr","","","image","","","image::imageops::colorops","image::imageops","image::dxt","image::hdr","","image::pnm","","","","","","","image::webp::vp8","image","","","","","","","","","","","","image::webp::vp8","image::dxt","image::hdr","","image::pnm","","","image","","","","","","","","","","","","","","","","","","","image::dxt","image::hdr","","","","image::pnm","","","","","","","image::webp::vp8","image","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::bmp","","","image::gif","","","","","","","image::hdr","","","","","","","","","","","","","","image::ico","","","image::jpeg","","","","image::pnm","","","","","","","","","","","","","","","","","","","image::tga","image::webp","image","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Mathematical helper functions and types.","NEUQUANT Neural-Net quantization algorithm by Anthony …","Neural network color quantizer","Creates a new neural network and trains it with the …","Initializes the neural network and trains it with the …","Maps the pixel in-place to the best-matching color in the …","Finds the best-matching index in the color map for <code>pixel</code>","Shared mathematical utility functions.","Cut value to be inside given range","Image Processing Functions","Functions for altering and converting the color of …","Convert the supplied image to grayscale","Invert each pixel within the supplied image. This …","Adjust the contrast of the supplied image. <code>contrast</code> is …","Brighten the supplied image. <code>value</code> is the amount to …","Hue rotate the supplied image. <code>value</code> is the degrees to …","A color map","The color type on which the map operates on","Returns the index of the closed match of <code>color</code> in the …","Maps <code>color</code> to the closest color in the color map.","A bi-level color map","Reduces the colors of the image using the supplied …","Reduces the colors using the supplied <code>color_map</code> and …","Available Sampling Filters","Nearest Neighbor","Linear Filter","Cubic Filter","Gaussian Filter","Lanczos with window 3","Flip an image horizontally","Flip an image vertically","Rotate an image 180 degrees clockwise.","Rotate an image 270 degrees clockwise.","Rotate an image 90 degrees clockwise.","Performs a Gaussian blur on the supplied image. <code>sigma</code> is …","Perform a 3x3 box filter on the supplied image. <code>kernel</code> is …","Resize the supplied image to the specified dimensions. …","Resize the supplied image to the specific dimensions.","Performs an unsharpen mask on the supplied image. <code>sigma</code> …","Return a mutable view into an image","Overlay an image at a given coordinate (x, y)","Replace the contents of an image at a given coordinate …","Decoding and Encoding of BMP Images","A bmp decoder","The representation of a BMP encoder.","Decoding of DXT (S3TC) compression","What version of DXT compression are we using? Note that …","The DXT1 format. 48 bytes of RGB data in a 4x4 pixel …","The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel …","The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel …","Returns the colortype that is stored in this DXT variant","DXT decoder","Create a new DXT decoder that decodes from the stream <code>r</code>. …","DXT encoder","Create a new encoder that writes its output to <code>w</code>","Encodes the image data <code>data</code> that has dimensions <code>width</code> and …","Decoding of GIF Images","Disposal method","StreamingDecoder is not required to take any action.","Do not dispose.","Restore to background color.","Restore to previous.","A GIF frame","Frame delay in units of 10 ms.","Disposal method.","Transparent index (if available).","True if the frame needs user input to be displayed.","Offset from the top border of the canvas.","Offset from the left border of the canvas.","Width of the frame.","Height of the frame.","True if the image is interlaced.","Frame local color palette if available.","Buffer containing the image data. Only indices unless …","GIF decoder","Creates a new decoder that decodes the input steam <code>r</code>","GIF encoder.","Creates a new GIF encoder.","Encodes a frame.","Encodes Frames.","Decoding of Radiance HDR Images","Adapter to conform to <code>ImageDecoder</code> trait","Radiance HDR file signature","An Radiance HDR decoder","Refer to wikipedia","Color components","Exponent","Creates <code>RGBE8Pixel</code> from components","Scanline buffered pixel by pixel iterator","Metadata for Radiance HDR image","Width of decoded image. It could be either scanline …","Height of decoded image. It depends on orientation too.","Orientation matrix. For standard orientation it is …","Divide color values by exposure to get to get physical …","Divide color values by corresponding tuple member (r, g, …","Pixel height divided by pixel width","All lines contained in image header are put here. …","Helper function for reading raw 3-channel f32 images","Radiance HDR encoder","Converts <code>Rgb<f32></code> into <code>RGBE8Pixel</code>","Decoding and Encoding of ICO files","An ico decoder","ICO encoder","Decoding and Encoding of JPEG Images","JPEG decoder","The representation of a JPEG encoder","Decoding and Encoding of PNG Images","PNG decoder","Creates a new decoder that decodes from the stream <code>r</code>","PNG encoder","Create a new encoder that writes its output to <code>w</code>","Encodes the image <code>image</code> that has dimensions <code>width</code> and …","Decoding of netpbm image formats (pbm, pgm, ppm and pam).","PNM decoder","Encodes images to any of the <code>pnm</code> image formats.","Header produced by a <code>pam</code> file (“Portable Arbitrary Map…","Height of the image file","Width of the image file","Number of color channels","Maximum sample value within the image","Color interpretation of image pixels","Standardized tuple type specifiers in the header of a <code>pam</code>.","Pixels are either black (0) or white (1)","Pixels are either black (0) or white (1) and a second …","Pixels represent the amount of white","Grayscale with an additional alpha channel","Three channels: Red, Green, Blue","Four channels: Red, Green, Blue, Alpha","An image format which is not standardized","Header produced by a <code>pbm</code> file (“Portable Bit Map”)","Binary or Ascii encoded file","Height of the image file","Width of the image file","Header produced by a <code>pgm</code> file (“Portable Gray Map”)","Binary or Ascii encoded file","Height of the image file","Width of the image file","Maximum sample value within the image","Header produced by a <code>ppm</code> file (“Portable Pixel Map”)","Binary or Ascii encoded file","Height of the image file","Width of the image file","Maximum sample value within the image","Stores the complete header data of a file.","Denotes the category of the magic number","Magic numbers P1 and P4","Magic numbers P2 and P5","Magic numbers P3 and P6","Magic number P7","The kind of encoding used to store sample values","Samples are unsigned binary integers in big endian","Samples are encoded as decimal ascii strings separated by …","Decoding of TGA Images","The representation of a TGA decoder","Decoding and Encoding of TIFF Images","Decoder for TIFF images.","Create a new TIFFDecoder.","Decoding of Webp Images","An implementation of the VP8 Video Codec","A Representation of the last decoded video frame","The width of the luma plane","The height of the luma plane","The luma plane of the frame","Indicates whether this frame is a keyframe","Indicates whether this frame is intended for display","The pixel type of the frame as defined by Section 9.2 of …","VP8 Decoder","Create a new decoder. The reader must present a raw vp8 …","Decodes the current frame and returns a reference to it","A Representation of a Webp Image format decoder.","An enumeration over supported color types and their bit …","Pixel is grayscale","Pixel contains R, G and B channels","Pixel is an index into a color palette","Pixel is grayscale with an alpha channel","Pixel is RGB with an alpha channel","Pixel contains B, G and R channels","Pixel is BGR with an alpha channel","Grayscale colors","","","Grayscale colors + alpha channel","","","RGB colors","","","RGB colors + alpha channel","","","BGR colors","","","BGR colors + alpha channel","","","Result of a decoding process","A vector of unsigned bytes","A vector of unsigned words","A trait for manipulating images.","Underlying image type. This is mainly used by SubImages …","Gets a reference to the mutable pixel at location <code>(x, y)</code>","Put a pixel at location (x, y)","Puts a pixel at location (x, y)","Put a pixel at location (x, y), taking into account alpha …","Returns an Iterator over mutable pixels of this image. …","Copies all of the pixels from another image into this …","Returns a mutable reference to the underlying image.","Returns a subimage that is a view into this image.","Trait to inspect an image.","The type of pixel.","Underlying image type. This is mainly used by SubImages …","The width and height of this image.","The width of this image.","The height of this image.","The bounding rectangle of this image.","Returns true if this x, y coordinate is contained inside …","Returns the pixel located at (x, y)","Returns the pixel located at (x, y)","Returns an Iterator over the pixels of this image. The …","Returns a reference to the underlying image.","Returns an subimage that is an immutable view into this …","The trait that all decoders implement","Returns a tuple containing the width and height of the …","Returns the color type of the image e.g. RGB(8) (8bit RGB)","Returns the length in bytes of one decoded row of the …","Reads one row from the image into <code>buf</code> and returns the row …","Decodes the entire image and return it as a Vector","Returns true if the image is animated","Returns the frames of the image","Decodes a specific region of the image, represented by …","An enumeration of Image errors","The Image is not formatted properly","The Image’s dimensions are either too small or too large","The Decoder does not support this image format","The Decoder does not support this color type","Not enough data was provided to the Decoder to decode the …","An I/O Error occurred while decoding the image","The end of the image has been reached","Result of an image decoding/encoding process","Mutable pixel iterator","Immutable pixel iterator","A View into another image","Available Sampling Filters","Nearest Neighbor","Linear Filter","Cubic Filter","Gaussian Filter","Lanczos with window 3","An enumeration of supported image formats. Not all …","An Image in PNG Format","An Image in JPEG Format","An Image in GIF Format","An Image in WEBP Format","An Image in general PNM Format","An Image in TIFF Format","An Image in TGA Format","An Image in BMP Format","An Image in ICO Format","An Image in Radiance HDR Format","An enumeration of supported image formats for encoding.","An Image in PNG Format","An Image in JPEG Format with specified quality","An Image in one of the PNM Formats","An Image in GIF Format","An Image in ICO Format","An Image in BMP Format","A value for signalling an error: An unsupported format …","Provides color conversions for whole image buffers.","Converts <code>self</code> to a buffer of type T","Sendable grayscale + alpha channel image buffer","Sendable grayscale image buffer","Generic image buffer","A generalized pixel.","The underlying subpixel type.","Returns the number of channels of this pixel type.","Returns the components as a slice.","Returns the components as a mutable slice","Returns a string that can help to interpret the meaning …","Returns the ColorType for this pixel format","Returns the channels of this pixel as a 4 tuple. If the …","Construct a pixel from the 4 channels a, b, c and d. If …","Returns a view into a slice.","Returns mutable view into a mutable slice.","Convert this pixel to RGB","Convert this pixel to RGB with an alpha channel","Convert this pixel to luma","Convert this pixel to luma with an alpha channel","Convert this pixel to BGR","Convert this pixel to BGR with an alpha channel","Apply the function <code>f</code> to each channel of this pixel.","Apply the function <code>f</code> to each channel of this pixel.","Apply the function <code>f</code> to each channel except the alpha …","Apply the function <code>f</code> to each channel except the alpha …","Apply the function <code>f</code> to each channel of this pixel and …","Apply the function <code>f</code> to each channel of this pixel and …","Invert this pixel","Blend the color of a given pixel into ourself, taking …","Sendable Rgb image buffer","Sendable Rgb + alpha channel image buffer","Primitive trait from old stdlib","Guess image format from memory block","Create a new image from a Reader","Create a new image from a byte slice","Create a new image from a byte slice","Open the image located at the path specified. The image’…","Saves the supplied buffer to a file at the path specified.","A Dynamic Image","Each pixel in this image is 8-bit Luma","Each pixel in this image is 8-bit Luma with alpha","Each pixel in this image is 8-bit Rgb","Each pixel in this image is 8-bit Rgb with alpha","Each pixel in this image is 8-bit Bgr","Each pixel in this image is 8-bit Bgr with alpha","A single animation frame","Holds the frames of the animated imageeturns the pixel located at (x, y), ignoring bounds …","","","","","","","","","","","","","Puts a pixel at location (x, y), ignoring bounds checking.","Put a pixel at location (x, y), taking into account alpha …","","","DEPRECATED: Use iterator <code>pixels_mut</code> to blend the pixels …","DEPRECATED: Do not use is function: It is unimplemented!","","","","DEPRECATED: This method will be removed. Blend the pixel …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new decoder that decodes from the stream <code>r</code>","Create a new encoder that writes its output to <code>w</code>.","Encodes the image <code>image</code> that has dimensions <code>width</code> and …","Converts <code>u8</code> to <code>Option<Self></code>","Creates a frame from pixels in RGBA format. <em>Note: This …","Creates a frame from pixels in RGBA format. <code>speed</code> is a …","Creates a frame from a palette and indexed pixels.","Creates a frame from indexed pixels in the global palette.","Creates a frame from pixels in RGB format. <em>Note: This …","Creates a frame from pixels in RGB format. <code>speed</code> is a …","Creates adapter","Allows reading old Radiance HDR images","Converts <code>RGBE8Pixel</code> into <code>Rgb<f32></code> linearly","Converts <code>RGBE8Pixel</code> into <code>Rgb<T></code> with scale=1 and gamma=2.2","Converts RGBE8Pixel into Rgb using provided scale and …","Reads Radiance HDR image header from stream <code>r</code> if the …","Reads Radiance HDR image header from stream <code>reader</code>, if …","Returns file metadata. Refer to <code>HDRMetadata</code> for details.","Consumes decoder and returns a vector of RGBE8 pixels","Consumes decoder and returns a vector of transformed …","Consumes decoder and returns a vector of Rgb pixels. …","Consumes decoder and returns a vector of Rgb pixels.","Creates encoder","Encodes the image <code>data</code> that has dimensions <code>width</code> and …","Create a new decoder that decodes from the stream <code>r</code>","Create a new encoder that writes its output to <code>w</code>.","Encodes the image <code>image</code> that has dimensions <code>width</code> and …","Create a new decoder that decodes from the stream <code>r</code>","Create a new encoder that writes its output to <code>w</code>","Create a new encoder that writes its output to <code>w</code>, and has …","Encodes the image <code>image</code> that has dimensions <code>width</code> and …","Create a new decoder that decodes from the stream <code>read</code>","Extract the reader and header after an image has been …","Get the pnm subtype, depending on the magic constant …","Create new PNMEncoder from the <code>writer</code>.","Encode a specific pnm subtype image.","Enforce the use of a chosen header.","Create the header dynamically for each image.","Encode an image whose samples are represented as <code>u8</code>.","Get the two magic constant bytes corresponding to this …","Whether samples are stored as binary or as decimal ascii","Retrieve the format subtype from which the header was …","The width of the image this header is for.","The height of the image this header is for.","The biggest value a sample can have. In other words, the …","Retrieve the underlying bitmap header if any","Retrieve the underlying graymap header if any","Retrieve the underlying pixmap header if any","Retrieve the underlying arbitrary header if any","Write the header back into a binary stream","Create a new decoder that decodes from the stream <code>r</code>","Create a new WebpDecoder from the Reader <code>r</code>. This function …","Contructs a new frame iterator","Contructs a new frame","Contructs a new frame","Delay of this frame","Returns the image buffer","Returns the image buffer","Returns the x offset","Returns the y offset","Contructs a buffer from a generic container (for example …","Returns the underlying raw buffer","The width and height of this image.","The width of this image.","The height of this image.","Returns an iterator over the pixels of this image.","Enumerates over the pixels of the image. The iterator …","Gets a reference to the pixel at location <code>(x, y)</code>","Returns an iterator over the mutable pixels of this image.","Enumerates over the pixels of the image. The iterator …","Gets a reference to the mutable pixel at location <code>(x, y)</code>","Puts a pixel at location <code>(x, y)</code>","Saves the buffer to a file at the path specified.","Creates a new image buffer based on a <code>Vec<P::Subpixel></code>.","Constructs a new ImageBuffer by copying a pixel","Constructs a new ImageBuffer by repeated application of …","Creates an image buffer out of an existing buffer. …","Consumes the image buffer and returns the underlying data …","Expands a color palette by re-using the existing buffer. …","Expands a color palette by re-using the existing buffer. …","Creates a dynamic image backed by a buffer of grey pixels.","Creates a dynamic image backed by a buffer of grey pixels …","Creates a dynamic image backed by a buffer of RGB pixels.","Creates a dynamic image backed by a buffer of RGBA pixels.","Creates a dynamic image backed by a buffer of BGRA pixels.","Creates a dynamic image backed by a buffer of BGR pixels.","Returns a copy of this image as an RGB image.","Returns a copy of this image as an RGBA image.","Returns a copy of this image as an BGR image.","Returns a copy of this image as an RGBA image.","Returns a copy of this image as a Luma image.","Returns a copy of this image as a LumaA image.","Return a cut out of this image delimited by the bounding …","Return a reference to an 8bit RGB image","Return a mutable reference to an 8bit RGB image","Return a reference to an 8bit BGR image","Return a mutable reference to an 8bit BGR image","Return a reference to an 8bit RGBA image","Return a mutable reference to an 8bit RGBA image","Return a reference to an 8bit BGRA image","Return a mutable reference to an 8bit RGBA image","Return a reference to an 8bit Grayscale image","Return a mutable reference to an 8bit Grayscale image","Return a reference to an 8bit Grayscale image with an …","Return a mutable reference to an 8bit Grayscale image …","Return this image’s pixels as a byte vector.","Return this image’s color type.","Return a grayscale version of this image.","Invert the colors of this image. This method operates …","Resize this image using the specified filter algorithm. …","Resize this image using the specified filter algorithm. …","Scale this image down to fit within a specific size. …","Scale this image down to a specific size. Returns a new …","Resize this image using the specified filter algorithm. …","Performs a Gaussian blur on this image. <code>sigma</code> is a …","Performs an unsharpen mask on this image. <code>sigma</code> is the …","Filters this image with the specified 3x3 kernel.","Adjust the contrast of this image. <code>contrast</code> is the amount …","Brighten the pixels of this image. <code>value</code> is the amount to …","Hue rotate the supplied image. <code>value</code> is the degrees to …","Flip this image vertically","Flip this image horizontally","Rotate this image 90 degrees clockwise.","Rotate this image 180 degrees clockwise.","Rotate this image 270 degrees clockwise.","Encode this image and write it to <code>w</code>","Saves the buffer to a file at the path specified.","Returns true if the image is animated","Returns the frames of the image","Decodes a specific region of the image, represented by …","The width of this image.","The height of this image.","Returns true if this x, y coordinate is contained inside …","Returns the pixel located at (x, y)","Returns an Iterator over the pixels of this image. The …","Returns an subimage that is an immutable view into this …","Puts a pixel at location (x, y)","Returns an Iterator over mutable pixels of this image. …","Copies all of the pixels from another image into this …","Returns a subimage that is a view into this image.","Construct a new subimage","Change the coordinates of this subimage.","Convert this subimage to an ImageBuffer"],"i":[0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,0,5,0,6,6,0,0,7,7,7,7,0,8,8,8,8,8,8,8,8,8,8,8,0,9,0,10,10,10,0,0,0,0,0,11,11,0,0,0,12,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,13,0,14,14,0,0,0,0,15,15,15,15,15,0,16,16,16,16,16,16,16,0,17,17,17,0,18,18,18,18,0,19,19,19,19,0,0,20,20,20,20,0,21,21,0,0,0,0,22,0,0,0,23,23,23,23,23,23,0,24,24,0,0,25,25,25,25,25,25,25,0,26,0,0,27,0,0,28,0,0,29,0,0,30,0,0,31,0,0,32,32,0,33,33,33,33,33,33,33,33,33,0,34,34,34,34,34,34,34,34,34,34,34,34,0,35,35,35,35,35,35,35,35,0,36,36,36,36,36,36,36,0,0,0,0,0,3,3,3,3,3,0,37,37,37,37,37,37,37,37,37,37,0,38,38,38,38,38,38,38,0,39,0,0,0,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,0,0,0,0,0,0,0,0,0,41,41,41,41,41,41,0,0,1,1,1,1,1,1,1,42,42,42,42,42,42,42,42,42,3,3,3,3,3,3,3,3,3,43,43,43,43,43,43,43,44,44,44,44,44,44,44,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,45,45,45,45,45,45,45,46,46,46,46,46,46,46,11,11,11,11,11,11,11,11,11,47,47,47,47,47,47,47,47,12,12,12,12,12,12,12,12,12,48,48,48,48,48,48,48,49,49,49,49,49,49,49,50,50,50,50,50,50,50,51,51,51,51,51,51,51,52,52,52,52,52,52,52,13,13,13,13,13,13,13,14,14,14,14,14,14,14,53,53,53,53,53,53,53,54,54,54,54,54,54,54,21,21,21,21,21,21,21,21,21,20,20,20,20,20,20,20,20,20,55,55,55,55,55,55,55,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,56,56,56,56,56,56,56,22,22,22,22,22,22,22,57,57,57,57,57,57,57,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,58,58,58,58,58,58,58,58,59,59,59,59,59,59,59,59,59,60,60,60,60,60,60,60,60,60,25,25,25,25,25,25,25,25,25,28,28,28,28,28,28,28,28,28,30,30,30,30,30,30,30,30,30,26,26,26,26,26,26,26,26,26,29,29,29,29,29,29,29,29,29,31,31,31,31,31,31,31,31,31,27,27,27,27,27,27,27,27,27,41,41,41,41,41,41,41,41,41,36,36,36,36,36,36,36,36,32,32,32,32,32,32,32,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,61,61,61,61,61,61,61,61,62,62,62,62,62,62,62,62,63,63,63,63,63,63,63,7,8,8,7,8,7,42,42,1,1,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,60,43,43,43,43,43,5,5,5,5,5,9,9,9,9,9,9,9,45,45,45,45,45,49,49,49,49,49,51,51,51,51,51,13,13,13,13,13,53,53,53,53,53,56,56,56,56,56,22,22,22,22,22,57,57,57,57,57,60,60,60,60,60,41,41,41,41,63,63,63,63,63,60,60,60,60,60,41,41,41,41,63,63,63,63,63,36,25,36,25,36,55,55,55,55,36,25,32,36,38,46,47,47,58,61,62,42,3,4,11,12,21,20,17,18,19,15,16,23,59,60,25,28,30,26,29,31,27,41,37,38,23,4,11,11,21,20,20,25,25,28,28,30,30,26,26,29,29,31,31,27,27,37,38,38,60,60,4,45,46,11,12,21,20,17,18,19,15,16,23,60,25,28,30,26,29,31,27,36,32,37,38,36,60,28,30,26,29,31,27,60,28,30,26,29,31,27,25,28,30,26,29,31,27,36,36,43,44,44,7,8,8,8,8,8,8,45,45,11,11,11,46,46,46,46,46,46,46,48,48,49,50,50,51,52,52,52,53,53,53,54,54,54,54,54,20,20,55,55,55,55,55,55,55,55,55,56,57,58,59,59,59,59,59,59,59,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,64,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,35,35,35,34,34,34,34,34,34,33,33,33,33,63,63,63],"f":[null,null,null,[[["usize",15],["i32",15]]],[[]],[[]],[[],["usize",15]],null,[[]],null,null,[[],[["imagebuffer",3],["luma",3],["vec",3]]],[[]],[[["f32",15]],[["vec",3],["imagebuffer",3]]],[[["i32",15]],[["vec",3],["imagebuffer",3]]],[[["i32",15]],[["vec",3],["imagebuffer",3]]],null,null,[[],["usize",15]],[[]],null,[[["imagebuffer",3]]],[[["imagebuffer",3]],[["imagebuffer",3],["vec",3],["luma",3]]],null,null,null,null,null,null,[[],[["imagebuffer",3],["vec",3]]],[[],[["imagebuffer",3],["vec",3]]],[[],[["imagebuffer",3],["vec",3]]],[[],[["imagebuffer",3],["vec",3]]],[[],[["imagebuffer",3],["vec",3]]],[[["f32",15]],[["imagebuffer",3],["vec",3]]],[[],[["vec",3],["imagebuffer",3]]],[[["u32",15],["filtertype",4]],[["imagebuffer",3],["vec",3]]],[[["u32",15]],[["vec",3],["imagebuffer",3]]],[[["f32",15],["i32",15]],[["vec",3],["imagebuffer",3]]],[[["u32",15]],["subimage",3]],[[["u32",15]]],[[["u32",15]]],null,null,null,null,null,null,null,null,[[],["colortype",4]],null,[[["u32",15],["dxtvariant",4]],[["result",4],["dxtdecoder",3],["imageerror",4]]],null,[[],["dxtencoder",3]],[[["u32",15],["dxtvariant",4]],["imageresult",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["decoder",3]],null,[[],["encoder",3]],[[["frame",3]],["imageresult",6]],[[["frames",3]],["imageresult",6]],null,null,null,null,null,null,null,[[["u8",15]],["rgbe8pixel",3]],null,null,null,null,null,null,null,null,null,[[["asref",8],["path",3]],[["vec",3],["result",6]]],null,[[["rgb",3],["f32",15]],["rgbe8pixel",3]],null,null,null,null,null,null,null,null,[[],["pngdecoder",3]],null,[[],["pngencoder",3]],[[["u32",15],["colortype",4]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["tiffdecoder",3],["imageerror",4],["result",4]]],null,null,null,null,null,null,null,null,null,null,[[],["vp8decoder",3]],[[],[["result",6],["frame",3]]],null,null,null,null,null,null,null,null,null,null,null,[[],[["primitive",8],["luma",3]]],null,null,[[],[["primitive",8],["lumaa",3]]],null,null,[[],[["rgb",3],["primitive",8]]],null,null,[[],[["rgba",3],["primitive",8]]],null,null,[[],[["primitive",8],["bgr",3]]],null,null,[[],[["bgra",3],["primitive",8]]],null,null,null,null,null,[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[],["mutpixels",3]],[[["u32",15]],["bool",15]],[[]],[[["u32",15]],["subimage",3]],null,null,null,[[]],[[],["u32",15]],[[],["u32",15]],[[]],[[["u32",15]],["bool",15]],[[["u32",15]]],[[["u32",15]]],[[],["pixels",3]],[[]],[[["u32",15]],["subimage",3]],null,[[],["imageresult",6]],[[],[["imageresult",6],["colortype",4]]],[[],[["usize",15],["imageresult",6]]],[[],[["u32",15],["imageresult",6]]],[[],[["decodingresult",4],["imageresult",6]]],[[],[["imageresult",6],["bool",15]]],[[],[["frames",3],["imageresult",6]]],[[["u32",15]],[["vec",3],["imageresult",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,[[],["u8",15]],[[]],[[]],[[],["str",15]],[[],["colortype",4]],[[]],[[]],[[]],[[]],[[],["rgb",3]],[[],["rgba",3]],[[],["luma",3]],[[],["lumaa",3]],[[],["bgr",3]],[[],["bgra",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[],[["imageresult",6],["imageformat",4]]],[[["bufread",8],["seek",8],["imageformat",4]],[["dynamicimage",4],["imageresult",6]]],[[],[["dynamicimage",4],["imageresult",6]]],[[["imageformat",4]],[["dynamicimage",4],["imageresult",6]]],[[],[["dynamicimage",4],["imageresult",6]]],[[["u32",15],["colortype",4]],["result",6]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[],["frame",3]],[[["disposalmethod",4]],["bool",15]],[[],["frame",3]],[[],["disposalmethod",4]],[[["luma",3]],["usize",15]],[[["luma",3]]],[[["rgba",3]],["usize",15]],[[["rgba",3]]],[[],["u8",15]],[[],["str",15]],[[],["colortype",4]],[[]],[[]],[[]],[[],["rgb",3]],[[],["rgb",3]],[[],["rgb",3]],[[],["rgb",3]],[[],["bgr",3]],[[],["rgba",3]],[[],["bgra",3]],[[],["luma",3]],[[],["lumaa",3]],[[],["rgb",3]],[[]],[[],["rgb",3]],[[]],[[],["rgb",3]],[[["rgb",3]]],[[]],[[["rgb",3]]],[[],["u8",15]],[[],["str",15]],[[],["colortype",4]],[[]],[[]],[[]],[[],["bgr",3]],[[],["bgr",3]],[[],["bgr",3]],[[],["rgb",3]],[[],["bgr",3]],[[],["rgba",3]],[[],["bgra",3]],[[],["luma",3]],[[],["lumaa",3]],[[],["bgr",3]],[[]],[[],["bgr",3]],[[]],[[],["bgr",3]],[[["bgr",3]]],[[]],[[["bgr",3]]],[[],["u8",15]],[[],["str",15]],[[],["colortype",4]],[[]],[[]],[[]],[[],["luma",3]],[[],["luma",3]],[[],["luma",3]],[[],["rgb",3]],[[],["bgr",3]],[[],["rgba",3]],[[],["bgra",3]],[[],["luma",3]],[[],["lumaa",3]],[[],["luma",3]],[[]],[[],["luma",3]],[[]],[[],["luma",3]],[[["luma",3]]],[[]],[[["luma",3]]],[[],["u8",15]],[[],["str",15]],[[],["colortype",4]],[[]],[[]],[[]],[[],["rgba",3]],[[],["rgba",3]],[[],["rgba",3]],[[],["rgb",3]],[[],["bgr",3]],[[],["rgba",3]],[[],["bgra",3]],[[],["luma",3]],[[],["lumaa",3]],[[],["rgba",3]],[[]],[[],["rgba",3]],[[]],[[],["rgba",3]],[[["rgba",3]]],[[]],[[["rgba",3]]],[[],["u8",15]],[[],["str",15]],[[],["colortype",4]],[[]],[[]],[[]],[[],["bgra",3]],[[],["bgra",3]],[[],["bgra",3]],[[],["rgb",3]],[[],["bgr",3]],[[],["rgba",3]],[[],["bgra",3]],[[],["luma",3]],[[],["lumaa",3]],[[],["bgra",3]],[[]],[[],["bgra",3]],[[]],[[],["bgra",3]],[[["bgra",3]]],[[]],[[["bgra",3]]],[[],["u8",15]],[[],["str",15]],[[],["colortype",4]],[[]],[[]],[[]],[[],["lumaa",3]],[[],["lumaa",3]],[[],["lumaa",3]],[[],["rgb",3]],[[],["bgr",3]],[[],["rgba",3]],[[],["bgra",3]],[[],["luma",3]],[[],["lumaa",3]],[[],["lumaa",3]],[[]],[[],["lumaa",3]],[[]],[[],["lumaa",3]],[[["lumaa",3]]],[[]],[[["lumaa",3]]],[[],[["vec",3],["imagebuffer",3]]],[[],["imageresult",6]],[[],[["imageresult",6],["colortype",4]]],[[],[["usize",15],["imageresult",6]]],[[],[["u32",15],["imageresult",6]]],[[],[["decodingresult",4],["imageresult",6]]],[[],["imageresult",6]],[[],[["imageresult",6],["colortype",4]]],[[],[["usize",15],["imageresult",6]]],[[],[["u32",15],["imageresult",6]]],[[],[["decodingresult",4],["imageresult",6]]],[[],["imageresult",6]],[[],[["colortype",4],["imageresult",6]]],[[],[["usize",15],["imageresult",6]]],[[],[["u32",15],["imageresult",6]]],[[],[["decodingresult",4],["imageresult",6]]],[[],[["imageresult",6],["bool",15]]],[[],[["imageresult",6],["frames",3]]],[[],["imageresult",6]],[[],[["imageresult",6],["colortype",4]]],[[],[["usize",15],["imageresult",6]]],[[],[["u32",15],["imageresult",6]]],[[],[["decodingresult",4],["imageresult",6]]],[[],["imageresult",6]],[[],[["imageresult",6],["colortype",4]]],[[],[["usize",15],["imageresult",6]]],[[],[["u32",15],["imageresult",6]]],[[],[["decodingresult",4],["imageresult",6]]],[[],["imageresult",6]],[[],[["imageresult",6],["colortype",4]]],[[],[["usize",15],["imageresult",6]]],[[],[["u32",15],["imageresult",6]]],[[],[["decodingresult",4],["imageresult",6]]],[[],["imageresult",6]],[[],[["imageresult",6],["colortype",4]]],[[],[["usize",15],["imageresult",6]]],[[],[["u32",15],["imageresult",6]]],[[],[["decodingresult",4],["imageresult",6]]],[[],["imageresult",6]],[[],[["imageresult",6],["colortype",4]]],[[],[["usize",15],["imageresult",6]]],[[],[["u32",15],["imageresult",6]]],[[],[["decodingresult",4],["imageresult",6]]],[[],["imageresult",6]],[[],[["imageresult",6],["colortype",4]]],[[],[["usize",15],["imageresult",6]]],[[],[["u32",15],["imageresult",6]]],[[],[["decodingresult",4],["imageresult",6]]],[[],["imageresult",6]],[[],[["imageresult",6],["colortype",4]]],[[],[["usize",15],["imageresult",6]]],[[],[["u32",15],["imageresult",6]]],[[],[["decodingresult",4],["imageresult",6]]],[[],["imageresult",6]],[[],[["colortype",4],["imageresult",6]]],[[],[["usize",15],["imageresult",6]]],[[],[["u32",15],["imageresult",6]]],[[],[["decodingresult",4],["imageresult",6]]],[[]],[[]],[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[]],[[["u32",15]],[["rgba",3],["u8",15]]],[[]],[[]],[[]],[[["u32",15]]],[[["u32",15]],["subimage",3]],[[]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[]],[[["u32",15],["rgba",3],["u8",15]]],[[["u32",15],["rgba",3],["u8",15]]],[[["u32",15]],["rgba",3]],[[]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]],["subimage",3]],[[]],[[["decodingerror",4]],["imageerror",4]],[[["pixelformat",4]],["colortype",4]],[[["error",4]],["imageerror",4]],[[],["colortype",4]],[[["decodingerror",4]],["imageerror",4]],[[["bitmapheader",3]]],[[["graymapheader",3]]],[[["pixmapheader",3]]],[[["arbitraryheader",3]]],[[["tifferror",4]],["imageerror",4]],[[["colortype",4]],["colortype",4]],[[["decodingresult",4]],["decodingresult",4]],[[["error",3]],["imageerror",4]],[[["imageformat",4]]],[[]],[[],["option",4]],[[]],[[],[["frame",3],["option",4]]],[[],["option",4]],[[],["option",4]],[[],["bilevel",3]],[[],["filtertype",4]],[[],["dxtvariant",4]],[[],["rgbe8pixel",3]],[[],["hdrmetadata",3]],[[],["sampleencoding",4]],[[],["pnmsubtype",4]],[[],["bitmapheader",3]],[[],["graymapheader",3]],[[],["pixmapheader",3]],[[],["arbitraryheader",3]],[[],["arbitrarytupltype",4]],[[],["frame",3]],[[],["frame",3]],[[],["imagebuffer",3]],[[],["colortype",4]],[[],["rgb",3]],[[],["bgr",3]],[[],["luma",3]],[[],["rgba",3]],[[],["bgra",3]],[[],["lumaa",3]],[[],["dynamicimage",4]],[[],["imageformat",4]],[[],["imageoutputformat",4]],[[],["frame",3]],[[["dxtvariant",4]],["bool",15]],[[["rgbe8pixel",3]],["bool",15]],[[["rgbe8pixel",3]],["bool",15]],[[["sampleencoding",4]],["bool",15]],[[["pnmsubtype",4]],["bool",15]],[[["pnmsubtype",4]],["bool",15]],[[["colortype",4]],["bool",15]],[[["colortype",4]],["bool",15]],[[["rgb",3]],["bool",15]],[[["rgb",3]],["bool",15]],[[["bgr",3]],["bool",15]],[[["bgr",3]],["bool",15]],[[["luma",3]],["bool",15]],[[["luma",3]],["bool",15]],[[["rgba",3]],["bool",15]],[[["rgba",3]],["bool",15]],[[["bgra",3]],["bool",15]],[[["bgra",3]],["bool",15]],[[["lumaa",3]],["bool",15]],[[["lumaa",3]],["bool",15]],[[["imageformat",4]],["bool",15]],[[["imageoutputformat",4]],["bool",15]],[[["imageoutputformat",4]],["bool",15]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["str",15]],[[],[["error",8],["option",4]]],[[],["bmpdecoder",3]],[[]],[[["u32",15],["colortype",4]],["result",6]],[[["u8",15]],[["option",4],["disposalmethod",4]]],[[["u16",15]],["frame",3]],[[["u16",15],["i32",15]],["frame",3]],[[["option",4],["u16",15],["u8",15]],["frame",3]],[[["option",4],["u16",15],["u8",15]],["frame",3]],[[["u16",15]],["frame",3]],[[["u16",15],["i32",15]],["frame",3]],[[],[["imageresult",6],["hdradapter",3]]],[[],[["imageresult",6],["hdradapter",3]]],[[],[["rgb",3],["f32",15]]],[[],[["zero",8],["rgb",3],["primitive",8]]],[[["f32",15]],[["zero",8],["rgb",3],["primitive",8]]],[[],[["imageresult",6],["hdrdecoder",3]]],[[["bool",15]],[["imageresult",6],["hdrdecoder",3]]],[[],["hdrmetadata",3]],[[],[["vec",3],["imageresult",6]]],[[["fn",8],["send",8],["sync",8]],[["imageresult",6],["vec",3]]],[[],[["imageresult",6],["vec",3]]],[[],[["imageresult",6],["vec",3]]],[[],["hdrencoder",3]],[[["usize",15]],["result",6]],[[],[["imageresult",6],["icodecoder",3]]],[[],["icoencoder",3]],[[["u32",15],["colortype",4]],["result",6]],[[],["jpegdecoder",3]],[[],["jpegencoder",3]],[[["u8",15]],["jpegencoder",3]],[[["u32",15],["colortype",4]],["result",6]],[[],[["imageresult",6],["pnmdecoder",3]]],[[]],[[],["pnmsubtype",4]],[[]],[[["pnmsubtype",4]]],[[["pnmheader",3]]],[[]],[[["u32",15],["colortype",4]],["result",6]],[[]],[[],["sampleencoding",4]],[[],["pnmsubtype",4]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],[["bitmapheader",3],["option",4]]],[[],[["graymapheader",3],["option",4]]],[[],[["option",4],["pixmapheader",3]]],[[],[["arbitraryheader",3],["option",4]]],[[["write",8]],["result",6]],[[],["tgadecoder",3]],[[],["webpdecoder",3]],[[["frame",3],["vec",3]],["frames",3]],[[["rgbaimage",6]],["frame",3]],[[["u32",15],["ratio",3],["u16",15],["rgbaimage",6]],["frame",3]],[[],[["ratio",3],["u16",15]]],[[],["rgbaimage",6]],[[],["rgbaimage",6]],[[],["u32",15]],[[],["u32",15]],[[["u32",15]],[["option",4],["imagebuffer",3]]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[],["pixels",3]],[[],["enumeratepixels",3]],[[["u32",15]]],[[],["pixelsmut",3]],[[],["enumeratepixelsmut",3]],[[["u32",15]]],[[["u32",15]]],[[],["result",6]],[[["u32",15]],[["imagebuffer",3],["vec",3]]],[[["u32",15]],[["imagebuffer",3],["vec",3]]],[[["u32",15]],[["imagebuffer",3],["vec",3]]],[[["u32",15],["vec",3]],[["imagebuffer",3],["option",4]]],[[],["vec",3]],[[["option",4],["u8",15]],["rgbaimage",6]],[[["option",4],["u8",15]],["rgbaimage",6]],[[["u32",15]],["dynamicimage",4]],[[["u32",15]],["dynamicimage",4]],[[["u32",15]],["dynamicimage",4]],[[["u32",15]],["dynamicimage",4]],[[["u32",15]],["dynamicimage",4]],[[["u32",15]],["dynamicimage",4]],[[],["rgbimage",6]],[[],["rgbaimage",6]],[[],[["bgr",3],["vec",3],["imagebuffer",3]]],[[],[["imagebuffer",3],["bgra",3],["vec",3]]],[[],["grayimage",6]],[[],["grayalphaimage",6]],[[["u32",15]],["dynamicimage",4]],[[],[["rgbimage",6],["option",4]]],[[],[["option",4],["rgbimage",6]]],[[],[["option",4],["imagebuffer",3]]],[[],[["option",4],["imagebuffer",3]]],[[],[["rgbaimage",6],["option",4]]],[[],[["option",4],["rgbaimage",6]]],[[],[["imagebuffer",3],["option",4]]],[[],[["imagebuffer",3],["option",4]]],[[],[["grayimage",6],["option",4]]],[[],[["option",4],["grayimage",6]]],[[],[["grayalphaimage",6],["option",4]]],[[],[["grayalphaimage",6],["option",4]]],[[],[["vec",3],["u8",15]]],[[],["colortype",4]],[[],["dynamicimage",4]],[[]],[[["u32",15],["filtertype",4]],["dynamicimage",4]],[[["u32",15],["filtertype",4]],["dynamicimage",4]],[[["u32",15]],["dynamicimage",4]],[[["u32",15]],["dynamicimage",4]],[[["u32",15],["filtertype",4]],["dynamicimage",4]],[[["f32",15]],["dynamicimage",4]],[[["f32",15],["i32",15]],["dynamicimage",4]],[[],["dynamicimage",4]],[[["f32",15]],["dynamicimage",4]],[[["i32",15]],["dynamicimage",4]],[[["i32",15]],["dynamicimage",4]],[[],["dynamicimage",4]],[[],["dynamicimage",4]],[[],["dynamicimage",4]],[[],["dynamicimage",4]],[[],["dynamicimage",4]],[[["into",8],["imageoutputformat",4]],["imageresult",6]],[[],["result",6]],[[],[["imageresult",6],["bool",15]]],[[],[["frames",3],["imageresult",6]]],[[["u32",15]],[["vec",3],["imageresult",6]]],[[],["u32",15]],[[],["u32",15]],[[["u32",15]],["bool",15]],[[["u32",15]]],[[],["pixels",3]],[[["u32",15]],["subimage",3]],[[["u32",15]]],[[],["mutpixels",3]],[[["u32",15]],["bool",15]],[[["u32",15]],["subimage",3]],[[["u32",15]],["subimage",3]],[[["u32",15]]],[[],[["vec",3],["imagebuffer",3]]]],"p":[[3,"NeuQuant"],[8,"ColorMap"],[4,"FilterType"],[4,"DXTVariant"],[3,"DXTDecoder"],[3,"DXTEncoder"],[4,"DisposalMethod"],[3,"Frame"],[3,"Decoder"],[3,"Encoder"],[3,"RGBE8Pixel"],[3,"HDRMetadata"],[3,"PNGDecoder"],[3,"PNGEncoder"],[3,"ArbitraryHeader"],[4,"ArbitraryTuplType"],[3,"BitmapHeader"],[3,"GraymapHeader"],[3,"PixmapHeader"],[4,"PNMSubtype"],[4,"SampleEncoding"],[3,"TIFFDecoder"],[3,"Frame"],[3,"VP8Decoder"],[4,"ColorType"],[3,"Luma"],[3,"LumaA"],[3,"Rgb"],[3,"Rgba"],[3,"Bgr"],[3,"Bgra"],[4,"DecodingResult"],[8,"GenericImage"],[8,"GenericImageView"],[8,"ImageDecoder"],[4,"ImageError"],[4,"ImageFormat"],[4,"ImageOutputFormat"],[8,"ConvertBuffer"],[8,"Pixel"],[4,"DynamicImage"],[3,"BiLevel"],[3,"BMPDecoder"],[3,"BMPEncoder"],[3,"HDRAdapter"],[3,"HDRDecoder"],[3,"HDRImageDecoderIterator"],[3,"HDREncoder"],[3,"ICODecoder"],[3,"ICOEncoder"],[3,"JPEGDecoder"],[3,"JPEGEncoder"],[3,"PNMDecoder"],[3,"PNMEncoder"],[3,"PNMHeader"],[3,"TGADecoder"],[3,"WebpDecoder"],[3,"Frames"],[3,"Frame"],[3,"ImageBuffer"],[3,"Pixels"],[3,"MutPixels"],[3,"SubImage"],[6,"GrayImage"]]},\
"inflate":{"doc":"A DEFLATE decoder written in rust.","t":[3,5,5,5,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["InflateWriter","inflate_bytes","inflate_bytes_zlib","inflate_bytes_zlib_no_checksum","DeflateDecoder","DeflateDecoderBuf","InflateStream","new","from_zlib","from_zlib_no_checksum","reset","reset_to_zlib","update","current_checksum","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","read","read","write","flush","new","from_zlib","finish","new","from_zlib","from_zlib_no_checksum","reset","reset_data","get_ref","get_mut","into_inner","total_in","total_out","current_checksum","new","from_zlib","from_zlib_no_checksum","reset","get_ref","get_mut","into_inner","reset_data","total_in","total_out","current_checksum"],"q":["inflate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A DEFLATE decoder.","Decompress the given slice of DEFLATE compressed data.","Decompress the given slice of DEFLATE compressed (with …","Decompress the given slice of DEFLATE compressed (with …","A DEFLATE decoder/decompressor.","A DEFLATE decoder/decompressor.","","Create a new stream for decoding raw deflate encoded data.","Create a new stream for decoding deflate encoded data …","Create a new stream for decoding deflate encoded data …","","","Try to uncompress/decode the data in <code>data</code>.","Returns the calculated checksum value of the currently …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new <code>Deflatedecoderbuf</code> to read from a raw deflate …","Create a new <code>DeflateDecoderbuf</code> that reads from a zlib …","Create a new <code>DeflateDecoderbuf</code> that reads from a zlib …","Resets the decompressor, and replaces the current inner …","Resets the decoder, but continue to read from the same …","Returns a reference to the underlying <code>BufRead</code> instance.","Returns a mutable reference to the underlying <code>BufRead</code> …","Drops the decoder and return the inner <code>BufRead</code> instance.","Returns the total bytes read from the underlying <code>BufRead</code> …","Returns the total number of bytes output from this …","Returns the calculated checksum value of the currently …","Create a new <code>Deflatedecoderbuf</code> to read from a raw deflate …","Create a new <code>DeflateDecoderbuf</code> that reads from a zlib …","Create a new <code>DeflateDecoderbuf</code> that reads from a zlib …","Resets the decompressor, and replaces the current inner …","Returns a reference to the underlying reader.","Returns a mutable reference to the underlying reader.","Returns the total number of bytes output from this …","Resets the decoder, but continue to read from the same …","Returns the total bytes read from the underlying reader.","Returns the total number of bytes output from this …","Returns the calculated checksum value of the currently …"],"i":[0,0,0,0,0,0,0,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,1,1,1,1,1,1,1,3,4,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4],"f":[null,[[],[["string",3],["vec",3],["result",4]]],[[],[["string",3],["vec",3],["result",4]]],[[],[["string",3],["vec",3],["result",4]]],null,null,null,[[],["inflatestream",3]],[[],["inflatestream",3]],[[],["inflatestream",3]],[[]],[[]],[[],[["string",3],["result",4]]],[[],["u32",15]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],[["usize",15],["result",6]]],[[],[["usize",15],["result",6]]],[[],[["usize",15],["result",6]]],[[],["result",6]],[[],["inflatewriter",3]],[[],["inflatewriter",3]],[[],["result",6]],[[],["deflatedecoderbuf",3]],[[],["deflatedecoderbuf",3]],[[],["deflatedecoderbuf",3]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[],["u32",15]],[[],["deflatedecoder",3]],[[],["deflatedecoder",3]],[[],["deflatedecoder",3]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[],["u32",15]]],"p":[[3,"InflateStream"],[3,"InflateWriter"],[3,"DeflateDecoderBuf"],[3,"DeflateDecoder"]]},\
"input":{"doc":"A flexible structure for user interactions to be used in …","tn":["controller","ControllerButton","id","button","new","ControllerHat","id","state","which","new","ControllerAxisArgs","id","axis","position","new","ControllerAxisEvent","from_controller_axis_args","controller_axis","controller_axis_args","keyboard","ModifierKey","NO_MODIFIER","CTRL","SHIFT","ALT","GUI","CTRL_SHIFT","CTRL_ALT","CTRL_GUI","CTRL_SHIFT_ALT","CTRL_SHIFT_GUI","CTRL_SHIFT_ALT_GUI","SHIFT_ALT","SHIFT_GUI","SHIFT_ALT_GUI","ALT_GUI","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","event","Key","Unknown","Backspace","Tab","Return","Escape","Space","Exclaim","Quotedbl","Hash","Dollar","Percent","Ampersand","Quote","LeftParen","RightParen","Asterisk","Plus","Comma","Minus","Period","Slash","D0","D1","D2","D3","D4","D5","D6","D7","D8","D9","Colon","Semicolon","Less","Equals","Greater","Question","At","LeftBracket","Backslash","RightBracket","Caret","Underscore","Backquote","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","Delete","CapsLock","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","PrintScreen","ScrollLock","Pause","Insert","Home","PageUp","End","PageDown","Right","Left","Down","Up","NumLockClear","NumPadDivide","NumPadMultiply","NumPadMinus","NumPadPlus","NumPadEnter","NumPad1","NumPad2","NumPad3","NumPad4","NumPad5","NumPad6","NumPad7","NumPad8","NumPad9","NumPad0","NumPadPeriod","Application","Power","NumPadEquals","F13","F14","F15","F16","F17","F18","F19","F20","F21","F22","F23","F24","Execute","Help","Menu","Select","Stop","Again","Undo","Cut","Copy","Paste","Find","Mute","VolumeUp","VolumeDown","NumPadComma","NumPadEqualsAS400","AltErase","Sysreq","Cancel","Clear","Prior","Return2","Separator","Out","Oper","ClearAgain","CrSel","ExSel","NumPad00","NumPad000","ThousandsSeparator","DecimalSeparator","CurrencyUnit","CurrencySubUnit","NumPadLeftParen","NumPadRightParen","NumPadLeftBrace","NumPadRightBrace","NumPadTab","NumPadBackspace","NumPadA","NumPadB","NumPadC","NumPadD","NumPadE","NumPadF","NumPadXor","NumPadPower","NumPadPercent","NumPadLess","NumPadGreater","NumPadAmpersand","NumPadDblAmpersand","NumPadVerticalBar","NumPadDblVerticalBar","NumPadColon","NumPadHash","NumPadSpace","NumPadAt","NumPadExclam","NumPadMemStore","NumPadMemRecall","NumPadMemClear","NumPadMemAdd","NumPadMemSubtract","NumPadMemMultiply","NumPadMemDivide","NumPadPlusMinus","NumPadClear","NumPadClearEntry","NumPadBinary","NumPadOctal","NumPadDecimal","NumPadHexadecimal","LCtrl","LShift","LAlt","LGui","RCtrl","RShift","RAlt","RGui","Mode","AudioNext","AudioPrev","AudioStop","AudioPlay","AudioMute","MediaSelect","Www","Mail","Calculator","Computer","AcSearch","AcHome","AcBack","AcForward","AcStop","AcRefresh","AcBookmarks","BrightnessDown","BrightnessUp","DisplaySwitch","KbdIllumToggle","KbdIllumDown","KbdIllumUp","Eject","Sleep","code","mouse","MouseButton","Unknown","Left","Right","Middle","X1","X2","Button6","Button7","Button8","MouseCursorEvent","from_xy","mouse_cursor","mouse_cursor_args","MouseRelativeEvent","from_xy","mouse_relative","mouse_relative_args","MouseScrollEvent","from_xy","mouse_scroll","mouse_scroll_args","generic_event","GenericEvent","event_id","with_args","AfterRenderArgs","AfterRenderEvent","from_after_render_args","after_render","after_render_args","CloseArgs","CloseEvent","from_close_args","close","close_args","CursorEvent","from_cursor","cursor","cursor_args","FocusEvent","from_focused","focus","focus_args","IdleArgs","dt","IdleEvent","from_idle_args","from_dt","idle","idle_args","ButtonState","Press","Release","ButtonArgs","state","button","scancode","ButtonEvent","from_button_args","button","button_args","PressEvent","from_button","press","press_args","ReleaseEvent","from_button","release","release_args","ResizeEvent","from_width_height","resize","resize_args","RenderArgs","ext_dt","width","height","draw_width","draw_height","RenderEvent","from_render_args","render","render_args","TextEvent","from_text","text","text_args","Touch","Start","Move","End","Cancel","TouchArgs","device","id","x","y","z","px","py","pz","is_3d","touch","TouchEvent","from_touch_args","touch","touch_args","UpdateArgs","dt","UpdateEvent","from_update_args","from_dt","update","update_args","EventId","0","Button","Keyboard","Mouse","Controller","Hat","Motion","MouseCursor","MouseRelative","MouseScroll","ControllerAxis","Touch","HatState","Centered","Up","Right","Down","Left","RightUp","RightDown","LeftUp","LeftDown","Input","Button","Move","Text","Resize","Focus","Cursor","Close","Loop","Render","AfterRender","Update","Idle","Event","Input","Loop","Custom","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from_controller_axis_args","controller_axis","from_xy","mouse_cursor","from_xy","mouse_relative","from_xy","mouse_scroll","event_id","with_args","from_after_render_args","after_render","from_button_args","button","from_close_args","close","from_cursor","cursor","from_focused","focus","from_idle_args","idle","from_render_args","render","from_width_height","resize","from_text","text","from_touch_args","touch","from_update_args","update","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","extend","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","cmp","cmp","cmp","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","eq","eq","ne","eq","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","partial_cmp","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","sub","sub_assign","not","bitand","bitor","bitxor","bitand_assign","bitor_assign","bitxor_assign","hash","hash","hash","hash","hash","hash","hash","hash","hash","from_iter","fmt","fmt","fmt","fmt","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","after_render_args","button_args","press_args","release_args","close_args","cursor_args","focus_args","from_dt","idle_args","viewport","render_args","resize_args","text_args","new","new_3d","position","position_3d","pressure","pressure_3d","touch_args","from_dt","update_args"],"q":["input","input::controller","","","","","","","","","","","","","","","","","","input","input::keyboardinput","input::mouse","","","","","","","","","","","","","","","","","","","","","","input","input::generic_event","","","input","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","input::controller","","","","","","","","","","","","","","","","","","","","","","","","","","","input::keyboard","","","","","","","","","","","","","","","","","","input::mouse","","","","","","","","","inputinput::keyboard","input::mouse","input","","","","","","","","","","","","","","","","","","","","","","input::keyboard","input::controller","","","input::keyboard","","input::mouse","input","","","","","","","","","","","","","","","","input::keyboard","","","input::mouse","input::controller","","","","","","input::keyboard","","","input::mouse","input","","","","","","","","","","","","","","","","","","","","","","","","","","input::keyboard","","input::mouse","input::controller","","","input::keyboard","","input::mouse","input","","","","","","","","","","","","","","","","input::keyboard","","","","","","","","","input::controller","","input::keyboard","","input::mouse","input","","","","input::keyboard","","","","","input::controller","","","input::keyboard","","input::mouse","input","","","","","","","","","","","","","","input::controller","","","input::keyboard","","input::mouse","input","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Back-end agnostic controller events.","Components of a controller button event. Not guaranteed …","Which controller was the button on.","Which button was pressed.","Create a new ControllerButton object. Intended for use by …","Components of a controller hat move event (d-Pad).","Which Controller was the button on.","Which button was pressed.","Which hat on the controller was changed","Create a new ControllerButton object. Intended for use by …","Components of a controller axis move event. Not …","Which controller moved.","The axis that moved.","Position of the controller. Usually [-1.0, 1.0], though …","Create a new ControllerAxisArgs object. Intended for use …","The position of a controller axis changed.","Creates a controller axis event.","Calls closure if this is a controller axis event.","Returns controller axis arguments.","Back-end agnostic keyboard keys.","","No modifier.","Ctrl.","Shift.","Alt.","Gui.","Ctrl + Shift.","Ctrl + Alt.","Ctrl + Gui.","Ctrl + Shift + Alt.","Ctrl + Shift + Gui.","Ctrl + Shift + Alt + Gui.","Shift + Alt.","Shift + Gui.","Shift + Alt + Gui.","Alt + Gui.","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Change modifier key state depending on input.","Represent a keyboard key. Keycodes follows SDL …eturns an id of the key","Back-end agnostic mouse buttons.","Represent a mouse button.","Unknown mouse button.","Left mouse button.","Right mouse button.","Middle mouse button.","Extra mouse button number 1.","Extra mouse button number 2.","Mouse button number 6.","Mouse button number 7.","Mouse button number 8.","The position of the mouse cursor","Creates a mouse cursor event.","Calls closure if this is a mouse cursor event.","Returns mouse cursor arguments.","The relative movement of mouse cursor","Creates a mouse relative event.","Calls closure if this is a mouse relative event.","Returns mouse relative arguments.","The scroll of the mouse wheel","Creates a mouse scroll event.","Calls a closure if this is a mouse scroll event.","Returns mouse scroll arguments.","Trait for generic events","Implemented by all events","The id of this event.","Calls closure with arguments","After render arguments.","After rendering and buffers are swapped.","Creates an after render event.","Calls closure if this is an after render event.","Returns after render arguments.","Close arguments.","Window is closing.","Creates a close event from arguments.","Calls closure if this is a close event.","Returns close arguments.","When window gets or loses cursor","Creates a cursor event.","Calls closure if this is a cursor event.","Returns cursor arguments.","When window gets or loses focus","Creates a focus event.","Calls closure if this is a focus event.","Returns focus arguments.","Idle arguments, such as expected idle time in seconds.","Expected idle time in seconds.","When background tasks should be performed","Creates an idle event.","Creates an update event with delta time.","Calls closure if this is an idle event.","Returns idle arguments.","Stores button state.","Button was pressed.","Button was released.","Button arguments","New state of the button.","The button that changed state.","An optional scancode that tells the physical layout of a …","Changed button state.","Creates a button event.","Calls closure if this is a button event.","Returns button arguments.","The press of a button","Creates a press event.","Calls closure if this is a press event.","Returns press arguments.","The release of a button","Creates a release event.","Calls closure if this is a release event.","Returns release arguments.","When the window is resized","Creates a resize event.","Calls closure if this is a resize event.","Returns resize arguments.","Render arguments","Extrapolated time in seconds, used to do smooth animation.","The width of rendered area in points.","The height of rendered area in points.","The width of rendered area in pixels.","The height of rendered area in pixels.","When the next frame should be rendered","Creates a render event.","Calls closure if this is a render event.","Returns render arguments.","When receiving text from user, such as typing a character","Creates a text event.","Calls closure if this is a text event.","Returns text arguments.","Stores the touch state.","The start of touch, for example a finger pressed down on …","The move of touch, for example a finger moving while …","The end of touch, for example taking a finger away from a …","The cancel of touch, for example the window loses focus.","Touch arguments","A unique identifier for touch device.","A unique identifier for touch event.","The x coordinate of the touch position, normalized 0..1.","The y coordinate of the touch position, normalized 0..1.","The z coordinate of the touch position, normalized 0..1.","The x coordinate of the touch pressure direction.","The y coordinate of the touch pressure direction.","The z coordinate of the touch pressure direction.","Whether the touch is in 3D.","The touch state.","When a touch is started, moved, ended or cancelled.","Creates a touch event.","Calls closure if this is a touch event.","Returns touch arguments.","Update arguments, such as delta time in seconds","Delta time in seconds.","When the application state should be updated","Creates an update event.","Creates an update event with delta time.","Calls closure if this is an update event.","Returns update arguments.","Used to identify events arguments provided by traits.","","Models different kinds of buttons.","A keyboard button.","A mouse button.","A controller button.","A controller hat (d-Pad)","Models different kinds of motion.","x and y in window coordinates.","x and y in relative coordinates.","x and y in scroll ticks.","controller axis move event.","touch event.","","","","","","","","","","","Models input events.","Changed button state.","Moved mouse cursor.","Text (usually from keyboard).","Window got resized.","Window gained or lost focus.","Window gained or lost cursor.","Window closed.","Models loop events.","Render graphics.","After rendering and swapping buffers.","Update the state of the application.","Do background tasks that can be done incrementally.","Models all events.","Input events.","Events that commonly used by event loops.","Custom eventeturns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the complement of this set of flags.","Returns the intersection between the two sets of flags.","Returns the union of the two sets of flags.","Returns the left flags, but with all the right flags …","Disables all flags disabled in the set.","Adds the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns after render arguments.","Returns button arguments.","Returns press arguments.","Returns release arguments.","Returns close arguments.","Returns cursor arguments.","Returns focus arguments.","Creates an update event with delta time.","Returns idle arguments.","Returns viewport information filling entire render area.","Returns render arguments.","Returns resize arguments.","Returns text arguments.","Creates arguments for 2D touch.","Creates arguments for 3D touch.","The position of the touch in 2D.","The position of the touch in 3D.","The pressure magnitude, normalized 0..1.","The pressure vector in 3D.","Returns touch arguments.","Creates an update event with delta time.","Returns update arguments."],"i":[0,0,1,1,1,0,2,2,2,2,0,3,3,3,3,0,4,4,4,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,7,7,7,7,7,7,7,7,7,0,8,8,8,0,9,9,9,0,10,10,10,0,0,11,11,0,0,12,12,12,0,0,13,13,13,0,14,14,14,0,15,15,15,0,16,0,17,17,17,17,0,18,18,0,19,19,19,0,20,20,20,0,21,21,21,0,22,22,22,0,23,23,23,0,24,24,24,24,24,0,25,25,25,0,26,26,26,0,27,27,27,27,0,28,28,28,28,28,28,28,28,28,28,0,29,29,29,0,30,0,31,31,31,31,0,32,0,33,33,33,33,0,34,34,34,34,34,0,35,35,35,35,35,35,35,35,35,0,36,36,36,36,36,36,36,0,37,37,37,37,0,38,38,38,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,39,39,39,39,39,39,39,39,39,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,40,40,40,40,40,40,40,40,40,16,16,16,16,16,16,16,16,16,24,24,24,24,24,24,24,24,24,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,30,30,30,30,30,30,30,30,30,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,6,7,33,33,33,36,34,36,34,36,36,37,38,37,38,37,38,37,38,36,38,38,38,38,5,1,2,3,5,6,7,39,18,19,40,16,24,27,28,30,32,33,34,35,36,37,38,5,5,6,7,1,1,2,2,3,3,5,5,6,7,39,18,19,19,40,16,16,24,24,27,28,28,30,30,32,32,33,33,34,34,35,36,36,37,37,38,5,6,7,1,2,3,5,6,7,39,18,19,40,16,24,27,28,30,32,33,34,35,36,37,38,5,5,5,5,5,5,5,5,5,1,2,5,6,7,18,19,33,35,5,5,5,5,5,1,2,3,5,6,7,39,18,19,40,16,24,27,28,30,33,34,35,36,37,1,2,3,5,6,7,39,18,19,40,16,24,27,28,30,33,34,35,36,37,12,20,21,22,13,14,15,17,17,24,25,23,26,28,28,28,28,28,28,29,31,31],"f":[null,null,null,null,[[["u8",15],["i32",15]]],null,null,null,null,[[["u8",15],["hatstate",4],["i32",15]]],null,null,null,null,[[["u8",15],["f64",15],["i32",15]]],null,[[["controlleraxisargs",3]],["option",4]],[[],["option",4]],[[],[["controlleraxisargs",3],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["modifierkey",3]],[[],["modifierkey",3]],[[],["u8",15]],[[["u8",15]],[["option",4],["modifierkey",3]]],[[["u8",15]],["modifierkey",3]],[[["u8",15]],["modifierkey",3]],[[],["bool",15]],[[],["bool",15]],[[["modifierkey",3]],["bool",15]],[[["modifierkey",3]],["bool",15]],[[["modifierkey",3]]],[[["modifierkey",3]]],[[["modifierkey",3]]],[[["bool",15],["modifierkey",3]]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["i32",15]],null,null,null,null,null,null,null,null,null,null,null,null,[[["f64",15]],["option",4]],[[],["option",4]],[[],["option",4]],null,[[["f64",15]],["option",4]],[[],["option",4]],[[],["option",4]],null,[[["f64",15]],["option",4]],[[],["option",4]],[[],["option",4]],null,null,[[],["eventid",3]],[[]],null,null,[[["afterrenderargs",3]],["option",4]],[[],["option",4]],[[],[["afterrenderargs",3],["option",4]]],null,null,[[["closeargs",3]],["option",4]],[[],["option",4]],[[],[["option",4],["closeargs",3]]],null,[[["bool",15]],["option",4]],[[],["option",4]],[[],[["bool",15],["option",4]]],null,[[["bool",15]],["option",4]],[[],["option",4]],[[],[["bool",15],["option",4]]],null,null,null,[[["idleargs",3]],["option",4]],[[["f64",15]],["option",4]],[[],["option",4]],[[],[["option",4],["idleargs",3]]],null,null,null,null,null,null,null,null,[[["buttonargs",3]],["option",4]],[[],["option",4]],[[],[["option",4],["buttonargs",3]]],null,[[["button",4]],["option",4]],[[],["option",4]],[[],[["option",4],["button",4]]],null,[[["button",4]],["option",4]],[[],["option",4]],[[],[["option",4],["button",4]]],null,[[["f64",15]],["option",4]],[[],["option",4]],[[],["option",4]],null,null,null,null,null,null,null,[[["renderargs",3]],["option",4]],[[],["option",4]],[[],[["renderargs",3],["option",4]]],null,[[["str",15]],["option",4]],[[],["option",4]],[[],[["option",4],["string",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["touchargs",3]],["option",4]],[[],["option",4]],[[],[["touchargs",3],["option",4]]],null,null,null,[[["updateargs",3]],["option",4]],[[["f64",15]],["option",4]],[[],["option",4]],[[],[["updateargs",3],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["controlleraxisargs",3]],["option",4]],[[],["option",4]],[[["f64",15]],["option",4]],[[],["option",4]],[[["f64",15]],["option",4]],[[],["option",4]],[[["f64",15]],["option",4]],[[],["option",4]],[[],["eventid",3]],[[]],[[["afterrenderargs",3]],["option",4]],[[],["option",4]],[[["buttonargs",3]],["option",4]],[[],["option",4]],[[["closeargs",3]],["option",4]],[[],["option",4]],[[["bool",15]],["option",4]],[[],["option",4]],[[["bool",15]],["option",4]],[[],["option",4]],[[["idleargs",3]],["option",4]],[[],["option",4]],[[["renderargs",3]],["option",4]],[[],["option",4]],[[["f64",15]],["option",4]],[[],["option",4]],[[["str",15]],["option",4]],[[],["option",4]],[[["touchargs",3]],["option",4]],[[],["option",4]],[[["updateargs",3]],["option",4]],[[],["option",4]],[[["u32",15]],["key",4]],[[["u32",15]],["mousebutton",4]],[[["key",4]]],[[["mousebutton",4]]],[[["controllerbutton",3]]],[[["buttonargs",3]]],[[["controlleraxisargs",3]]],[[["controlleraxisargs",3]]],[[["touchargs",3]]],[[["touchargs",3]]],[[["motion",4]]],[[["renderargs",3]]],[[["renderargs",3]]],[[["afterrenderargs",3]]],[[["afterrenderargs",3]]],[[["updateargs",3]]],[[["updateargs",3]]],[[["idleargs",3]]],[[["idleargs",3]]],[[["closeargs",3]]],[[]],[[["loop",4]]],[[],[["option",4],["input",4]]],[[],[["loop",4],["option",4]]],[[["intoiterator",8]]],[[],["controllerbutton",3]],[[],["controllerhat",3]],[[],["controlleraxisargs",3]],[[],["modifierkey",3]],[[],["key",4]],[[],["mousebutton",4]],[[],["afterrenderargs",3]],[[],["buttonstate",4]],[[],["buttonargs",3]],[[],["closeargs",3]],[[],["idleargs",3]],[[],["renderargs",3]],[[],["touch",4]],[[],["touchargs",3]],[[],["updateargs",3]],[[],["eventid",3]],[[],["button",4]],[[],["motion",4]],[[],["hatstate",4]],[[],["input",4]],[[],["loop",4]],[[],["event",4]],[[],["modifierkey",3]],[[["modifierkey",3]],["ordering",4]],[[["key",4]],["ordering",4]],[[["mousebutton",4]],["ordering",4]],[[["controllerbutton",3]],["bool",15]],[[["controllerbutton",3]],["bool",15]],[[["controllerhat",3]],["bool",15]],[[["controllerhat",3]],["bool",15]],[[["controlleraxisargs",3]],["bool",15]],[[["controlleraxisargs",3]],["bool",15]],[[["modifierkey",3]],["bool",15]],[[["modifierkey",3]],["bool",15]],[[["key",4]],["bool",15]],[[["mousebutton",4]],["bool",15]],[[["afterrenderargs",3]],["bool",15]],[[["buttonstate",4]],["bool",15]],[[["buttonargs",3]],["bool",15]],[[["buttonargs",3]],["bool",15]],[[["closeargs",3]],["bool",15]],[[["idleargs",3]],["bool",15]],[[["idleargs",3]],["bool",15]],[[["renderargs",3]],["bool",15]],[[["renderargs",3]],["bool",15]],[[["touch",4]],["bool",15]],[[["touchargs",3]],["bool",15]],[[["touchargs",3]],["bool",15]],[[["updateargs",3]],["bool",15]],[[["updateargs",3]],["bool",15]],[[["eventid",3]],["bool",15]],[[["eventid",3]],["bool",15]],[[["button",4]],["bool",15]],[[["button",4]],["bool",15]],[[["motion",4]],["bool",15]],[[["motion",4]],["bool",15]],[[["hatstate",4]],["bool",15]],[[["input",4]],["bool",15]],[[["input",4]],["bool",15]],[[["loop",4]],["bool",15]],[[["loop",4]],["bool",15]],[[["event",4]],["bool",15]],[[["modifierkey",3]],[["ordering",4],["option",4]]],[[["key",4]],[["ordering",4],["option",4]]],[[["mousebutton",4]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["modifierkey",3]],["modifierkey",3]],[[["modifierkey",3]]],[[],["modifierkey",3]],[[["modifierkey",3]],["modifierkey",3]],[[["modifierkey",3]],["modifierkey",3]],[[["modifierkey",3]],["modifierkey",3]],[[["modifierkey",3]]],[[["modifierkey",3]]],[[["modifierkey",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intoiterator",8]],["modifierkey",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["afterrenderargs",3],["option",4]]],[[],[["option",4],["buttonargs",3]]],[[],[["option",4],["button",4]]],[[],[["option",4],["button",4]]],[[],[["option",4],["closeargs",3]]],[[],[["bool",15],["option",4]]],[[],[["bool",15],["option",4]]],[[["f64",15]],["option",4]],[[],[["option",4],["idleargs",3]]],[[],["viewport",3]],[[],[["renderargs",3],["option",4]]],[[],["option",4]],[[],[["option",4],["string",3]]],[[["i64",15],["f64",15],["touch",4]],["touchargs",3]],[[["i64",15],["touch",4]],["touchargs",3]],[[]],[[]],[[],["f64",15]],[[]],[[],[["touchargs",3],["option",4]]],[[["f64",15]],["option",4]],[[],[["updateargs",3],["option",4]]]],"p":[[3,"ControllerButton"],[3,"ControllerHat"],[3,"ControllerAxisArgs"],[8,"ControllerAxisEvent"],[3,"ModifierKey"],[4,"Key"],[4,"MouseButton"],[8,"MouseCursorEvent"],[8,"MouseRelativeEvent"],[8,"MouseScrollEvent"],[8,"GenericEvent"],[8,"AfterRenderEvent"],[8,"CloseEvent"],[8,"CursorEvent"],[8,"FocusEvent"],[3,"IdleArgs"],[8,"IdleEvent"],[4,"ButtonState"],[3,"ButtonArgs"],[8,"ButtonEvent"],[8,"PressEvent"],[8,"ReleaseEvent"],[8,"ResizeEvent"],[3,"RenderArgs"],[8,"RenderEvent"],[8,"TextEvent"],[4,"Touch"],[3,"TouchArgs"],[8,"TouchEvent"],[3,"UpdateArgs"],[8,"UpdateEvent"],[3,"EventId"],[4,"Button"],[4,"Motion"],[4,"HatState"],[4,"Input"],[4,"Loop"],[4,"Event"],[3,"AfterRenderArgs"],[3,"CloseArgs"]]},\
"interpolation":{"doc":"Interpolation algorithms.","t":[8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,8,16,10,10,10,5,5,5,11,11,11,11,11,11,11,11,11,11,11],"n":["Ease","calc","quadratic_in","quadratic_out","quadratic_in_out","cubic_in","cubic_out","cubic_in_out","quartic_in","quartic_out","quartic_in_out","quintic_in","quintic_out","quintic_in_out","sine_in","sine_out","sine_in_out","circular_in","circular_out","circular_in_out","exponential_in","exponential_out","exponential_in_out","elastic_in","elastic_out","elastic_in_out","back_in","back_out","back_in_out","bounce_in","bounce_out","bounce_in_out","EaseFunction","QuadraticIn","QuadraticOut","QuadraticInOut","CubicIn","CubicOut","CubicInOut","QuarticIn","QuarticOut","QuarticInOut","QuinticIn","QuinticOut","QuinticInOut","SineIn","SineOut","SineInOut","CircularIn","CircularOut","CircularInOut","ExponentialIn","ExponentialOut","ExponentialInOut","ElasticIn","ElasticOut","ElasticInOut","BackIn","BackOut","BackInOut","BounceIn","BounceOut","BounceInOut","Spatial","Scalar","add","sub","scale","lerp","quad_bez","cub_bez","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","clone","eq"],"q":["interpolation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Calculate the eased value, normalized","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Used for interpolation over spatial structures.","The scalar type.","Add","Subtract","Scales with a scalar.","Performs linear interpolation. A linear interpolation …","Performs quadratic beziér interpolation. This is done by …","Performs cubic beziér interpolation. This is done by …","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,3,3,0,0,0,2,2,2,2,2,2,2,2,2,2,2],"f":[null,[[["easefunction",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[],["spatial",8]],[[],["spatial",8]],[[],["spatial",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["easefunction",4]],[[["easefunction",4]],["bool",15]]],"p":[[8,"Ease"],[4,"EaseFunction"],[8,"Spatial"]]},\
"jpeg_decoder":{"doc":"This crate contains a JPEG decoder.","t":[3,3,12,12,12,4,13,13,13,4,13,13,13,13,4,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Decoder","ImageInfo","width","height","pixel_format","PixelFormat","L8","RGB24","CMYK32","Error","Format","Unsupported","Io","Internal","UnsupportedFeature","Hierarchical","Lossless","ArithmeticEntropyCoding","SamplePrecision","ComponentCount","DNL","SubsamplingRatio","NonIntegerSubsamplingRatio","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","clone","clone","eq","eq","ne","fmt","fmt","fmt","fmt","fmt","description","cause","new","info","read_info","scale","decode"],"q":["jpeg_decoder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["JPEG decoder","Represents metadata of an image.","The width of the image, in pixels.","The height of the image, in pixels.","The pixel format of the image.","An enumeration over combinations of color spaces and bit …","Luminance (grayscale), 8 bits","RGB, 8 bits per channel","CMYK, 8 bits per channel","Errors that can occur while decoding a JPEG image.","The image is not formatted properly. The string contains …","The image makes use of a JPEG feature not (currently) …","An I/O error occurred while decoding the image.","An internal error occurred while decoding the image.","An enumeration over JPEG features (currently) unsupported …","Hierarchical JPEG.","Lossless JPEG.","JPEG using arithmetic entropy coding instead of Huffman …","Sample precision in bits. 8 bit sample precision is what …","Number of components in an image. 1, 3 and 4 components …","An image can specify a zero height in the frame header …","Subsampling ratio.","A subsampling ratio not representable as an integer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Decoder</code> using the reader <code>reader</code>.","Returns metadata about the image.","Tries to read metadata from the image without decoding it.","Configure the decoder to scale the image during decoding.","Decodes the image and returns the decoded pixels if …"],"i":[0,0,1,1,1,0,2,2,2,0,3,3,3,3,0,4,4,4,4,4,4,4,4,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,5,5,5,5,5,5,5,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,2,1,2,1,1,2,1,4,3,3,3,3,5,5,5,5,5],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["ioerror",3]],["error",4]],[[],["pixelformat",4]],[[],["imageinfo",3]],[[["pixelformat",4]],["bool",15]],[[["imageinfo",3]],["bool",15]],[[["imageinfo",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["str",15]],[[],[["option",4],["stderror",8]]],[[],["decoder",3]],[[],[["imageinfo",3],["option",4]]],[[],[["result",4],["error",4]]],[[["u16",15]],[["result",4],["error",4]]],[[],[["result",4],["vec",3],["error",4]]]],"p":[[3,"ImageInfo"],[4,"PixelFormat"],[4,"Error"],[4,"UnsupportedFeature"],[3,"Decoder"]]},\
"lazy_static":{"doc":"A macro for declaring lazily evaluated statics.","t":[8,5,14],"n":["LazyStatic","initialize","lazy_static"],"q":["lazy_static","",""],"d":["Support trait for enabling a few common operation on lazy …","Takes a shared reference to a lazy static and initializes …",""],"i":[0,0,0],"f":[null,[[]],null],"p":[]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms’ system libraries","tn":["isalnum","isalpha","iscntrl","isdigit","isgraph","islower","isprint","ispunct","isspace","isupper","isxdigit","isblank","tolower","toupper","fopen","freopen","fflush","fclose","remove","rename","tmpfile","setvbuf","setbuf","getchar","putchar","fgetc","fgets","fputc","fputs","puts","ungetc","fread","fwrite","fseek","ftell","rewind","fgetpos","fsetpos","feof","ferror","perror","atoi","strtod","strtol","strtoul","calloc","malloc","realloc","free","abort","exit","_exit","atexit","system","getenv","strcpy","strncpy","strcat","strncat","strcmp","strncmp","strcoll","strchr","strrchr","strspn","strcspn","strdup","strpbrk","strstr","strcasecmp","strncasecmp","strlen","strnlen","strerror","strtok","strxfrm","wcslen","wcstombs","memchr","memcmp","memcpy","memmove","memset","getpwnam","getpwuid","fprintf","printf","snprintf","sprintf","fscanf","scanf","sscanf","getchar_unlocked","putchar_unlocked","socket","connect","listen","accept","getpeername","getsockname","setsockopt","socketpair","sendto","shutdown","chmod","fchmod","fstat","mkdir","stat","pclose","fdopen","fileno","open","creat","fcntl","opendir","readdir","closedir","rewinddir","fchmodat","fchown","fchownat","fstatat","linkat","renameat","symlinkat","unlinkat","access","alarm","chdir","fchdir","chown","lchown","close","dup","dup2","execl","execle","execlp","execv","execve","execvp","fork","fpathconf","getcwd","getegid","geteuid","getgid","getgroups","getlogin","getopt","getpgid","getpgrp","getpid","getppid","getuid","isatty","link","lseek","pathconf","pipe","posix_memalign","read","rmdir","seteuid","setegid","setgid","setpgid","setsid","setuid","sleep","nanosleep","tcgetpgrp","tcsetpgrp","ttyname","ttyname_r","unlink","wait","waitpid","write","pread","pwrite","umask","utime","kill","killpg","mlock","munlock","mlockall","munlockall","mmap","munmap","if_nametoindex","if_indextoname","lstat","fsync","setenv","unsetenv","symlink","ftruncate","signal","getrusage","realpath","flock","times","pthread_self","pthread_join","pthread_exit","pthread_attr_init","pthread_attr_destroy","pthread_attr_setstacksize","pthread_attr_setdetachstate","pthread_detach","sched_yield","pthread_key_create","pthread_key_delete","pthread_getspecific","pthread_setspecific","pthread_mutex_init","pthread_mutex_destroy","pthread_mutex_lock","pthread_mutex_trylock","pthread_mutex_unlock","pthread_mutexattr_init","pthread_mutexattr_destroy","pthread_mutexattr_settype","pthread_cond_init","pthread_cond_wait","pthread_cond_timedwait","pthread_cond_signal","pthread_cond_broadcast","pthread_cond_destroy","pthread_condattr_init","pthread_condattr_destroy","pthread_rwlock_init","pthread_rwlock_destroy","pthread_rwlock_rdlock","pthread_rwlock_tryrdlock","pthread_rwlock_wrlock","pthread_rwlock_trywrlock","pthread_rwlock_unlock","pthread_rwlockattr_init","pthread_rwlockattr_destroy","getsockopt","raise","sigaction","utimes","dlopen","dlerror","dlsym","dlclose","dladdr","getaddrinfo","freeaddrinfo","gai_strerror","res_init","gmtime_r","localtime_r","mktime","time","gmtime","localtime","difftime","mknod","gethostname","getservbyname","getprotobyname","getprotobynumber","chroot","usleep","send","recv","putenv","poll","select","setlocale","localeconv","sem_wait","sem_trywait","sem_post","statvfs","fstatvfs","readlink","sigemptyset","sigaddset","sigfillset","sigdelset","sigismember","sigprocmask","sigpending","timegm","sysconf","mkfifo","pselect","fseeko","ftello","tcdrain","cfgetispeed","cfgetospeed","cfsetispeed","cfsetospeed","tcgetattr","tcsetattr","tcflow","tcflush","tcgetsid","tcsendbreak","mkstemp","mkdtemp","tmpnam","openlog","closelog","setlogmask","syslog","nice","grantpt","posix_openpt","ptsname","unlockpt","strcasestr","getline","getsid","truncate","pause","readlinkat","mkdirat","openat","fdopendir","readdir_r","cfmakeraw","cfsetspeed","sem_destroy","sem_init","fdatasync","mincore","clock_getres","clock_gettime","clock_settime","dirfd","pthread_getattr_np","pthread_attr_getstack","memalign","setgroups","pipe2","statfs","statfs64","fstatfs","fstatfs64","statvfs64","fstatvfs64","memrchr","posix_fadvise","futimens","utimensat","duplocale","freelocale","newlocale","uselocale","creat64","fstat64","fstatat64","ftruncate64","lseek64","lstat64","mmap64","open64","openat64","pread64","preadv64","pwrite64","pwritev64","readdir64","readdir64_r","stat64","truncate64","mknodat","pthread_condattr_getclock","pthread_condattr_setclock","pthread_condattr_setpshared","accept4","pthread_mutexattr_setpshared","pthread_rwlockattr_getpshared","pthread_rwlockattr_setpshared","ptsname_r","clearenv","waitid","setreuid","setregid","getresuid","getresgid","acct","brk","sbrk","vfork","setresgid","setresuid","wait4","openpty","forkpty","login_tty","execvpe","fexecve","getifaddrs","freeifaddrs","bind","writev","readv","sendmsg","recvmsg","uname","strerror_r","abs","atof","labs","rand","srand","aio_read","aio_write","aio_fsync","aio_error","aio_return","aio_suspend","aio_cancel","lio_listio","lutimes","setpwent","endpwent","getpwent","setgrent","endgrent","getgrent","setspent","endspent","getspent","getspnam","shm_open","shmget","shmat","shmdt","shmctl","ftok","semget","semop","semctl","msgctl","msgget","msgrcv","msgsnd","mprotect","__errno_location","fopen64","freopen64","tmpfile64","fgetpos64","fsetpos64","fseeko64","ftello64","fallocate","fallocate64","posix_fallocate","posix_fallocate64","readahead","getxattr","lgetxattr","fgetxattr","setxattr","lsetxattr","fsetxattr","listxattr","llistxattr","flistxattr","removexattr","lremovexattr","fremovexattr","signalfd","timerfd_create","timerfd_gettime","timerfd_settime","pwritev","preadv","quotactl","mq_open","mq_close","mq_unlink","mq_receive","mq_timedreceive","mq_send","mq_timedsend","mq_getattr","mq_setattr","epoll_pwait","dup3","mkostemp","mkostemps","sigtimedwait","sigwaitinfo","nl_langinfo_l","getnameinfo","pthread_setschedprio","getloadavg","process_vm_readv","process_vm_writev","reboot","setfsgid","setfsuid","mkfifoat","if_nameindex","if_freenameindex","sync_file_range","mremap","glob","globfree","posix_madvise","shm_unlink","seekdir","telldir","madvise","msync","remap_file_pages","recvfrom","mkstemps","futimes","nl_langinfo","getdomainname","setdomainname","vhangup","sync","syscall","sched_getaffinity","sched_setaffinity","epoll_create","epoll_create1","epoll_wait","epoll_ctl","pthread_getschedparam","unshare","umount","sched_get_priority_max","tee","settimeofday","splice","eventfd","sched_rr_get_interval","sem_timedwait","sem_getvalue","sched_setparam","setns","swapoff","vmsplice","mount","personality","prctl","sched_getparam","ppoll","pthread_mutex_timedlock","clone","sched_getscheduler","clock_nanosleep","pthread_attr_getguardsize","sethostname","sched_get_priority_min","pthread_condattr_getpshared","sysinfo","umount2","pthread_setschedparam","swapon","sched_setscheduler","sendfile","sigsuspend","getgrgid_r","sigaltstack","sem_close","getdtablesize","getgrnam_r","initgroups","pthread_sigmask","sem_open","getgrnam","pthread_cancel","pthread_kill","sem_unlink","daemon","getpwnam_r","getpwuid_r","sigwait","pthread_atfork","getgrgid","getgrouplist","pthread_mutexattr_getpshared","popen","faccessat","pthread_create","dl_iterate_phdr","setmntent","getmntent","addmntent","endmntent","hasmntopt","posix_spawn","posix_spawnp","posix_spawnattr_init","posix_spawnattr_destroy","posix_spawnattr_getsigdefault","posix_spawnattr_setsigdefault","posix_spawnattr_getsigmask","posix_spawnattr_setsigmask","posix_spawnattr_getflags","posix_spawnattr_setflags","posix_spawnattr_getpgroup","posix_spawnattr_setpgroup","posix_spawnattr_getschedpolicy","posix_spawnattr_setschedpolicy","posix_spawnattr_getschedparam","posix_spawnattr_setschedparam","posix_spawn_file_actions_init","posix_spawn_file_actions_destroy","posix_spawn_file_actions_addopen","posix_spawn_file_actions_addclose","posix_spawn_file_actions_adddup2","fread_unlocked","inotify_rm_watch","inotify_init","inotify_init1","inotify_add_watch","sendmmsg","recvmmsg","getrlimit64","setrlimit64","getrlimit","setrlimit","prlimit","prlimit64","utmpname","utmpxname","getutxent","getutxid","getutxline","pututxline","setutxent","endutxent","getpt","mallopt","gettimeofday","statx","getrandom","ioctl","backtrace","glob64","globfree64","ptrace","pthread_attr_getaffinity_np","pthread_attr_setaffinity_np","getpriority","setpriority","pthread_getaffinity_np","pthread_setaffinity_np","pthread_rwlockattr_getkind_np","pthread_rwlockattr_setkind_np","sched_getcpu","mallinfo","malloc_usable_size","getauxval","getpwent_r","getgrent_r","pthread_getname_np","pthread_setname_np","getcontext","setcontext","makecontext","swapcontext","iopl","ioperm","sysctl","int8_t","int16_t","int32_t","int64_t","uint8_t","uint16_t","uint32_t","uint64_t","c_schar","c_uchar","c_short","c_ushort","c_int","c_uint","c_float","c_double","c_longlong","c_ulonglong","intmax_t","uintmax_t","size_t","ptrdiff_t","intptr_t","uintptr_t","ssize_t","pid_t","uid_t","gid_t","in_addr_t","in_port_t","sighandler_t","cc_t","DIR","locale_t","group","gr_name","gr_passwd","gr_gid","gr_mem","utimbuf","actime","modtime","timeval","tv_sec","tv_usec","timespec","tv_sec","tv_nsec","rlimit","rlim_cur","rlim_max","rusage","ru_utime","ru_stime","ru_maxrss","ru_ixrss","ru_idrss","ru_isrss","ru_minflt","ru_majflt","ru_nswap","ru_inblock","ru_oublock","ru_msgsnd","ru_msgrcv","ru_nsignals","ru_nvcsw","ru_nivcsw","ipv6_mreq","ipv6mr_multiaddr","ipv6mr_interface","hostent","h_name","h_aliases","h_addrtype","h_length","h_addr_list","iovec","iov_base","iov_len","pollfd","fd","events","revents","winsize","ws_row","ws_col","ws_xpixel","ws_ypixel","linger","l_onoff","l_linger","sigval","sival_ptr","itimerval","it_interval","it_value","tms","tms_utime","tms_stime","tms_cutime","tms_cstime","servent","s_name","s_aliases","s_port","s_proto","protoent","p_name","p_aliases","p_proto","INT_MIN","INT_MAX","SIG_DFL","SIG_IGN","SIG_ERR","DT_UNKNOWN","DT_FIFO","DT_CHR","DT_DIR","DT_BLK","DT_REG","DT_LNK","DT_SOCK","FD_CLOEXEC","USRQUOTA","GRPQUOTA","SIGIOT","S_ISUID","S_ISGID","S_ISVTX","IF_NAMESIZE","IFNAMSIZ","LOG_EMERG","LOG_ALERT","LOG_CRIT","LOG_ERR","LOG_WARNING","LOG_NOTICE","LOG_INFO","LOG_DEBUG","LOG_KERN","LOG_USER","LOG_MAIL","LOG_DAEMON","LOG_AUTH","LOG_SYSLOG","LOG_LPR","LOG_NEWS","LOG_UUCP","LOG_LOCAL0","LOG_LOCAL1","LOG_LOCAL2","LOG_LOCAL3","LOG_LOCAL4","LOG_LOCAL5","LOG_LOCAL6","LOG_LOCAL7","LOG_PID","LOG_CONS","LOG_ODELAY","LOG_NDELAY","LOG_NOWAIT","LOG_PRIMASK","LOG_FACMASK","PRIO_PROCESS","PRIO_PGRP","PRIO_USER","PRIO_MIN","PRIO_MAX","IPPROTO_ICMP","IPPROTO_ICMPV6","IPPROTO_TCP","IPPROTO_UDP","IPPROTO_IP","IPPROTO_IPV6","INADDR_LOOPBACK","INADDR_ANY","INADDR_BROADCAST","INADDR_NONE","ARPOP_REQUEST","ARPOP_REPLY","ATF_COM","ATF_PERM","ATF_PUBL","ATF_USETRAILERS","FILE","fpos_t","sa_family_t","speed_t","tcflag_t","clockid_t","key_t","id_t","timezone","in_addr","s_addr","ip_mreq","imr_multiaddr","imr_interface","ip_mreq_source","imr_multiaddr","imr_interface","imr_sourceaddr","sockaddr","sa_family","sa_data","sockaddr_in","sin_family","sin_port","sin_addr","sin_zero","sockaddr_in6","sin6_family","sin6_port","sin6_flowinfo","sin6_addr","sin6_scope_id","addrinfo","ai_flags","ai_family","ai_socktype","ai_protocol","ai_addrlen","ai_addr","ai_canonname","ai_next","sockaddr_ll","sll_family","sll_protocol","sll_ifindex","sll_hatype","sll_pkttype","sll_halen","sll_addr","fd_set","tm","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_year","tm_wday","tm_yday","tm_isdst","tm_gmtoff","tm_zone","sched_param","sched_priority","Dl_info","dli_fname","dli_fbase","dli_sname","dli_saddr","lconv","decimal_point","thousands_sep","grouping","int_curr_symbol","currency_symbol","mon_decimal_point","mon_thousands_sep","mon_grouping","positive_sign","negative_sign","int_frac_digits","frac_digits","p_cs_precedes","p_sep_by_space","n_cs_precedes","n_sep_by_space","p_sign_posn","n_sign_posn","int_p_cs_precedes","int_p_sep_by_space","int_n_cs_precedes","int_n_sep_by_space","int_p_sign_posn","int_n_sign_posn","in_pktinfo","ipi_ifindex","ipi_spec_dst","ipi_addr","ifaddrs","ifa_next","ifa_name","ifa_flags","ifa_addr","ifa_netmask","ifa_ifu","ifa_data","in6_rtmsg","arpreq","arp_pa","arp_ha","arp_flags","arp_netmask","arp_dev","arpreq_old","arp_pa","arp_ha","arp_flags","arp_netmask","arphdr","ar_hrd","ar_pro","ar_hln","ar_pln","ar_op","mmsghdr","msg_hdr","msg_len","epoll_event","events","u64","sockaddr_un","sun_family","sun_path","sockaddr_storage","ss_family","utsname","sysname","nodename","release","version","machine","domainname","sigevent","sigev_value","sigev_signo","sigev_notify","sigev_notify_thread_id","EXIT_FAILURE","EXIT_SUCCESS","RAND_MAX","EOF","SEEK_SET","SEEK_CUR","SEEK_END","_IOFBF","_IONBF","_IOLBF","F_DUPFD","F_GETFD","F_SETFD","F_GETFL","F_SETFL","F_SETLEASE","F_GETLEASE","F_NOTIFY","F_CANCELLK","F_DUPFD_CLOEXEC","F_SETPIPE_SZ","F_GETPIPE_SZ","F_ADD_SEALS","F_GET_SEALS","F_SEAL_SEAL","F_SEAL_SHRINK","F_SEAL_GROW","F_SEAL_WRITE","SIGTRAP","PTHREAD_CREATE_JOINABLE","PTHREAD_CREATE_DETACHED","CLOCK_REALTIME","CLOCK_MONOTONIC","CLOCK_PROCESS_CPUTIME_ID","CLOCK_THREAD_CPUTIME_ID","CLOCK_MONOTONIC_RAW","CLOCK_REALTIME_COARSE","CLOCK_MONOTONIC_COARSE","CLOCK_BOOTTIME","CLOCK_REALTIME_ALARM","CLOCK_BOOTTIME_ALARM","TIMER_ABSTIME","RUSAGE_SELF","O_RDONLY","O_WRONLY","O_RDWR","SOCK_CLOEXEC","S_IFIFO","S_IFCHR","S_IFBLK","S_IFDIR","S_IFREG","S_IFLNK","S_IFSOCK","S_IFMT","S_IRWXU","S_IXUSR","S_IWUSR","S_IRUSR","S_IRWXG","S_IXGRP","S_IWGRP","S_IRGRP","S_IRWXO","S_IXOTH","S_IWOTH","S_IROTH","F_OK","R_OK","W_OK","X_OK","STDIN_FILENO","STDOUT_FILENO","STDERR_FILENO","SIGHUP","SIGINT","SIGQUIT","SIGILL","SIGABRT","SIGFPE","SIGKILL","SIGSEGV","SIGPIPE","SIGALRM","SIGTERM","PROT_NONE","PROT_READ","PROT_WRITE","PROT_EXEC","LC_CTYPE","LC_NUMERIC","LC_TIME","LC_COLLATE","LC_MONETARY","LC_MESSAGES","LC_ALL","LC_CTYPE_MASK","LC_NUMERIC_MASK","LC_TIME_MASK","LC_COLLATE_MASK","LC_MONETARY_MASK","LC_MESSAGES_MASK","MAP_FILE","MAP_SHARED","MAP_PRIVATE","MAP_FIXED","MAP_FAILED","MS_ASYNC","MS_INVALIDATE","MS_SYNC","MS_RDONLY","MS_NOSUID","MS_NODEV","MS_NOEXEC","MS_SYNCHRONOUS","MS_REMOUNT","MS_MANDLOCK","MS_DIRSYNC","MS_NOATIME","MS_NODIRATIME","MS_BIND","MS_MOVE","MS_REC","MS_SILENT","MS_POSIXACL","MS_UNBINDABLE","MS_PRIVATE","MS_SLAVE","MS_SHARED","MS_RELATIME","MS_KERNMOUNT","MS_I_VERSION","MS_STRICTATIME","MS_ACTIVE","MS_MGC_VAL","MS_MGC_MSK","EPERM","ENOENT","ESRCH","EINTR","EIO","ENXIO","E2BIG","ENOEXEC","EBADF","ECHILD","EAGAIN","ENOMEM","EACCES","EFAULT","ENOTBLK","EBUSY","EEXIST","EXDEV","ENODEV","ENOTDIR","EISDIR","EINVAL","ENFILE","EMFILE","ENOTTY","ETXTBSY","EFBIG","ENOSPC","ESPIPE","EROFS","EMLINK","EPIPE","EDOM","ERANGE","EWOULDBLOCK","SCM_RIGHTS","SCM_CREDENTIALS","PROT_GROWSDOWN","PROT_GROWSUP","MAP_TYPE","MADV_NORMAL","MADV_RANDOM","MADV_SEQUENTIAL","MADV_WILLNEED","MADV_DONTNEED","MADV_FREE","MADV_REMOVE","MADV_DONTFORK","MADV_DOFORK","MADV_MERGEABLE","MADV_UNMERGEABLE","MADV_HUGEPAGE","MADV_NOHUGEPAGE","MADV_DONTDUMP","MADV_DODUMP","MADV_HWPOISON","IFF_UP","IFF_BROADCAST","IFF_DEBUG","IFF_LOOPBACK","IFF_POINTOPOINT","IFF_NOTRAILERS","IFF_RUNNING","IFF_NOARP","IFF_PROMISC","IFF_ALLMULTI","IFF_MASTER","IFF_SLAVE","IFF_MULTICAST","IFF_PORTSEL","IFF_AUTOMEDIA","IFF_DYNAMIC","SOL_IP","SOL_TCP","SOL_UDP","SOL_IPV6","SOL_ICMPV6","SOL_RAW","SOL_DECNET","SOL_X25","SOL_PACKET","SOL_ATM","SOL_AAL","SOL_IRDA","SOL_NETBEUI","SOL_LLC","SOL_DCCP","SOL_NETLINK","SOL_TIPC","SOL_BLUETOOTH","SOL_ALG","AF_UNSPEC","AF_UNIX","AF_LOCAL","AF_INET","AF_AX25","AF_IPX","AF_APPLETALK","AF_NETROM","AF_BRIDGE","AF_ATMPVC","AF_X25","AF_INET6","AF_ROSE","AF_DECnet","AF_NETBEUI","AF_SECURITY","AF_KEY","AF_NETLINK","AF_ROUTE","AF_PACKET","AF_ASH","AF_ECONET","AF_ATMSVC","AF_RDS","AF_SNA","AF_IRDA","AF_PPPOX","AF_WANPIPE","AF_LLC","AF_CAN","AF_TIPC","AF_BLUETOOTH","AF_IUCV","AF_RXRPC","AF_ISDN","AF_PHONET","AF_IEEE802154","AF_CAIF","AF_ALG","PF_UNSPEC","PF_UNIX","PF_LOCAL","PF_INET","PF_AX25","PF_IPX","PF_APPLETALK","PF_NETROM","PF_BRIDGE","PF_ATMPVC","PF_X25","PF_INET6","PF_ROSE","PF_DECnet","PF_NETBEUI","PF_SECURITY","PF_KEY","PF_NETLINK","PF_ROUTE","PF_PACKET","PF_ASH","PF_ECONET","PF_ATMSVC","PF_RDS","PF_SNA","PF_IRDA","PF_PPPOX","PF_WANPIPE","PF_LLC","PF_CAN","PF_TIPC","PF_BLUETOOTH","PF_IUCV","PF_RXRPC","PF_ISDN","PF_PHONET","PF_IEEE802154","PF_CAIF","PF_ALG","SOMAXCONN","MSG_OOB","MSG_PEEK","MSG_DONTROUTE","MSG_CTRUNC","MSG_TRUNC","MSG_DONTWAIT","MSG_EOR","MSG_WAITALL","MSG_FIN","MSG_SYN","MSG_CONFIRM","MSG_RST","MSG_ERRQUEUE","MSG_NOSIGNAL","MSG_MORE","MSG_WAITFORONE","MSG_FASTOPEN","MSG_CMSG_CLOEXEC","SCM_TIMESTAMP","SOCK_RAW","SOCK_RDM","IP_MULTICAST_IF","IP_MULTICAST_TTL","IP_MULTICAST_LOOP","IP_TOS","IP_TTL","IP_HDRINCL","IP_PKTINFO","IP_RECVTOS","IP_RECVERR","IP_ADD_MEMBERSHIP","IP_DROP_MEMBERSHIP","IP_ADD_SOURCE_MEMBERSHIP","IP_DROP_SOURCE_MEMBERSHIP","IP_TRANSPARENT","IPV6_ADDRFORM","IPV6_2292PKTINFO","IPV6_2292HOPOPTS","IPV6_2292DSTOPTS","IPV6_2292RTHDR","IPV6_2292PKTOPTIONS","IPV6_CHECKSUM","IPV6_2292HOPLIMIT","IPV6_NEXTHOP","IPV6_FLOWINFO","IPV6_UNICAST_HOPS","IPV6_MULTICAST_IF","IPV6_MULTICAST_HOPS","IPV6_MULTICAST_LOOP","IPV6_ADD_MEMBERSHIP","IPV6_DROP_MEMBERSHIP","IPV6_ROUTER_ALERT","IPV6_MTU_DISCOVER","IPV6_MTU","IPV6_RECVERR","IPV6_V6ONLY","IPV6_JOIN_ANYCAST","IPV6_LEAVE_ANYCAST","IPV6_RECVPKTINFO","IPV6_PKTINFO","IPV6_RECVTCLASS","IPV6_TCLASS","TCP_NODELAY","TCP_MAXSEG","TCP_CORK","TCP_KEEPIDLE","TCP_KEEPINTVL","TCP_KEEPCNT","TCP_SYNCNT","TCP_LINGER2","TCP_DEFER_ACCEPT","TCP_WINDOW_CLAMP","TCP_INFO","TCP_QUICKACK","TCP_CONGESTION","SO_DEBUG","SHUT_RD","SHUT_WR","SHUT_RDWR","LOCK_SH","LOCK_EX","LOCK_NB","LOCK_UN","SS_ONSTACK","SS_DISABLE","PATH_MAX","FD_SETSIZE","EPOLLIN","EPOLLPRI","EPOLLOUT","EPOLLRDNORM","EPOLLRDBAND","EPOLLWRNORM","EPOLLWRBAND","EPOLLMSG","EPOLLERR","EPOLLHUP","EPOLLET","EPOLL_CTL_ADD","EPOLL_CTL_MOD","EPOLL_CTL_DEL","MNT_DETACH","MNT_EXPIRE","Q_GETFMT","Q_GETINFO","Q_SETINFO","QIF_BLIMITS","QIF_SPACE","QIF_ILIMITS","QIF_INODES","QIF_BTIME","QIF_ITIME","QIF_LIMITS","QIF_USAGE","QIF_TIMES","QIF_ALL","MNT_FORCE","Q_SYNC","Q_QUOTAON","Q_QUOTAOFF","Q_GETQUOTA","Q_SETQUOTA","TCIOFF","TCION","TCOOFF","TCOON","TCIFLUSH","TCOFLUSH","TCIOFLUSH","NL0","NL1","TAB0","CR0","FF0","BS0","VT0","VERASE","VKILL","VINTR","VQUIT","VLNEXT","IGNBRK","BRKINT","IGNPAR","PARMRK","INPCK","ISTRIP","INLCR","IGNCR","ICRNL","IXANY","IMAXBEL","OPOST","CS5","CRTSCTS","ECHO","OCRNL","ONOCR","ONLRET","OFILL","OFDEL","CLONE_VM","CLONE_FS","CLONE_FILES","CLONE_SIGHAND","CLONE_PTRACE","CLONE_VFORK","CLONE_PARENT","CLONE_THREAD","CLONE_NEWNS","CLONE_SYSVSEM","CLONE_SETTLS","CLONE_PARENT_SETTID","CLONE_CHILD_CLEARTID","CLONE_DETACHED","CLONE_UNTRACED","CLONE_CHILD_SETTID","CLONE_NEWUTS","CLONE_NEWIPC","CLONE_NEWUSER","CLONE_NEWPID","CLONE_NEWNET","CLONE_IO","CLONE_NEWCGROUP","WNOHANG","WUNTRACED","WSTOPPED","WEXITED","WCONTINUED","WNOWAIT","PTRACE_O_TRACESYSGOOD","PTRACE_O_TRACEFORK","PTRACE_O_TRACEVFORK","PTRACE_O_TRACECLONE","PTRACE_O_TRACEEXEC","PTRACE_O_TRACEVFORKDONE","PTRACE_O_TRACEEXIT","PTRACE_O_TRACESECCOMP","PTRACE_O_EXITKILL","PTRACE_O_SUSPEND_SECCOMP","PTRACE_O_MASK","PTRACE_EVENT_FORK","PTRACE_EVENT_VFORK","PTRACE_EVENT_CLONE","PTRACE_EVENT_EXEC","PTRACE_EVENT_VFORK_DONE","PTRACE_EVENT_EXIT","PTRACE_EVENT_SECCOMP","__WNOTHREAD","__WALL","__WCLONE","SPLICE_F_MOVE","SPLICE_F_NONBLOCK","SPLICE_F_MORE","SPLICE_F_GIFT","RTLD_LOCAL","RTLD_LAZY","POSIX_FADV_NORMAL","POSIX_FADV_RANDOM","POSIX_FADV_SEQUENTIAL","POSIX_FADV_WILLNEED","AT_FDCWD","AT_SYMLINK_NOFOLLOW","AT_REMOVEDIR","AT_SYMLINK_FOLLOW","AT_NO_AUTOMOUNT","AT_EMPTY_PATH","LOG_CRON","LOG_AUTHPRIV","LOG_FTP","LOG_PERROR","PIPE_BUF","SI_LOAD_SHIFT","SIGEV_SIGNAL","SIGEV_NONE","SIGEV_THREAD","P_ALL","P_PID","P_PGID","UTIME_OMIT","UTIME_NOW","POLLIN","POLLPRI","POLLOUT","POLLERR","POLLHUP","POLLNVAL","POLLRDNORM","POLLRDBAND","IPTOS_LOWDELAY","IPTOS_THROUGHPUT","IPTOS_RELIABILITY","IPTOS_MINCOST","IPTOS_PREC_NETCONTROL","IPTOS_PREC_INTERNETCONTROL","IPTOS_PREC_CRITIC_ECP","IPTOS_PREC_FLASHOVERRIDE","IPTOS_PREC_FLASH","IPTOS_PREC_IMMEDIATE","IPTOS_PREC_PRIORITY","IPTOS_PREC_ROUTINE","IPTOS_ECN_MASK","IPTOS_ECN_ECT1","IPTOS_ECN_ECT0","IPTOS_ECN_CE","IPOPT_COPY","IPOPT_CLASS_MASK","IPOPT_NUMBER_MASK","IPOPT_CONTROL","IPOPT_RESERVED1","IPOPT_MEASUREMENT","IPOPT_RESERVED2","IPOPT_END","IPOPT_NOOP","IPOPT_SEC","IPOPT_LSRR","IPOPT_TIMESTAMP","IPOPT_RR","IPOPT_SID","IPOPT_SSRR","IPOPT_RA","IPVERSION","MAXTTL","IPDEFTTL","IPOPT_OPTVAL","IPOPT_OLEN","IPOPT_OFFSET","IPOPT_MINOFF","MAX_IPOPTLEN","IPOPT_NOP","IPOPT_EOL","IPOPT_TS","IPOPT_TS_TSONLY","IPOPT_TS_TSANDADDR","IPOPT_TS_PRESPEC","ARPOP_RREQUEST","ARPOP_RREPLY","ARPOP_InREQUEST","ARPOP_InREPLY","ARPOP_NAK","ATF_NETMASK","ATF_DONTPUB","ARPHRD_NETROM","ARPHRD_ETHER","ARPHRD_EETHER","ARPHRD_AX25","ARPHRD_PRONET","ARPHRD_CHAOS","ARPHRD_IEEE802","ARPHRD_ARCNET","ARPHRD_APPLETLK","ARPHRD_DLCI","ARPHRD_ATM","ARPHRD_METRICOM","ARPHRD_IEEE1394","ARPHRD_EUI64","ARPHRD_INFINIBAND","ARPHRD_SLIP","ARPHRD_CSLIP","ARPHRD_SLIP6","ARPHRD_CSLIP6","ARPHRD_RSRVD","ARPHRD_ADAPT","ARPHRD_ROSE","ARPHRD_X25","ARPHRD_HWX25","ARPHRD_PPP","ARPHRD_CISCO","ARPHRD_HDLC","ARPHRD_LAPB","ARPHRD_DDCMP","ARPHRD_RAWHDLC","ARPHRD_TUNNEL","ARPHRD_TUNNEL6","ARPHRD_FRAD","ARPHRD_SKIP","ARPHRD_LOOPBACK","ARPHRD_LOCALTLK","ARPHRD_FDDI","ARPHRD_BIF","ARPHRD_SIT","ARPHRD_IPDDP","ARPHRD_IPGRE","ARPHRD_PIMREG","ARPHRD_HIPPI","ARPHRD_ASH","ARPHRD_ECONET","ARPHRD_IRDA","ARPHRD_FCPP","ARPHRD_FCAL","ARPHRD_FCPL","ARPHRD_FCFABRIC","ARPHRD_IEEE802_TR","ARPHRD_IEEE80211","ARPHRD_IEEE80211_PRISM","ARPHRD_IEEE80211_RADIOTAP","ARPHRD_IEEE802154","ARPHRD_VOID","ARPHRD_NONE","CMSG_FIRSTHDR","CMSG_DATA","CMSG_SPACE","CMSG_LEN","FD_CLR","FD_ISSET","FD_SET","FD_ZERO","WIFSTOPPED","WSTOPSIG","WIFCONTINUED","WIFSIGNALED","WTERMSIG","WIFEXITED","WEXITSTATUS","WCOREDUMP","QCMD","IPOPT_COPIED","IPOPT_CLASS","IPOPT_NUMBER","IPTOS_ECN","useconds_t","dev_t","socklen_t","mode_t","ino64_t","off64_t","blkcnt64_t","rlim64_t","mqd_t","nfds_t","nl_item","idtype_t","loff_t","pthread_key_t","__u8","__u16","__s16","__u32","__s32","Elf32_Half","Elf32_Word","Elf32_Off","Elf32_Addr","Elf64_Half","Elf64_Word","Elf64_Off","Elf64_Addr","Elf64_Xword","Elf64_Sxword","Elf32_Section","Elf64_Section","fpos64_t","rlimit64","rlim_cur","rlim_max","glob_t","gl_pathc","gl_pathv","gl_offs","gl_flags","passwd","pw_name","pw_passwd","pw_uid","pw_gid","pw_gecos","pw_dir","pw_shell","spwd","sp_namp","sp_pwdp","sp_lstchg","sp_min","sp_max","sp_warn","sp_inact","sp_expire","sp_flag","dqblk","dqb_bhardlimit","dqb_bsoftlimit","dqb_curspace","dqb_ihardlimit","dqb_isoftlimit","dqb_curinodes","dqb_btime","dqb_itime","dqb_valid","signalfd_siginfo","ssi_signo","ssi_errno","ssi_code","ssi_pid","ssi_uid","ssi_fd","ssi_tid","ssi_band","ssi_overrun","ssi_trapno","ssi_status","ssi_int","ssi_ptr","ssi_utime","ssi_stime","ssi_addr","ssi_addr_lsb","ssi_syscall","ssi_call_addr","ssi_arch","itimerspec","it_interval","it_value","fsid_t","packet_mreq","mr_ifindex","mr_type","mr_alen","mr_address","cpu_set_t","if_nameindex","if_index","if_name","msginfo","msgpool","msgmap","msgmax","msgmnb","msgmni","msgssz","msgtql","msgseg","sembuf","sem_num","sem_op","sem_flg","input_event","time","type_","code","value","input_id","bustype","vendor","product","version","input_absinfo","value","minimum","maximum","fuzz","flat","resolution","input_keymap_entry","flags","len","index","keycode","scancode","input_mask","type_","codes_size","codes_ptr","ff_replay","length","delay","ff_trigger","button","interval","ff_envelope","attack_length","attack_level","fade_length","fade_level","ff_constant_effect","level","envelope","ff_ramp_effect","start_level","end_level","envelope","ff_condition_effect","right_saturation","left_saturation","right_coeff","left_coeff","deadband","center","ff_periodic_effect","waveform","period","magnitude","offset","phase","envelope","custom_len","custom_data","ff_rumble_effect","strong_magnitude","weak_magnitude","ff_effect","type_","id","direction","trigger","replay","u","dl_phdr_info","dlpi_addr","dlpi_name","dlpi_phdr","dlpi_phnum","dlpi_adds","dlpi_subs","dlpi_tls_modid","dlpi_tls_data","Elf32_Ehdr","e_ident","e_type","e_machine","e_version","e_entry","e_phoff","e_shoff","e_flags","e_ehsize","e_phentsize","e_phnum","e_shentsize","e_shnum","e_shstrndx","Elf64_Ehdr","e_ident","e_type","e_machine","e_version","e_entry","e_phoff","e_shoff","e_flags","e_ehsize","e_phentsize","e_phnum","e_shentsize","e_shnum","e_shstrndx","Elf32_Sym","st_name","st_value","st_size","st_info","st_other","st_shndx","Elf64_Sym","st_name","st_info","st_other","st_shndx","st_value","st_size","Elf32_Phdr","p_type","p_offset","p_vaddr","p_paddr","p_filesz","p_memsz","p_flags","p_align","Elf64_Phdr","p_type","p_flags","p_offset","p_vaddr","p_paddr","p_filesz","p_memsz","p_align","Elf32_Shdr","sh_name","sh_type","sh_flags","sh_addr","sh_offset","sh_size","sh_link","sh_info","sh_addralign","sh_entsize","Elf64_Shdr","sh_name","sh_type","sh_flags","sh_addr","sh_offset","sh_size","sh_link","sh_info","sh_addralign","sh_entsize","Elf32_Chdr","ch_type","ch_size","ch_addralign","Elf64_Chdr","ch_type","ch_reserved","ch_size","ch_addralign","ucred","pid","uid","gid","mntent","mnt_fsname","mnt_dir","mnt_type","mnt_opts","mnt_freq","mnt_passno","posix_spawn_file_actions_t","posix_spawnattr_t","genlmsghdr","cmd","version","reserved","in6_pktinfo","ipi6_addr","ipi6_ifindex","arpd_request","req","ip","dev","stamp","updated","ha","inotify_event","wd","mask","cookie","len","sockaddr_vm","svm_family","svm_reserved1","svm_port","svm_cid","svm_zero","sockaddr_nl","nl_family","nl_pid","nl_groups","dirent","d_ino","d_off","d_reclen","d_type","d_name","dirent64","d_ino","d_off","d_reclen","d_type","d_name","sockaddr_alg","salg_family","salg_type","salg_feat","salg_mask","salg_name","af_alg_iv","ivlen","iv","mq_attr","mq_flags","mq_maxmsg","mq_msgsize","mq_curmsgs","ABDAY_1","ABDAY_2","ABDAY_3","ABDAY_4","ABDAY_5","ABDAY_6","ABDAY_7","DAY_1","DAY_2","DAY_3","DAY_4","DAY_5","DAY_6","DAY_7","ABMON_1","ABMON_2","ABMON_3","ABMON_4","ABMON_5","ABMON_6","ABMON_7","ABMON_8","ABMON_9","ABMON_10","ABMON_11","ABMON_12","MON_1","MON_2","MON_3","MON_4","MON_5","MON_6","MON_7","MON_8","MON_9","MON_10","MON_11","MON_12","AM_STR","PM_STR","D_T_FMT","D_FMT","T_FMT","T_FMT_AMPM","ERA","ERA_D_FMT","ALT_DIGITS","ERA_D_T_FMT","ERA_T_FMT","CODESET","CRNCYSTR","RUSAGE_THREAD","RUSAGE_CHILDREN","RADIXCHAR","THOUSEP","YESEXPR","NOEXPR","YESSTR","NOSTR","FILENAME_MAX","L_tmpnam","_PC_LINK_MAX","_PC_MAX_CANON","_PC_MAX_INPUT","_PC_NAME_MAX","_PC_PATH_MAX","_PC_PIPE_BUF","_PC_CHOWN_RESTRICTED","_PC_NO_TRUNC","_PC_VDISABLE","_PC_SYNC_IO","_PC_ASYNC_IO","_PC_PRIO_IO","_PC_SOCK_MAXBUF","_PC_FILESIZEBITS","_PC_REC_INCR_XFER_SIZE","_PC_REC_MAX_XFER_SIZE","_PC_REC_MIN_XFER_SIZE","_PC_REC_XFER_ALIGN","_PC_ALLOC_SIZE_MIN","_PC_SYMLINK_MAX","_PC_2_SYMLINKS","MS_NOUSER","_SC_ARG_MAX","_SC_CHILD_MAX","_SC_CLK_TCK","_SC_NGROUPS_MAX","_SC_OPEN_MAX","_SC_STREAM_MAX","_SC_TZNAME_MAX","_SC_JOB_CONTROL","_SC_SAVED_IDS","_SC_REALTIME_SIGNALS","_SC_PRIORITY_SCHEDULING","_SC_TIMERS","_SC_ASYNCHRONOUS_IO","_SC_PRIORITIZED_IO","_SC_SYNCHRONIZED_IO","_SC_FSYNC","_SC_MAPPED_FILES","_SC_MEMLOCK","_SC_MEMLOCK_RANGE","_SC_MEMORY_PROTECTION","_SC_MESSAGE_PASSING","_SC_SEMAPHORES","_SC_SHARED_MEMORY_OBJECTS","_SC_AIO_LISTIO_MAX","_SC_AIO_MAX","_SC_AIO_PRIO_DELTA_MAX","_SC_DELAYTIMER_MAX","_SC_MQ_OPEN_MAX","_SC_MQ_PRIO_MAX","_SC_VERSION","_SC_PAGESIZE","_SC_PAGE_SIZE","_SC_RTSIG_MAX","_SC_SEM_NSEMS_MAX","_SC_SEM_VALUE_MAX","_SC_SIGQUEUE_MAX","_SC_TIMER_MAX","_SC_BC_BASE_MAX","_SC_BC_DIM_MAX","_SC_BC_SCALE_MAX","_SC_BC_STRING_MAX","_SC_COLL_WEIGHTS_MAX","_SC_EXPR_NEST_MAX","_SC_LINE_MAX","_SC_RE_DUP_MAX","_SC_2_VERSION","_SC_2_C_BIND","_SC_2_C_DEV","_SC_2_FORT_DEV","_SC_2_FORT_RUN","_SC_2_SW_DEV","_SC_2_LOCALEDEF","_SC_UIO_MAXIOV","_SC_IOV_MAX","_SC_THREADS","_SC_THREAD_SAFE_FUNCTIONS","_SC_GETGR_R_SIZE_MAX","_SC_GETPW_R_SIZE_MAX","_SC_LOGIN_NAME_MAX","_SC_TTY_NAME_MAX","_SC_THREAD_DESTRUCTOR_ITERATIONS","_SC_THREAD_KEYS_MAX","_SC_THREAD_STACK_MIN","_SC_THREAD_THREADS_MAX","_SC_THREAD_ATTR_STACKADDR","_SC_THREAD_ATTR_STACKSIZE","_SC_THREAD_PRIORITY_SCHEDULING","_SC_THREAD_PRIO_INHERIT","_SC_THREAD_PRIO_PROTECT","_SC_THREAD_PROCESS_SHARED","_SC_NPROCESSORS_CONF","_SC_NPROCESSORS_ONLN","_SC_PHYS_PAGES","_SC_AVPHYS_PAGES","_SC_ATEXIT_MAX","_SC_PASS_MAX","_SC_XOPEN_VERSION","_SC_XOPEN_XCU_VERSION","_SC_XOPEN_UNIX","_SC_XOPEN_CRYPT","_SC_XOPEN_ENH_I18N","_SC_XOPEN_SHM","_SC_2_CHAR_TERM","_SC_2_UPE","_SC_XOPEN_XPG2","_SC_XOPEN_XPG3","_SC_XOPEN_XPG4","_SC_NZERO","_SC_XBS5_ILP32_OFF32","_SC_XBS5_ILP32_OFFBIG","_SC_XBS5_LP64_OFF64","_SC_XBS5_LPBIG_OFFBIG","_SC_XOPEN_LEGACY","_SC_XOPEN_REALTIME","_SC_XOPEN_REALTIME_THREADS","_SC_ADVISORY_INFO","_SC_BARRIERS","_SC_CLOCK_SELECTION","_SC_CPUTIME","_SC_THREAD_CPUTIME","_SC_MONOTONIC_CLOCK","_SC_READER_WRITER_LOCKS","_SC_SPIN_LOCKS","_SC_REGEXP","_SC_SHELL","_SC_SPAWN","_SC_SPORADIC_SERVER","_SC_THREAD_SPORADIC_SERVER","_SC_TIMEOUTS","_SC_TYPED_MEMORY_OBJECTS","_SC_2_PBS","_SC_2_PBS_ACCOUNTING","_SC_2_PBS_LOCATE","_SC_2_PBS_MESSAGE","_SC_2_PBS_TRACK","_SC_SYMLOOP_MAX","_SC_STREAMS","_SC_2_PBS_CHECKPOINT","_SC_V6_ILP32_OFF32","_SC_V6_ILP32_OFFBIG","_SC_V6_LP64_OFF64","_SC_V6_LPBIG_OFFBIG","_SC_HOST_NAME_MAX","_SC_TRACE","_SC_TRACE_EVENT_FILTER","_SC_TRACE_INHERIT","_SC_TRACE_LOG","_SC_IPV6","_SC_RAW_SOCKETS","_SC_V7_ILP32_OFF32","_SC_V7_ILP32_OFFBIG","_SC_V7_LP64_OFF64","_SC_V7_LPBIG_OFFBIG","_SC_SS_REPL_MAX","_SC_TRACE_EVENT_NAME_MAX","_SC_TRACE_NAME_MAX","_SC_TRACE_SYS_MAX","_SC_TRACE_USER_EVENT_MAX","_SC_XOPEN_STREAMS","_SC_THREAD_ROBUST_PRIO_INHERIT","_SC_THREAD_ROBUST_PRIO_PROTECT","RLIM_SAVED_MAX","RLIM_SAVED_CUR","GLOB_ERR","GLOB_MARK","GLOB_NOSORT","GLOB_DOOFFS","GLOB_NOCHECK","GLOB_APPEND","GLOB_NOESCAPE","GLOB_NOSPACE","GLOB_ABORTED","GLOB_NOMATCH","POSIX_MADV_NORMAL","POSIX_MADV_RANDOM","POSIX_MADV_SEQUENTIAL","POSIX_MADV_WILLNEED","S_IEXEC","S_IWRITE","S_IREAD","F_LOCK","F_TEST","F_TLOCK","F_ULOCK","F_SEAL_FUTURE_WRITE","IFF_LOWER_UP","IFF_DORMANT","IFF_ECHO","IFA_UNSPEC","IFA_ADDRESS","IFA_LOCAL","IFA_LABEL","IFA_BROADCAST","IFA_ANYCAST","IFA_CACHEINFO","IFA_MULTICAST","IFA_F_SECONDARY","IFA_F_TEMPORARY","IFA_F_NODAD","IFA_F_OPTIMISTIC","IFA_F_DADFAILED","IFA_F_HOMEADDRESS","IFA_F_DEPRECATED","IFA_F_TENTATIVE","IFA_F_PERMANENT","IFLA_UNSPEC","IFLA_ADDRESS","IFLA_BROADCAST","IFLA_IFNAME","IFLA_MTU","IFLA_LINK","IFLA_QDISC","IFLA_STATS","IFLA_COST","IFLA_PRIORITY","IFLA_MASTER","IFLA_WIRELESS","IFLA_PROTINFO","IFLA_TXQLEN","IFLA_MAP","IFLA_WEIGHT","IFLA_OPERSTATE","IFLA_LINKMODE","IFLA_LINKINFO","IFLA_NET_NS_PID","IFLA_IFALIAS","IFLA_NUM_VF","IFLA_VFINFO_LIST","IFLA_STATS64","IFLA_VF_PORTS","IFLA_PORT_SELF","IFLA_AF_SPEC","IFLA_GROUP","IFLA_NET_NS_FD","IFLA_EXT_MASK","IFLA_PROMISCUITY","IFLA_NUM_TX_QUEUES","IFLA_NUM_RX_QUEUES","IFLA_CARRIER","IFLA_PHYS_PORT_ID","IFLA_CARRIER_CHANGES","IFLA_PHYS_SWITCH_ID","IFLA_LINK_NETNSID","IFLA_PHYS_PORT_NAME","IFLA_PROTO_DOWN","IFLA_INFO_UNSPEC","IFLA_INFO_KIND","IFLA_INFO_DATA","IFLA_INFO_XSTATS","IFLA_INFO_SLAVE_KIND","IFLA_INFO_SLAVE_DATA","IFF_TUN","IFF_TAP","IFF_NO_PI","TUN_READQ_SIZE","TUN_TUN_DEV","TUN_TAP_DEV","TUN_TYPE_MASK","IFF_ONE_QUEUE","IFF_VNET_HDR","IFF_TUN_EXCL","IFF_MULTI_QUEUE","IFF_ATTACH_QUEUE","IFF_DETACH_QUEUE","IFF_PERSIST","IFF_NOFILTER","ST_RDONLY","ST_NOSUID","ST_NODEV","ST_NOEXEC","ST_SYNCHRONOUS","ST_MANDLOCK","ST_WRITE","ST_APPEND","ST_IMMUTABLE","ST_NOATIME","ST_NODIRATIME","RTLD_NEXT","RTLD_DEFAULT","RTLD_NODELETE","RTLD_NOW","TCP_MD5SIG","PTHREAD_MUTEX_INITIALIZER","PTHREAD_COND_INITIALIZER","PTHREAD_RWLOCK_INITIALIZER","PTHREAD_MUTEX_NORMAL","PTHREAD_MUTEX_RECURSIVE","PTHREAD_MUTEX_ERRORCHECK","PTHREAD_MUTEX_DEFAULT","PTHREAD_PROCESS_PRIVATE","PTHREAD_PROCESS_SHARED","__SIZEOF_PTHREAD_COND_T","RENAME_NOREPLACE","RENAME_EXCHANGE","RENAME_WHITEOUT","SCHED_OTHER","SCHED_FIFO","SCHED_RR","SCHED_BATCH","SCHED_IDLE","SCHED_RESET_ON_FORK","IPPROTO_HOPOPTS","IPPROTO_IGMP","IPPROTO_IPIP","IPPROTO_EGP","IPPROTO_PUP","IPPROTO_IDP","IPPROTO_TP","IPPROTO_DCCP","IPPROTO_ROUTING","IPPROTO_FRAGMENT","IPPROTO_RSVP","IPPROTO_GRE","IPPROTO_ESP","IPPROTO_AH","IPPROTO_NONE","IPPROTO_DSTOPTS","IPPROTO_MTP","IPPROTO_BEETPH","IPPROTO_ENCAP","IPPROTO_PIM","IPPROTO_COMP","IPPROTO_SCTP","IPPROTO_MH","IPPROTO_UDPLITE","IPPROTO_MPLS","IPPROTO_RAW","IPPROTO_MAX","AF_IB","AF_MPLS","AF_NFC","AF_VSOCK","AF_XDP","PF_IB","PF_MPLS","PF_NFC","PF_VSOCK","PF_XDP","IPC_PRIVATE","IPC_CREAT","IPC_EXCL","IPC_NOWAIT","IPC_RMID","IPC_SET","IPC_STAT","IPC_INFO","MSG_STAT","MSG_INFO","MSG_NOERROR","MSG_EXCEPT","MSG_COPY","SHM_R","SHM_W","SHM_RDONLY","SHM_RND","SHM_REMAP","SHM_EXEC","SHM_LOCK","SHM_UNLOCK","SHM_HUGETLB","SHM_NORESERVE","EPOLLRDHUP","EPOLLEXCLUSIVE","EPOLLONESHOT","QFMT_VFS_OLD","QFMT_VFS_V0","QFMT_VFS_V1","EFD_SEMAPHORE","LOG_NFACILITIES","SEM_FAILED","RB_AUTOBOOT","RB_HALT_SYSTEM","RB_ENABLE_CAD","RB_DISABLE_CAD","RB_POWER_OFF","RB_SW_SUSPEND","RB_KEXEC","AI_PASSIVE","AI_CANONNAME","AI_NUMERICHOST","AI_V4MAPPED","AI_ALL","AI_ADDRCONFIG","AI_NUMERICSERV","EAI_BADFLAGS","EAI_NONAME","EAI_AGAIN","EAI_FAIL","EAI_NODATA","EAI_FAMILY","EAI_SOCKTYPE","EAI_SERVICE","EAI_MEMORY","EAI_SYSTEM","EAI_OVERFLOW","NI_NUMERICHOST","NI_NUMERICSERV","NI_NOFQDN","NI_NAMEREQD","NI_DGRAM","SYNC_FILE_RANGE_WAIT_BEFORE","SYNC_FILE_RANGE_WRITE","SYNC_FILE_RANGE_WAIT_AFTER","AIO_CANCELED","AIO_NOTCANCELED","AIO_ALLDONE","LIO_READ","LIO_WRITE","LIO_NOP","LIO_WAIT","LIO_NOWAIT","MREMAP_MAYMOVE","MREMAP_FIXED","PR_SET_PDEATHSIG","PR_GET_PDEATHSIG","PR_GET_DUMPABLE","PR_SET_DUMPABLE","PR_GET_UNALIGN","PR_SET_UNALIGN","PR_UNALIGN_NOPRINT","PR_UNALIGN_SIGBUS","PR_GET_KEEPCAPS","PR_SET_KEEPCAPS","PR_GET_FPEMU","PR_SET_FPEMU","PR_FPEMU_NOPRINT","PR_FPEMU_SIGFPE","PR_GET_FPEXC","PR_SET_FPEXC","PR_FP_EXC_SW_ENABLE","PR_FP_EXC_DIV","PR_FP_EXC_OVF","PR_FP_EXC_UND","PR_FP_EXC_RES","PR_FP_EXC_INV","PR_FP_EXC_DISABLED","PR_FP_EXC_NONRECOV","PR_FP_EXC_ASYNC","PR_FP_EXC_PRECISE","PR_GET_TIMING","PR_SET_TIMING","PR_TIMING_STATISTICAL","PR_TIMING_TIMESTAMP","PR_SET_NAME","PR_GET_NAME","PR_GET_ENDIAN","PR_SET_ENDIAN","PR_ENDIAN_BIG","PR_ENDIAN_LITTLE","PR_ENDIAN_PPC_LITTLE","PR_GET_SECCOMP","PR_SET_SECCOMP","PR_CAPBSET_READ","PR_CAPBSET_DROP","PR_GET_TSC","PR_SET_TSC","PR_TSC_ENABLE","PR_TSC_SIGSEGV","PR_GET_SECUREBITS","PR_SET_SECUREBITS","PR_SET_TIMERSLACK","PR_GET_TIMERSLACK","PR_TASK_PERF_EVENTS_DISABLE","PR_TASK_PERF_EVENTS_ENABLE","PR_MCE_KILL","PR_MCE_KILL_CLEAR","PR_MCE_KILL_SET","PR_MCE_KILL_LATE","PR_MCE_KILL_EARLY","PR_MCE_KILL_DEFAULT","PR_MCE_KILL_GET","PR_SET_MM","PR_SET_MM_START_CODE","PR_SET_MM_END_CODE","PR_SET_MM_START_DATA","PR_SET_MM_END_DATA","PR_SET_MM_START_STACK","PR_SET_MM_START_BRK","PR_SET_MM_BRK","PR_SET_MM_ARG_START","PR_SET_MM_ARG_END","PR_SET_MM_ENV_START","PR_SET_MM_ENV_END","PR_SET_MM_AUXV","PR_SET_MM_EXE_FILE","PR_SET_MM_MAP","PR_SET_MM_MAP_SIZE","PR_SET_PTRACER","PR_SET_CHILD_SUBREAPER","PR_GET_CHILD_SUBREAPER","PR_SET_NO_NEW_PRIVS","PR_GET_NO_NEW_PRIVS","PR_GET_TID_ADDRESS","PR_SET_THP_DISABLE","PR_GET_THP_DISABLE","PR_MPX_ENABLE_MANAGEMENT","PR_MPX_DISABLE_MANAGEMENT","PR_SET_FP_MODE","PR_GET_FP_MODE","PR_FP_MODE_FR","PR_FP_MODE_FRE","PR_CAP_AMBIENT","PR_CAP_AMBIENT_IS_SET","PR_CAP_AMBIENT_RAISE","PR_CAP_AMBIENT_LOWER","PR_CAP_AMBIENT_CLEAR_ALL","GRND_NONBLOCK","GRND_RANDOM","SECCOMP_MODE_DISABLED","SECCOMP_MODE_STRICT","SECCOMP_MODE_FILTER","ITIMER_REAL","ITIMER_VIRTUAL","ITIMER_PROF","TFD_CLOEXEC","TFD_NONBLOCK","TFD_TIMER_ABSTIME","XATTR_CREATE","XATTR_REPLACE","_POSIX_VDISABLE","FALLOC_FL_KEEP_SIZE","FALLOC_FL_PUNCH_HOLE","FALLOC_FL_COLLAPSE_RANGE","FALLOC_FL_ZERO_RANGE","FALLOC_FL_INSERT_RANGE","FALLOC_FL_UNSHARE_RANGE","ENOATTR","SO_ORIGINAL_DST","IP_ORIGDSTADDR","IP_RECVORIGDSTADDR","IPV6_ORIGDSTADDR","IPV6_RECVORIGDSTADDR","IPV6_FLOWLABEL_MGR","IPV6_FLOWINFO_SEND","IPV6_FLOWINFO_FLOWLABEL","IPV6_FLOWINFO_PRIORITY","IUTF8","CMSPAR","MFD_CLOEXEC","MFD_ALLOW_SEALING","MFD_HUGETLB","PT_NULL","PT_LOAD","PT_DYNAMIC","PT_INTERP","PT_NOTE","PT_SHLIB","PT_PHDR","PT_TLS","PT_NUM","PT_LOOS","PT_GNU_EH_FRAME","PT_GNU_STACK","PT_GNU_RELRO","ETH_ALEN","ETH_HLEN","ETH_ZLEN","ETH_DATA_LEN","ETH_FRAME_LEN","ETH_FCS_LEN","ETH_P_LOOP","ETH_P_PUP","ETH_P_PUPAT","ETH_P_IP","ETH_P_X25","ETH_P_ARP","ETH_P_BPQ","ETH_P_IEEEPUP","ETH_P_IEEEPUPAT","ETH_P_BATMAN","ETH_P_DEC","ETH_P_DNA_DL","ETH_P_DNA_RC","ETH_P_DNA_RT","ETH_P_LAT","ETH_P_DIAG","ETH_P_CUST","ETH_P_SCA","ETH_P_TEB","ETH_P_RARP","ETH_P_ATALK","ETH_P_AARP","ETH_P_8021Q","ETH_P_IPX","ETH_P_IPV6","ETH_P_PAUSE","ETH_P_SLOW","ETH_P_WCCP","ETH_P_MPLS_UC","ETH_P_MPLS_MC","ETH_P_ATMMPOA","ETH_P_PPP_DISC","ETH_P_PPP_SES","ETH_P_LINK_CTL","ETH_P_ATMFATE","ETH_P_PAE","ETH_P_AOE","ETH_P_8021AD","ETH_P_802_EX1","ETH_P_TIPC","ETH_P_MACSEC","ETH_P_8021AH","ETH_P_MVRP","ETH_P_1588","ETH_P_PRP","ETH_P_FCOE","ETH_P_TDLS","ETH_P_FIP","ETH_P_80221","ETH_P_LOOPBACK","ETH_P_QINQ1","ETH_P_QINQ2","ETH_P_QINQ3","ETH_P_EDSA","ETH_P_AF_IUCV","ETH_P_802_3_MIN","ETH_P_802_3","ETH_P_AX25","ETH_P_ALL","ETH_P_802_2","ETH_P_SNAP","ETH_P_DDCMP","ETH_P_WAN_PPP","ETH_P_PPP_MP","ETH_P_LOCALTALK","ETH_P_CANFD","ETH_P_PPPTALK","ETH_P_TR_802_2","ETH_P_MOBITEX","ETH_P_CONTROL","ETH_P_IRDA","ETH_P_ECONET","ETH_P_HDLC","ETH_P_ARCNET","ETH_P_DSA","ETH_P_TRAILER","ETH_P_PHONET","ETH_P_IEEE802154","ETH_P_CAIF","POSIX_SPAWN_RESETIDS","POSIX_SPAWN_SETPGROUP","POSIX_SPAWN_SETSIGDEF","POSIX_SPAWN_SETSIGMASK","POSIX_SPAWN_SETSCHEDPARAM","POSIX_SPAWN_SETSCHEDULER","NLMSG_NOOP","NLMSG_ERROR","NLMSG_DONE","NLMSG_OVERRUN","NLMSG_MIN_TYPE","NFNLGRP_NONE","NFNLGRP_CONNTRACK_NEW","NFNLGRP_CONNTRACK_UPDATE","NFNLGRP_CONNTRACK_DESTROY","NFNLGRP_CONNTRACK_EXP_NEW","NFNLGRP_CONNTRACK_EXP_UPDATE","NFNLGRP_CONNTRACK_EXP_DESTROY","NFNLGRP_NFTABLES","NFNLGRP_ACCT_QUOTA","NFNETLINK_V0","NFNL_SUBSYS_NONE","NFNL_SUBSYS_CTNETLINK","NFNL_SUBSYS_CTNETLINK_EXP","NFNL_SUBSYS_QUEUE","NFNL_SUBSYS_ULOG","NFNL_SUBSYS_OSF","NFNL_SUBSYS_IPSET","NFNL_SUBSYS_ACCT","NFNL_SUBSYS_CTNETLINK_TIMEOUT","NFNL_SUBSYS_CTHELPER","NFNL_SUBSYS_NFTABLES","NFNL_SUBSYS_NFT_COMPAT","NFNL_SUBSYS_COUNT","NFNL_MSG_BATCH_BEGIN","NFNL_MSG_BATCH_END","NFULNL_MSG_PACKET","NFULNL_MSG_CONFIG","NFULA_UNSPEC","NFULA_PACKET_HDR","NFULA_MARK","NFULA_TIMESTAMP","NFULA_IFINDEX_INDEV","NFULA_IFINDEX_OUTDEV","NFULA_IFINDEX_PHYSINDEV","NFULA_IFINDEX_PHYSOUTDEV","NFULA_HWADDR","NFULA_PAYLOAD","NFULA_PREFIX","NFULA_UID","NFULA_SEQ","NFULA_SEQ_GLOBAL","NFULA_GID","NFULA_HWTYPE","NFULA_HWHEADER","NFULA_HWLEN","NFULA_CT","NFULA_CT_INFO","NFULNL_CFG_CMD_NONE","NFULNL_CFG_CMD_BIND","NFULNL_CFG_CMD_UNBIND","NFULNL_CFG_CMD_PF_BIND","NFULNL_CFG_CMD_PF_UNBIND","NFULA_CFG_UNSPEC","NFULA_CFG_CMD","NFULA_CFG_MODE","NFULA_CFG_NLBUFSIZ","NFULA_CFG_TIMEOUT","NFULA_CFG_QTHRESH","NFULA_CFG_FLAGS","NFULNL_COPY_NONE","NFULNL_COPY_META","NFULNL_COPY_PACKET","NFULNL_CFG_F_SEQ","NFULNL_CFG_F_SEQ_GLOBAL","NFULNL_CFG_F_CONNTRACK","GENL_NAMSIZ","GENL_MIN_ID","GENL_MAX_ID","GENL_ADMIN_PERM","GENL_CMD_CAP_DO","GENL_CMD_CAP_DUMP","GENL_CMD_CAP_HASPOL","GENL_ID_CTRL","CTRL_CMD_UNSPEC","CTRL_CMD_NEWFAMILY","CTRL_CMD_DELFAMILY","CTRL_CMD_GETFAMILY","CTRL_CMD_NEWOPS","CTRL_CMD_DELOPS","CTRL_CMD_GETOPS","CTRL_CMD_NEWMCAST_GRP","CTRL_CMD_DELMCAST_GRP","CTRL_CMD_GETMCAST_GRP","CTRL_ATTR_UNSPEC","CTRL_ATTR_FAMILY_ID","CTRL_ATTR_FAMILY_NAME","CTRL_ATTR_VERSION","CTRL_ATTR_HDRSIZE","CTRL_ATTR_MAXATTR","CTRL_ATTR_OPS","CTRL_ATTR_MCAST_GROUPS","CTRL_ATTR_OP_UNSPEC","CTRL_ATTR_OP_ID","CTRL_ATTR_OP_FLAGS","CTRL_ATTR_MCAST_GRP_UNSPEC","CTRL_ATTR_MCAST_GRP_NAME","CTRL_ATTR_MCAST_GRP_ID","PACKET_ADD_MEMBERSHIP","PACKET_DROP_MEMBERSHIP","PACKET_MR_MULTICAST","PACKET_MR_PROMISC","PACKET_MR_ALLMULTI","PACKET_MR_UNICAST","NF_DROP","NF_ACCEPT","NF_STOLEN","NF_QUEUE","NF_REPEAT","NF_STOP","NF_MAX_VERDICT","NF_VERDICT_MASK","NF_VERDICT_FLAG_QUEUE_BYPASS","NF_VERDICT_QMASK","NF_VERDICT_QBITS","NF_VERDICT_BITS","NF_INET_PRE_ROUTING","NF_INET_LOCAL_IN","NF_INET_FORWARD","NF_INET_LOCAL_OUT","NF_INET_POST_ROUTING","NF_INET_NUMHOOKS","NFPROTO_UNSPEC","NFPROTO_IPV4","NFPROTO_ARP","NFPROTO_BRIDGE","NFPROTO_IPV6","NFPROTO_DECNET","NFPROTO_NUMPROTO","NF_IP_PRE_ROUTING","NF_IP_LOCAL_IN","NF_IP_FORWARD","NF_IP_LOCAL_OUT","NF_IP_POST_ROUTING","NF_IP_NUMHOOKS","NF_IP_PRI_FIRST","NF_IP_PRI_CONNTRACK_DEFRAG","NF_IP_PRI_RAW","NF_IP_PRI_SELINUX_FIRST","NF_IP_PRI_CONNTRACK","NF_IP_PRI_MANGLE","NF_IP_PRI_NAT_DST","NF_IP_PRI_FILTER","NF_IP_PRI_SECURITY","NF_IP_PRI_NAT_SRC","NF_IP_PRI_SELINUX_LAST","NF_IP_PRI_CONNTRACK_HELPER","NF_IP_PRI_CONNTRACK_CONFIRM","NF_IP_PRI_LAST","NF_IP6_PRE_ROUTING","NF_IP6_LOCAL_IN","NF_IP6_FORWARD","NF_IP6_LOCAL_OUT","NF_IP6_POST_ROUTING","NF_IP6_NUMHOOKS","NF_IP6_PRI_FIRST","NF_IP6_PRI_CONNTRACK_DEFRAG","NF_IP6_PRI_RAW","NF_IP6_PRI_SELINUX_FIRST","NF_IP6_PRI_CONNTRACK","NF_IP6_PRI_MANGLE","NF_IP6_PRI_NAT_DST","NF_IP6_PRI_FILTER","NF_IP6_PRI_SECURITY","NF_IP6_PRI_NAT_SRC","NF_IP6_PRI_SELINUX_LAST","NF_IP6_PRI_CONNTRACK_HELPER","NF_IP6_PRI_LAST","SIOCADDRT","SIOCDELRT","SIOCGIFNAME","SIOCSIFLINK","SIOCGIFCONF","SIOCGIFFLAGS","SIOCSIFFLAGS","SIOCGIFADDR","SIOCSIFADDR","SIOCGIFDSTADDR","SIOCSIFDSTADDR","SIOCGIFBRDADDR","SIOCSIFBRDADDR","SIOCGIFNETMASK","SIOCSIFNETMASK","SIOCGIFMETRIC","SIOCSIFMETRIC","SIOCGIFMEM","SIOCSIFMEM","SIOCGIFMTU","SIOCSIFMTU","SIOCSIFHWADDR","SIOCGIFENCAP","SIOCSIFENCAP","SIOCGIFHWADDR","SIOCGIFSLAVE","SIOCSIFSLAVE","SIOCADDMULTI","SIOCDELMULTI","SIOCDARP","SIOCGARP","SIOCSARP","SIOCDRARP","SIOCGRARP","SIOCSRARP","SIOCGIFMAP","SIOCSIFMAP","IPTOS_TOS_MASK","IPTOS_PREC_MASK","IPTOS_ECN_NOT_ECT","RTF_UP","RTF_GATEWAY","RTF_HOST","RTF_REINSTATE","RTF_DYNAMIC","RTF_MODIFIED","RTF_MTU","RTF_MSS","RTF_WINDOW","RTF_IRTT","RTF_REJECT","RTF_STATIC","RTF_XRESOLVE","RTF_NOFORWARD","RTF_THROW","RTF_NOPMTUDISC","RTF_DEFAULT","RTF_ALLONLINK","RTF_ADDRCONF","RTF_LINKRT","RTF_NONEXTHOP","RTF_CACHE","RTF_FLOW","RTF_POLICY","RTCF_VALVE","RTCF_MASQ","RTCF_NAT","RTCF_DOREDIRECT","RTCF_LOG","RTCF_DIRECTSRC","RTF_LOCAL","RTF_INTERFACE","RTF_MULTICAST","RTF_BROADCAST","RTF_NAT","RTF_ADDRCLASSMASK","RT_CLASS_UNSPEC","RT_CLASS_DEFAULT","RT_CLASS_MAIN","RT_CLASS_LOCAL","RT_CLASS_MAX","NUD_NONE","NUD_INCOMPLETE","NUD_REACHABLE","NUD_STALE","NUD_DELAY","NUD_PROBE","NUD_FAILED","NUD_NOARP","NUD_PERMANENT","NTF_USE","NTF_SELF","NTF_MASTER","NTF_PROXY","NTF_ROUTER","NDA_UNSPEC","NDA_DST","NDA_LLADDR","NDA_CACHEINFO","NDA_PROBES","NDA_VLAN","NDA_PORT","NDA_VNI","NDA_IFINDEX","NLA_ALIGNTO","NETLINK_ROUTE","NETLINK_UNUSED","NETLINK_USERSOCK","NETLINK_FIREWALL","NETLINK_SOCK_DIAG","NETLINK_NFLOG","NETLINK_XFRM","NETLINK_SELINUX","NETLINK_ISCSI","NETLINK_AUDIT","NETLINK_FIB_LOOKUP","NETLINK_CONNECTOR","NETLINK_NETFILTER","NETLINK_IP6_FW","NETLINK_DNRTMSG","NETLINK_KOBJECT_UEVENT","NETLINK_GENERIC","NETLINK_SCSITRANSPORT","NETLINK_ECRYPTFS","NETLINK_RDMA","NETLINK_CRYPTO","NETLINK_INET_DIAG","NLM_F_REQUEST","NLM_F_MULTI","NLM_F_ACK","NLM_F_ECHO","NLM_F_DUMP_INTR","NLM_F_DUMP_FILTERED","NLM_F_ROOT","NLM_F_MATCH","NLM_F_ATOMIC","NLM_F_DUMP","NLM_F_REPLACE","NLM_F_EXCL","NLM_F_CREATE","NLM_F_APPEND","NETLINK_ADD_MEMBERSHIP","NETLINK_DROP_MEMBERSHIP","NETLINK_PKTINFO","NETLINK_BROADCAST_ERROR","NETLINK_NO_ENOBUFS","NETLINK_RX_RING","NETLINK_TX_RING","NETLINK_LISTEN_ALL_NSID","NETLINK_LIST_MEMBERSHIPS","NETLINK_CAP_ACK","NLA_F_NESTED","NLA_F_NET_BYTEORDER","NLA_TYPE_MASK","TCA_UNSPEC","TCA_KIND","TCA_OPTIONS","TCA_STATS","TCA_XSTATS","TCA_RATE","TCA_FCNT","TCA_STATS2","TCA_STAB","RTM_NEWLINK","RTM_DELLINK","RTM_GETLINK","RTM_SETLINK","RTM_NEWADDR","RTM_DELADDR","RTM_GETADDR","RTM_NEWROUTE","RTM_DELROUTE","RTM_GETROUTE","RTM_NEWNEIGH","RTM_DELNEIGH","RTM_GETNEIGH","RTM_NEWRULE","RTM_DELRULE","RTM_GETRULE","RTM_NEWQDISC","RTM_DELQDISC","RTM_GETQDISC","RTM_NEWTCLASS","RTM_DELTCLASS","RTM_GETTCLASS","RTM_NEWTFILTER","RTM_DELTFILTER","RTM_GETTFILTER","RTM_NEWACTION","RTM_DELACTION","RTM_GETACTION","RTM_NEWPREFIX","RTM_GETMULTICAST","RTM_GETANYCAST","RTM_NEWNEIGHTBL","RTM_GETNEIGHTBL","RTM_SETNEIGHTBL","RTM_NEWNDUSEROPT","RTM_NEWADDRLABEL","RTM_DELADDRLABEL","RTM_GETADDRLABEL","RTM_GETDCB","RTM_SETDCB","RTM_NEWNETCONF","RTM_GETNETCONF","RTM_NEWMDB","RTM_DELMDB","RTM_GETMDB","RTM_NEWNSID","RTM_DELNSID","RTM_GETNSID","RTM_F_NOTIFY","RTM_F_CLONED","RTM_F_EQUALIZE","RTM_F_PREFIX","RTA_UNSPEC","RTA_DST","RTA_SRC","RTA_IIF","RTA_OIF","RTA_GATEWAY","RTA_PRIORITY","RTA_PREFSRC","RTA_METRICS","RTA_MULTIPATH","RTA_PROTOINFO","RTA_FLOW","RTA_CACHEINFO","RTA_SESSION","RTA_MP_ALGO","RTA_TABLE","RTA_MARK","RTA_MFC_STATS","RTN_UNSPEC","RTN_UNICAST","RTN_LOCAL","RTN_BROADCAST","RTN_ANYCAST","RTN_MULTICAST","RTN_BLACKHOLE","RTN_UNREACHABLE","RTN_PROHIBIT","RTN_THROW","RTN_NAT","RTN_XRESOLVE","RTPROT_UNSPEC","RTPROT_REDIRECT","RTPROT_KERNEL","RTPROT_BOOT","RTPROT_STATIC","RT_SCOPE_UNIVERSE","RT_SCOPE_SITE","RT_SCOPE_LINK","RT_SCOPE_HOST","RT_SCOPE_NOWHERE","RT_TABLE_UNSPEC","RT_TABLE_COMPAT","RT_TABLE_DEFAULT","RT_TABLE_MAIN","RT_TABLE_LOCAL","RTMSG_OVERRUN","RTMSG_NEWDEVICE","RTMSG_DELDEVICE","RTMSG_NEWROUTE","RTMSG_DELROUTE","RTMSG_NEWRULE","RTMSG_DELRULE","RTMSG_CONTROL","RTMSG_AR_FAILED","MAX_ADDR_LEN","ARPD_UPDATE","ARPD_LOOKUP","ARPD_FLUSH","ATF_MAGIC","SO_TIMESTAMPING","SCM_TIMESTAMPING","MODULE_INIT_IGNORE_MODVERSIONS","MODULE_INIT_IGNORE_VERMAGIC","SOF_TIMESTAMPING_TX_HARDWARE","SOF_TIMESTAMPING_TX_SOFTWARE","SOF_TIMESTAMPING_RX_HARDWARE","SOF_TIMESTAMPING_RX_SOFTWARE","SOF_TIMESTAMPING_SOFTWARE","SOF_TIMESTAMPING_SYS_HARDWARE","SOF_TIMESTAMPING_RAW_HARDWARE","ALG_SET_KEY","ALG_SET_IV","ALG_SET_OP","ALG_SET_AEAD_ASSOCLEN","ALG_SET_AEAD_AUTHSIZE","ALG_OP_DECRYPT","ALG_OP_ENCRYPT","VMADDR_CID_ANY","VMADDR_CID_HYPERVISOR","VMADDR_CID_RESERVED","VMADDR_CID_HOST","VMADDR_PORT_ANY","IN_ACCESS","IN_MODIFY","IN_ATTRIB","IN_CLOSE_WRITE","IN_CLOSE_NOWRITE","IN_CLOSE","IN_OPEN","IN_MOVED_FROM","IN_MOVED_TO","IN_MOVE","IN_CREATE","IN_DELETE","IN_DELETE_SELF","IN_MOVE_SELF","IN_UNMOUNT","IN_Q_OVERFLOW","IN_IGNORED","IN_ONLYDIR","IN_DONT_FOLLOW","IN_ISDIR","IN_ONESHOT","IN_ALL_EVENTS","IN_CLOEXEC","IN_NONBLOCK","FUTEX_WAIT","FUTEX_WAKE","FUTEX_FD","FUTEX_REQUEUE","FUTEX_CMP_REQUEUE","FUTEX_WAKE_OP","FUTEX_LOCK_PI","FUTEX_UNLOCK_PI","FUTEX_TRYLOCK_PI","FUTEX_WAIT_BITSET","FUTEX_WAKE_BITSET","FUTEX_WAIT_REQUEUE_PI","FUTEX_CMP_REQUEUE_PI","FUTEX_PRIVATE_FLAG","FUTEX_CLOCK_REALTIME","FUTEX_CMD_MASK","NLA_ALIGN","CMSG_NXTHDR","CPU_ZERO","CPU_SET","CPU_CLR","CPU_ISSET","CPU_EQUAL","major","minor","makedev","IPTOS_TOS","IPTOS_PREC","RT_TOS","RT_ADDRCLASS","RT_LOCALADDR","pthread_t","__priority_which_t","__rlimit_resource_t","statx","stx_mask","stx_blksize","stx_attributes","stx_nlink","stx_uid","stx_gid","stx_mode","__statx_pad1","stx_ino","stx_size","stx_blocks","stx_attributes_mask","stx_atime","stx_btime","stx_ctime","stx_mtime","stx_rdev_major","stx_rdev_minor","stx_dev_major","stx_dev_minor","__statx_pad2","statx_timestamp","tv_sec","tv_nsec","__statx_timestamp_pad1","aiocb","aio_fildes","aio_lio_opcode","aio_reqprio","aio_buf","aio_nbytes","aio_sigevent","aio_offset","__exit_status","e_termination","e_exit","__timeval","tv_sec","tv_usec","glob64_t","gl_pathc","gl_pathv","gl_offs","gl_flags","msghdr","msg_name","msg_namelen","msg_iov","msg_iovlen","msg_control","msg_controllen","msg_flags","cmsghdr","cmsg_len","cmsg_level","cmsg_type","termios","c_iflag","c_oflag","c_cflag","c_lflag","c_line","c_cc","c_ispeed","c_ospeed","mallinfo","arena","ordblks","smblks","hblks","hblkhd","usmblks","fsmblks","uordblks","fordblks","keepcost","nlmsghdr","nlmsg_len","nlmsg_type","nlmsg_flags","nlmsg_seq","nlmsg_pid","nlmsgerr","error","msg","nl_pktinfo","group","nl_mmap_req","nm_block_size","nm_block_nr","nm_frame_size","nm_frame_nr","nl_mmap_hdr","nm_status","nm_len","nm_group","nm_pid","nm_uid","nm_gid","nlattr","nla_len","nla_type","rtentry","rt_pad1","rt_dst","rt_gateway","rt_genmask","rt_flags","rt_pad2","rt_pad3","rt_tos","rt_class","rt_pad4","rt_metric","rt_dev","rt_mtu","rt_window","rt_irtt","utmpx","ut_type","ut_pid","ut_line","ut_id","ut_user","ut_host","ut_exit","ut_session","ut_tv","ut_addr_v6","RLIMIT_CPU","RLIMIT_FSIZE","RLIMIT_DATA","RLIMIT_STACK","RLIMIT_CORE","RLIMIT_LOCKS","RLIMIT_SIGPENDING","RLIMIT_MSGQUEUE","RLIMIT_NICE","RLIMIT_RTPRIO","RLIMIT_RTTIME","RLIMIT_NLIMITS","MS_RMT_MASK","__UT_LINESIZE","__UT_NAMESIZE","__UT_HOSTSIZE","EMPTY","RUN_LVL","BOOT_TIME","NEW_TIME","OLD_TIME","INIT_PROCESS","LOGIN_PROCESS","USER_PROCESS","DEAD_PROCESS","ACCOUNTING","SOCK_NONBLOCK","SOL_RXRPC","SOL_PPPOL2TP","SOL_PNPIPE","SOL_RDS","SOL_IUCV","SOL_CAIF","SOL_NFC","SOL_XDP","MSG_TRYHARD","LC_PAPER","LC_NAME","LC_ADDRESS","LC_TELEPHONE","LC_MEASUREMENT","LC_IDENTIFICATION","LC_PAPER_MASK","LC_NAME_MASK","LC_ADDRESS_MASK","LC_TELEPHONE_MASK","LC_MEASUREMENT_MASK","LC_IDENTIFICATION_MASK","LC_ALL_MASK","MAP_SHARED_VALIDATE","MAP_FIXED_NOREPLACE","ENOTSUP","SOCK_SEQPACKET","SOCK_DCCP","SOCK_PACKET","TCP_COOKIE_TRANSACTIONS","TCP_THIN_LINEAR_TIMEOUTS","TCP_THIN_DUPACK","TCP_USER_TIMEOUT","TCP_REPAIR","TCP_REPAIR_QUEUE","TCP_QUEUE_SEQ","TCP_REPAIR_OPTIONS","TCP_FASTOPEN","TCP_TIMESTAMP","DCCP_SOCKOPT_PACKET_SIZE","DCCP_SOCKOPT_SERVICE","DCCP_SOCKOPT_CHANGE_L","DCCP_SOCKOPT_CHANGE_R","DCCP_SOCKOPT_GET_CUR_MPS","DCCP_SOCKOPT_SERVER_TIMEWAIT","DCCP_SOCKOPT_SEND_CSCOV","DCCP_SOCKOPT_RECV_CSCOV","DCCP_SOCKOPT_AVAILABLE_CCIDS","DCCP_SOCKOPT_CCID","DCCP_SOCKOPT_TX_CCID","DCCP_SOCKOPT_RX_CCID","DCCP_SOCKOPT_QPOLICY_ID","DCCP_SOCKOPT_QPOLICY_TXQLEN","DCCP_SOCKOPT_CCID_RX_INFO","DCCP_SOCKOPT_CCID_TX_INFO","DCCP_SERVICE_LIST_MAX_LEN","SIGEV_THREAD_ID","BUFSIZ","TMP_MAX","FOPEN_MAX","POSIX_MADV_DONTNEED","_SC_EQUIV_CLASS_MAX","_SC_CHARCLASS_NAME_MAX","_SC_PII","_SC_PII_XTI","_SC_PII_SOCKET","_SC_PII_INTERNET","_SC_PII_OSI","_SC_POLL","_SC_SELECT","_SC_PII_INTERNET_STREAM","_SC_PII_INTERNET_DGRAM","_SC_PII_OSI_COTS","_SC_PII_OSI_CLTS","_SC_PII_OSI_M","_SC_T_IOV_MAX","_SC_2_C_VERSION","_SC_CHAR_BIT","_SC_CHAR_MAX","_SC_CHAR_MIN","_SC_INT_MAX","_SC_INT_MIN","_SC_LONG_BIT","_SC_WORD_BIT","_SC_MB_LEN_MAX","_SC_SSIZE_MAX","_SC_SCHAR_MAX","_SC_SCHAR_MIN","_SC_SHRT_MAX","_SC_SHRT_MIN","_SC_UCHAR_MAX","_SC_UINT_MAX","_SC_ULONG_MAX","_SC_USHRT_MAX","_SC_NL_ARGMAX","_SC_NL_LANGMAX","_SC_NL_MSGMAX","_SC_NL_NMAX","_SC_NL_SETMAX","_SC_NL_TEXTMAX","_SC_BASE","_SC_C_LANG_SUPPORT","_SC_C_LANG_SUPPORT_R","_SC_DEVICE_IO","_SC_DEVICE_SPECIFIC","_SC_DEVICE_SPECIFIC_R","_SC_FD_MGMT","_SC_FIFO","_SC_PIPE","_SC_FILE_ATTRIBUTES","_SC_FILE_LOCKING","_SC_FILE_SYSTEM","_SC_MULTI_PROCESS","_SC_SINGLE_PROCESS","_SC_NETWORKING","_SC_REGEX_VERSION","_SC_SIGNALS","_SC_SYSTEM_DATABASE","_SC_SYSTEM_DATABASE_R","_SC_USER_GROUPS","_SC_USER_GROUPS_R","_SC_LEVEL1_ICACHE_SIZE","_SC_LEVEL1_ICACHE_ASSOC","_SC_LEVEL1_ICACHE_LINESIZE","_SC_LEVEL1_DCACHE_SIZE","_SC_LEVEL1_DCACHE_ASSOC","_SC_LEVEL1_DCACHE_LINESIZE","_SC_LEVEL2_CACHE_SIZE","_SC_LEVEL2_CACHE_ASSOC","_SC_LEVEL2_CACHE_LINESIZE","_SC_LEVEL3_CACHE_SIZE","_SC_LEVEL3_CACHE_ASSOC","_SC_LEVEL3_CACHE_LINESIZE","_SC_LEVEL4_CACHE_SIZE","_SC_LEVEL4_CACHE_ASSOC","_SC_LEVEL4_CACHE_LINESIZE","O_ACCMODE","ST_RELATIME","NI_MAXHOST","ADFS_SUPER_MAGIC","AFFS_SUPER_MAGIC","CODA_SUPER_MAGIC","CRAMFS_MAGIC","EFS_SUPER_MAGIC","EXT2_SUPER_MAGIC","EXT3_SUPER_MAGIC","EXT4_SUPER_MAGIC","HPFS_SUPER_MAGIC","HUGETLBFS_MAGIC","ISOFS_SUPER_MAGIC","JFFS2_SUPER_MAGIC","MINIX_SUPER_MAGIC","MINIX_SUPER_MAGIC2","MINIX2_SUPER_MAGIC","MINIX2_SUPER_MAGIC2","MSDOS_SUPER_MAGIC","NCP_SUPER_MAGIC","NFS_SUPER_MAGIC","OPENPROM_SUPER_MAGIC","PROC_SUPER_MAGIC","QNX4_SUPER_MAGIC","REISERFS_SUPER_MAGIC","SMB_SUPER_MAGIC","TMPFS_MAGIC","USBDEVICE_SUPER_MAGIC","CPU_SETSIZE","PTRACE_TRACEME","PTRACE_PEEKTEXT","PTRACE_PEEKDATA","PTRACE_PEEKUSER","PTRACE_POKETEXT","PTRACE_POKEDATA","PTRACE_POKEUSER","PTRACE_CONT","PTRACE_KILL","PTRACE_SINGLESTEP","PTRACE_ATTACH","PTRACE_SYSCALL","PTRACE_SETOPTIONS","PTRACE_GETEVENTMSG","PTRACE_GETSIGINFO","PTRACE_SETSIGINFO","PTRACE_GETREGSET","PTRACE_SETREGSET","PTRACE_SEIZE","PTRACE_INTERRUPT","PTRACE_LISTEN","PTRACE_PEEKSIGINFO","EPOLLWAKEUP","SEEK_DATA","SEEK_HOLE","LINUX_REBOOT_MAGIC1","LINUX_REBOOT_MAGIC2","LINUX_REBOOT_MAGIC2A","LINUX_REBOOT_MAGIC2B","LINUX_REBOOT_MAGIC2C","LINUX_REBOOT_CMD_RESTART","LINUX_REBOOT_CMD_HALT","LINUX_REBOOT_CMD_CAD_ON","LINUX_REBOOT_CMD_CAD_OFF","LINUX_REBOOT_CMD_POWER_OFF","LINUX_REBOOT_CMD_RESTART2","LINUX_REBOOT_CMD_SW_SUSPEND","LINUX_REBOOT_CMD_KEXEC","TCA_PAD","TCA_DUMP_INVISIBLE","TCA_CHAIN","TCA_HW_OFFLOAD","RTM_DELNETCONF","RTM_NEWSTATS","RTM_GETSTATS","RTM_NEWCACHEREPORT","RTM_F_LOOKUP_TABLE","RTM_F_FIB_MATCH","RTA_VIA","RTA_NEWDST","RTA_PREF","RTA_ENCAP_TYPE","RTA_ENCAP","RTA_EXPIRES","RTA_PAD","RTA_UID","RTA_TTL_PROPAGATE","NTF_EXT_LEARNED","NTF_OFFLOADED","NDA_MASTER","NDA_LINK_NETNSID","NDA_SRC_VNI","IFA_FLAGS","IFA_F_MANAGETEMPADDR","IFA_F_NOPREFIXROUTE","IFA_F_MCAUTOJOIN","IFA_F_STABLE_PRIVACY","MAX_LINKS","GENL_UNS_ADMIN_PERM","GENL_ID_VFS_DQUOT","GENL_ID_PMCRAID","TIOCM_LE","TIOCM_DTR","TIOCM_RTS","TIOCM_CD","TIOCM_RI","NF_NETDEV_INGRESS","NF_NETDEV_NUMHOOKS","NFPROTO_INET","NFPROTO_NETDEV","NFT_TABLE_MAXNAMELEN","NFT_CHAIN_MAXNAMELEN","NFT_SET_MAXNAMELEN","NFT_OBJ_MAXNAMELEN","NFT_USERDATA_MAXLEN","NFT_REG_VERDICT","NFT_REG_1","NFT_REG_2","NFT_REG_3","NFT_REG_4","__NFT_REG_MAX","NFT_REG32_00","NFT_REG32_01","NFT_REG32_02","NFT_REG32_03","NFT_REG32_04","NFT_REG32_05","NFT_REG32_06","NFT_REG32_07","NFT_REG32_08","NFT_REG32_09","NFT_REG32_10","NFT_REG32_11","NFT_REG32_12","NFT_REG32_13","NFT_REG32_14","NFT_REG32_15","NFT_REG_SIZE","NFT_REG32_SIZE","NFT_CONTINUE","NFT_BREAK","NFT_JUMP","NFT_GOTO","NFT_RETURN","NFT_MSG_NEWTABLE","NFT_MSG_GETTABLE","NFT_MSG_DELTABLE","NFT_MSG_NEWCHAIN","NFT_MSG_GETCHAIN","NFT_MSG_DELCHAIN","NFT_MSG_NEWRULE","NFT_MSG_GETRULE","NFT_MSG_DELRULE","NFT_MSG_NEWSET","NFT_MSG_GETSET","NFT_MSG_DELSET","NFT_MSG_NEWSETELEM","NFT_MSG_GETSETELEM","NFT_MSG_DELSETELEM","NFT_MSG_NEWGEN","NFT_MSG_GETGEN","NFT_MSG_TRACE","NFT_MSG_NEWOBJ","NFT_MSG_GETOBJ","NFT_MSG_DELOBJ","NFT_MSG_GETOBJ_RESET","NFT_MSG_MAX","NFT_SET_ANONYMOUS","NFT_SET_CONSTANT","NFT_SET_INTERVAL","NFT_SET_MAP","NFT_SET_TIMEOUT","NFT_SET_EVAL","NFT_SET_POL_PERFORMANCE","NFT_SET_POL_MEMORY","NFT_SET_ELEM_INTERVAL_END","NFT_DATA_VALUE","NFT_DATA_VERDICT","NFT_DATA_RESERVED_MASK","NFT_DATA_VALUE_MAXLEN","NFT_BYTEORDER_NTOH","NFT_BYTEORDER_HTON","NFT_CMP_EQ","NFT_CMP_NEQ","NFT_CMP_LT","NFT_CMP_LTE","NFT_CMP_GT","NFT_CMP_GTE","NFT_RANGE_EQ","NFT_RANGE_NEQ","NFT_LOOKUP_F_INV","NFT_DYNSET_OP_ADD","NFT_DYNSET_OP_UPDATE","NFT_DYNSET_F_INV","NFT_PAYLOAD_LL_HEADER","NFT_PAYLOAD_NETWORK_HEADER","NFT_PAYLOAD_TRANSPORT_HEADER","NFT_PAYLOAD_CSUM_NONE","NFT_PAYLOAD_CSUM_INET","NFT_META_LEN","NFT_META_PROTOCOL","NFT_META_PRIORITY","NFT_META_MARK","NFT_META_IIF","NFT_META_OIF","NFT_META_IIFNAME","NFT_META_OIFNAME","NFT_META_IIFTYPE","NFT_META_OIFTYPE","NFT_META_SKUID","NFT_META_SKGID","NFT_META_NFTRACE","NFT_META_RTCLASSID","NFT_META_SECMARK","NFT_META_NFPROTO","NFT_META_L4PROTO","NFT_META_BRI_IIFNAME","NFT_META_BRI_OIFNAME","NFT_META_PKTTYPE","NFT_META_CPU","NFT_META_IIFGROUP","NFT_META_OIFGROUP","NFT_META_CGROUP","NFT_META_PRANDOM","NFT_CT_STATE","NFT_CT_DIRECTION","NFT_CT_STATUS","NFT_CT_MARK","NFT_CT_SECMARK","NFT_CT_EXPIRATION","NFT_CT_HELPER","NFT_CT_L3PROTOCOL","NFT_CT_SRC","NFT_CT_DST","NFT_CT_PROTOCOL","NFT_CT_PROTO_SRC","NFT_CT_PROTO_DST","NFT_CT_LABELS","NFT_CT_PKTS","NFT_CT_BYTES","NFT_LIMIT_PKTS","NFT_LIMIT_PKT_BYTES","NFT_LIMIT_F_INV","NFT_QUEUE_FLAG_BYPASS","NFT_QUEUE_FLAG_CPU_FANOUT","NFT_QUEUE_FLAG_MASK","NFT_QUOTA_F_INV","NFT_REJECT_ICMP_UNREACH","NFT_REJECT_TCP_RST","NFT_REJECT_ICMPX_UNREACH","NFT_REJECT_ICMPX_NO_ROUTE","NFT_REJECT_ICMPX_PORT_UNREACH","NFT_REJECT_ICMPX_HOST_UNREACH","NFT_REJECT_ICMPX_ADMIN_PROHIBITED","NFT_NAT_SNAT","NFT_NAT_DNAT","NFT_TRACETYPE_UNSPEC","NFT_TRACETYPE_POLICY","NFT_TRACETYPE_RETURN","NFT_TRACETYPE_RULE","NFT_NG_INCREMENTAL","NFT_NG_RANDOM","M_MXFAST","M_NLBLKS","M_GRAIN","M_KEEP","M_TRIM_THRESHOLD","M_TOP_PAD","M_MMAP_THRESHOLD","M_MMAP_MAX","M_CHECK_ACTION","M_PERTURB","M_ARENA_TEST","M_ARENA_MAX","AT_STATX_SYNC_TYPE","AT_STATX_SYNC_AS_STAT","AT_STATX_FORCE_SYNC","AT_STATX_DONT_SYNC","STATX_TYPE","STATX_MODE","STATX_NLINK","STATX_UID","STATX_GID","STATX_ATIME","STATX_MTIME","STATX_CTIME","STATX_INO","STATX_SIZE","STATX_BLOCKS","STATX_BASIC_STATS","STATX_BTIME","STATX_ALL","STATX__RESERVED","STATX_ATTR_COMPRESSED","STATX_ATTR_IMMUTABLE","STATX_ATTR_APPEND","STATX_ATTR_NODUMP","STATX_ATTR_ENCRYPTED","STATX_ATTR_AUTOMOUNT","PTHREAD_STACK_MIN","PTHREAD_MUTEX_ADAPTIVE_NP","clock_t","time_t","ino_t","off_t","blkcnt_t","shmatt_t","msgqnum_t","msglen_t","fsblkcnt_t","fsfilcnt_t","rlim_t","__fsword_t","sigset_t","sysinfo","uptime","loads","totalram","freeram","sharedram","bufferram","totalswap","freeswap","procs","pad","totalhigh","freehigh","mem_unit","_f","msqid_ds","msg_perm","msg_stime","msg_rtime","msg_ctime","msg_qnum","msg_qbytes","msg_lspid","msg_lrpid","RLIM_INFINITY","__SIZEOF_PTHREAD_RWLOCKATTR_T","O_LARGEFILE","c_char","wchar_t","nlink_t","blksize_t","greg_t","suseconds_t","__u64","sigaction","sa_sigaction","sa_mask","sa_flags","sa_restorer","statfs","f_type","f_bsize","f_blocks","f_bfree","f_bavail","f_files","f_ffree","f_fsid","f_namelen","f_frsize","flock","l_type","l_whence","l_start","l_len","l_pid","flock64","l_type","l_whence","l_start","l_len","l_pid","siginfo_t","si_signo","si_errno","si_code","stack_t","ss_sp","ss_flags","ss_size","stat","st_dev","st_ino","st_nlink","st_mode","st_uid","st_gid","st_rdev","st_size","st_blksize","st_blocks","st_atime","st_atime_nsec","st_mtime","st_mtime_nsec","st_ctime","st_ctime_nsec","stat64","st_dev","st_ino","st_nlink","st_mode","st_uid","st_gid","st_rdev","st_size","st_blksize","st_blocks","st_atime","st_atime_nsec","st_mtime","st_mtime_nsec","st_ctime","st_ctime_nsec","statfs64","f_type","f_bsize","f_blocks","f_bfree","f_bavail","f_files","f_ffree","f_fsid","f_namelen","f_frsize","f_flags","f_spare","statvfs64","f_bsize","f_frsize","f_blocks","f_bfree","f_bavail","f_files","f_ffree","f_favail","f_fsid","f_flag","f_namemax","pthread_attr_t","_libc_fpxreg","significand","exponent","_libc_xmmreg","element","_libc_fpstate","cwd","swd","ftw","fop","rip","rdp","mxcsr","mxcr_mask","_st","_xmm","user_regs_struct","r15","r14","r13","r12","rbp","rbx","r11","r10","r9","r8","rax","rcx","rdx","rsi","rdi","orig_rax","rip","cs","eflags","rsp","ss","fs_base","gs_base","ds","es","fs","gs","user","regs","u_fpvalid","i387","u_tsize","u_dsize","u_ssize","start_code","start_stack","signal","u_ar0","u_fpstate","magic","u_comm","u_debugreg","mcontext_t","gregs","fpregs","ipc_perm","__key","uid","gid","cuid","cgid","mode","__seq","shmid_ds","shm_perm","shm_segsz","shm_atime","shm_dtime","shm_ctime","shm_cpid","shm_lpid","shm_nattch","termios2","c_iflag","c_oflag","c_cflag","c_lflag","c_line","c_cc","c_ispeed","c_ospeed","ip_mreqn","imr_multiaddr","imr_address","imr_ifindex","user_fpregs_struct","cwd","swd","ftw","fop","rip","rdp","mxcsr","mxcr_mask","st_space","xmm_space","ucontext_t","uc_flags","uc_link","uc_stack","uc_mcontext","uc_sigmask","POSIX_FADV_DONTNEED","POSIX_FADV_NOREUSE","VEOF","RTLD_DEEPBIND","RTLD_GLOBAL","RTLD_NOLOAD","TIOCGSOFTCAR","TIOCSSOFTCAR","TIOCGRS485","TIOCSRS485","RLIMIT_RSS","RLIMIT_AS","RLIMIT_MEMLOCK","RLIMIT_NOFILE","RLIMIT_NPROC","O_APPEND","O_CREAT","O_EXCL","O_NOCTTY","O_NONBLOCK","O_SYNC","O_RSYNC","O_DSYNC","O_FSYNC","O_NOATIME","O_PATH","O_TMPFILE","MADV_SOFT_OFFLINE","MAP_GROWSDOWN","EDEADLK","ENAMETOOLONG","ENOLCK","ENOSYS","ENOTEMPTY","ELOOP","ENOMSG","EIDRM","ECHRNG","EL2NSYNC","EL3HLT","EL3RST","ELNRNG","EUNATCH","ENOCSI","EL2HLT","EBADE","EBADR","EXFULL","ENOANO","EBADRQC","EBADSLT","EMULTIHOP","EOVERFLOW","ENOTUNIQ","EBADFD","EBADMSG","EREMCHG","ELIBACC","ELIBBAD","ELIBSCN","ELIBMAX","ELIBEXEC","EILSEQ","ERESTART","ESTRPIPE","EUSERS","ENOTSOCK","EDESTADDRREQ","EMSGSIZE","EPROTOTYPE","ENOPROTOOPT","EPROTONOSUPPORT","ESOCKTNOSUPPORT","EOPNOTSUPP","EPFNOSUPPORT","EAFNOSUPPORT","EADDRINUSE","EADDRNOTAVAIL","ENETDOWN","ENETUNREACH","ENETRESET","ECONNABORTED","ECONNRESET","ENOBUFS","EISCONN","ENOTCONN","ESHUTDOWN","ETOOMANYREFS","ETIMEDOUT","ECONNREFUSED","EHOSTDOWN","EHOSTUNREACH","EALREADY","EINPROGRESS","ESTALE","EDQUOT","ENOMEDIUM","EMEDIUMTYPE","ECANCELED","ENOKEY","EKEYEXPIRED","EKEYREVOKED","EKEYREJECTED","EOWNERDEAD","ENOTRECOVERABLE","EHWPOISON","ERFKILL","SOL_SOCKET","SO_REUSEADDR","SO_TYPE","SO_ERROR","SO_DONTROUTE","SO_BROADCAST","SO_SNDBUF","SO_RCVBUF","SO_SNDBUFFORCE","SO_RCVBUFFORCE","SO_KEEPALIVE","SO_OOBINLINE","SO_NO_CHECK","SO_PRIORITY","SO_LINGER","SO_BSDCOMPAT","SO_REUSEPORT","SO_PASSCRED","SO_PEERCRED","SO_RCVLOWAT","SO_SNDLOWAT","SO_RCVTIMEO","SO_SNDTIMEO","SO_SECURITY_AUTHENTICATION","SO_SECURITY_ENCRYPTION_TRANSPORT","SO_SECURITY_ENCRYPTION_NETWORK","SO_BINDTODEVICE","SO_ATTACH_FILTER","SO_DETACH_FILTER","SO_GET_FILTER","SO_PEERNAME","SO_TIMESTAMP","SO_ACCEPTCONN","SO_PEERSEC","SO_PASSSEC","SO_TIMESTAMPNS","SCM_TIMESTAMPNS","SO_MARK","SO_PROTOCOL","SO_DOMAIN","SO_RXQ_OVFL","SO_WIFI_STATUS","SCM_WIFI_STATUS","SO_PEEK_OFF","SO_NOFCS","SO_LOCK_FILTER","SO_SELECT_ERR_QUEUE","SO_BUSY_POLL","SO_MAX_PACING_RATE","SO_BPF_EXTENSIONS","SO_INCOMING_CPU","SO_ATTACH_BPF","SO_DETACH_BPF","SOCK_STREAM","SOCK_DGRAM","SA_ONSTACK","SA_SIGINFO","SA_NOCLDWAIT","SIGTTIN","SIGTTOU","SIGXCPU","SIGXFSZ","SIGVTALRM","SIGPROF","SIGWINCH","SIGCHLD","SIGBUS","SIGUSR1","SIGUSR2","SIGCONT","SIGSTOP","SIGTSTP","SIGURG","SIGIO","SIGSYS","SIGSTKFLT","SIGUNUSED","SIGPOLL","SIGPWR","SIG_SETMASK","SIG_BLOCK","SIG_UNBLOCK","POLLWRNORM","POLLWRBAND","O_ASYNC","O_NDELAY","PTRACE_DETACH","EFD_NONBLOCK","F_GETLK","F_GETOWN","F_SETOWN","F_SETLK","F_SETLKW","F_RDLCK","F_WRLCK","F_UNLCK","SFD_NONBLOCK","TCSANOW","TCSADRAIN","TCSAFLUSH","TIOCLINUX","TIOCGSERIAL","TIOCEXCL","TIOCNXCL","TIOCSCTTY","TIOCSTI","TIOCMGET","TIOCMBIS","TIOCMBIC","TIOCMSET","TIOCCONS","TIOCM_ST","TIOCM_SR","TIOCM_CTS","TIOCM_CAR","TIOCM_RNG","TIOCM_DSR","SFD_CLOEXEC","NCCS","O_TRUNC","O_CLOEXEC","EBFONT","ENOSTR","ENODATA","ETIME","ENOSR","ENONET","ENOPKG","EREMOTE","ENOLINK","EADV","ESRMNT","ECOMM","EPROTO","EDOTDOT","SA_NODEFER","SA_RESETHAND","SA_RESTART","SA_NOCLDSTOP","EPOLL_CLOEXEC","EFD_CLOEXEC","__SIZEOF_PTHREAD_CONDATTR_T","__SIZEOF_PTHREAD_MUTEXATTR_T","O_DIRECT","O_DIRECTORY","O_NOFOLLOW","MAP_HUGETLB","MAP_LOCKED","MAP_NORESERVE","MAP_32BIT","MAP_ANON","MAP_ANONYMOUS","MAP_DENYWRITE","MAP_EXECUTABLE","MAP_POPULATE","MAP_NONBLOCK","MAP_STACK","EDEADLOCK","EUCLEAN","ENOTNAM","ENAVAIL","EISNAM","EREMOTEIO","FIOCLEX","FIONCLEX","FIONBIO","PTRACE_GETFPREGS","PTRACE_SETFPREGS","PTRACE_GETFPXREGS","PTRACE_SETFPXREGS","PTRACE_GETREGS","PTRACE_SETREGS","PTRACE_PEEKSIGINFO_SHARED","MCL_CURRENT","MCL_FUTURE","SIGSTKSZ","MINSIGSTKSZ","CBAUD","TAB1","TAB2","TAB3","CR1","CR2","CR3","FF1","BS1","VT1","VWERASE","VREPRINT","VSUSP","VSTART","VSTOP","VDISCARD","VTIME","IXON","IXOFF","ONLCR","CSIZE","CS6","CS7","CS8","CSTOPB","CREAD","PARENB","PARODD","HUPCL","CLOCAL","ECHOKE","ECHOE","ECHOK","ECHONL","ECHOPRT","ECHOCTL","ISIG","ICANON","PENDIN","NOFLSH","CIBAUD","CBAUDEX","VSWTC","OLCUC","NLDLY","CRDLY","TABDLY","BSDLY","FFDLY","VTDLY","XTABS","B0","B50","B75","B110","B134","B150","B200","B300","B600","B1200","B1800","B2400","B4800","B9600","B19200","B38400","EXTA","EXTB","BOTHER","B57600","B115200","B230400","B460800","B500000","B576000","B921600","B1000000","B1152000","B1500000","B2000000","B2500000","B3000000","B3500000","B4000000","VEOL","VEOL2","VMIN","IEXTEN","TOSTOP","FLUSHO","EXTPROC","TCGETS","TCSETS","TCSETSW","TCSETSF","TCGETA","TCSETA","TCSETAW","TCSETAF","TCSBRK","TCXONC","TCFLSH","TIOCINQ","TIOCGPGRP","TIOCSPGRP","TIOCOUTQ","TIOCGWINSZ","TIOCSWINSZ","FIONREAD","R15","R14","R13","R12","RBP","RBX","R11","R10","R9","R8","RAX","RCX","RDX","RSI","RDI","ORIG_RAX","RIP","CS","EFLAGS","RSP","SS","FS_BASE","GS_BASE","DS","ES","FS","GS","REG_R8","REG_R9","REG_R10","REG_R11","REG_R12","REG_R13","REG_R14","REG_R15","REG_RDI","REG_RSI","REG_RBP","REG_RBX","REG_RDX","REG_RAX","REG_RCX","REG_RSP","REG_RIP","REG_EFL","REG_CSGSFS","REG_ERR","REG_TRAPNO","REG_OLDMASK","REG_CR2","c_long","c_ulong","statvfs","f_bsize","f_frsize","f_blocks","f_bfree","f_bavail","f_files","f_ffree","f_favail","f_fsid","f_flag","f_namemax","__SIZEOF_PTHREAD_MUTEX_T","__SIZEOF_PTHREAD_RWLOCK_T","PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","SYS_read","SYS_write","SYS_open","SYS_close","SYS_stat","SYS_fstat","SYS_lstat","SYS_poll","SYS_lseek","SYS_mmap","SYS_mprotect","SYS_munmap","SYS_brk","SYS_rt_sigaction","SYS_rt_sigprocmask","SYS_rt_sigreturn","SYS_ioctl","SYS_pread64","SYS_pwrite64","SYS_readv","SYS_writev","SYS_access","SYS_pipe","SYS_select","SYS_sched_yield","SYS_mremap","SYS_msync","SYS_mincore","SYS_madvise","SYS_shmget","SYS_shmat","SYS_shmctl","SYS_dup","SYS_dup2","SYS_pause","SYS_nanosleep","SYS_getitimer","SYS_alarm","SYS_setitimer","SYS_getpid","SYS_sendfile","SYS_socket","SYS_connect","SYS_accept","SYS_sendto","SYS_recvfrom","SYS_sendmsg","SYS_recvmsg","SYS_shutdown","SYS_bind","SYS_listen","SYS_getsockname","SYS_getpeername","SYS_socketpair","SYS_setsockopt","SYS_getsockopt","SYS_clone","SYS_fork","SYS_vfork","SYS_execve","SYS_exit","SYS_wait4","SYS_kill","SYS_uname","SYS_semget","SYS_semop","SYS_semctl","SYS_shmdt","SYS_msgget","SYS_msgsnd","SYS_msgrcv","SYS_msgctl","SYS_fcntl","SYS_flock","SYS_fsync","SYS_fdatasync","SYS_truncate","SYS_ftruncate","SYS_getdents","SYS_getcwd","SYS_chdir","SYS_fchdir","SYS_rename","SYS_mkdir","SYS_rmdir","SYS_creat","SYS_link","SYS_unlink","SYS_symlink","SYS_readlink","SYS_chmod","SYS_fchmod","SYS_chown","SYS_fchown","SYS_lchown","SYS_umask","SYS_gettimeofday","SYS_getrlimit","SYS_getrusage","SYS_sysinfo","SYS_times","SYS_ptrace","SYS_getuid","SYS_syslog","SYS_getgid","SYS_setuid","SYS_setgid","SYS_geteuid","SYS_getegid","SYS_setpgid","SYS_getppid","SYS_getpgrp","SYS_setsid","SYS_setreuid","SYS_setregid","SYS_getgroups","SYS_setgroups","SYS_setresuid","SYS_getresuid","SYS_setresgid","SYS_getresgid","SYS_getpgid","SYS_setfsuid","SYS_setfsgid","SYS_getsid","SYS_capget","SYS_capset","SYS_rt_sigpending","SYS_rt_sigtimedwait","SYS_rt_sigqueueinfo","SYS_rt_sigsuspend","SYS_sigaltstack","SYS_utime","SYS_mknod","SYS_uselib","SYS_personality","SYS_ustat","SYS_statfs","SYS_fstatfs","SYS_sysfs","SYS_getpriority","SYS_setpriority","SYS_sched_setparam","SYS_sched_getparam","SYS_sched_setscheduler","SYS_sched_getscheduler","SYS_sched_get_priority_max","SYS_sched_get_priority_min","SYS_sched_rr_get_interval","SYS_mlock","SYS_munlock","SYS_mlockall","SYS_munlockall","SYS_vhangup","SYS_modify_ldt","SYS_pivot_root","SYS__sysctl","SYS_prctl","SYS_arch_prctl","SYS_adjtimex","SYS_setrlimit","SYS_chroot","SYS_sync","SYS_acct","SYS_settimeofday","SYS_mount","SYS_umount2","SYS_swapon","SYS_swapoff","SYS_reboot","SYS_sethostname","SYS_setdomainname","SYS_iopl","SYS_ioperm","SYS_create_module","SYS_init_module","SYS_delete_module","SYS_get_kernel_syms","SYS_query_module","SYS_quotactl","SYS_nfsservctl","SYS_getpmsg","SYS_putpmsg","SYS_afs_syscall","SYS_tuxcall","SYS_security","SYS_gettid","SYS_readahead","SYS_setxattr","SYS_lsetxattr","SYS_fsetxattr","SYS_getxattr","SYS_lgetxattr","SYS_fgetxattr","SYS_listxattr","SYS_llistxattr","SYS_flistxattr","SYS_removexattr","SYS_lremovexattr","SYS_fremovexattr","SYS_tkill","SYS_time","SYS_futex","SYS_sched_setaffinity","SYS_sched_getaffinity","SYS_set_thread_area","SYS_io_setup","SYS_io_destroy","SYS_io_getevents","SYS_io_submit","SYS_io_cancel","SYS_get_thread_area","SYS_lookup_dcookie","SYS_epoll_create","SYS_epoll_ctl_old","SYS_epoll_wait_old","SYS_remap_file_pages","SYS_getdents64","SYS_set_tid_address","SYS_restart_syscall","SYS_semtimedop","SYS_fadvise64","SYS_timer_create","SYS_timer_settime","SYS_timer_gettime","SYS_timer_getoverrun","SYS_timer_delete","SYS_clock_settime","SYS_clock_gettime","SYS_clock_getres","SYS_clock_nanosleep","SYS_exit_group","SYS_epoll_wait","SYS_epoll_ctl","SYS_tgkill","SYS_utimes","SYS_vserver","SYS_mbind","SYS_set_mempolicy","SYS_get_mempolicy","SYS_mq_open","SYS_mq_unlink","SYS_mq_timedsend","SYS_mq_timedreceive","SYS_mq_notify","SYS_mq_getsetattr","SYS_kexec_load","SYS_waitid","SYS_add_key","SYS_request_key","SYS_keyctl","SYS_ioprio_set","SYS_ioprio_get","SYS_inotify_init","SYS_inotify_add_watch","SYS_inotify_rm_watch","SYS_migrate_pages","SYS_openat","SYS_mkdirat","SYS_mknodat","SYS_fchownat","SYS_futimesat","SYS_newfstatat","SYS_unlinkat","SYS_renameat","SYS_linkat","SYS_symlinkat","SYS_readlinkat","SYS_fchmodat","SYS_faccessat","SYS_pselect6","SYS_ppoll","SYS_unshare","SYS_set_robust_list","SYS_get_robust_list","SYS_splice","SYS_tee","SYS_sync_file_range","SYS_vmsplice","SYS_move_pages","SYS_utimensat","SYS_epoll_pwait","SYS_signalfd","SYS_timerfd_create","SYS_eventfd","SYS_fallocate","SYS_timerfd_settime","SYS_timerfd_gettime","SYS_accept4","SYS_signalfd4","SYS_eventfd2","SYS_epoll_create1","SYS_dup3","SYS_pipe2","SYS_inotify_init1","SYS_preadv","SYS_pwritev","SYS_rt_tgsigqueueinfo","SYS_perf_event_open","SYS_recvmmsg","SYS_fanotify_init","SYS_fanotify_mark","SYS_prlimit64","SYS_name_to_handle_at","SYS_open_by_handle_at","SYS_clock_adjtime","SYS_syncfs","SYS_sendmmsg","SYS_setns","SYS_getcpu","SYS_process_vm_readv","SYS_process_vm_writev","SYS_kcmp","SYS_finit_module","SYS_sched_setattr","SYS_sched_getattr","SYS_renameat2","SYS_seccomp","SYS_getrandom","SYS_memfd_create","SYS_kexec_file_load","SYS_bpf","SYS_execveat","SYS_userfaultfd","SYS_membarrier","SYS_mlock2","SYS_copy_file_range","SYS_preadv2","SYS_pwritev2","SYS_pkey_mprotect","SYS_pkey_alloc","SYS_pkey_free","SYS_statx","max_align_t","sem_t","pthread_mutexattr_t","pthread_rwlockattr_t","pthread_condattr_t","pthread_cond_t","pthread_mutex_t","pthread_rwlock_t","c_void","in6_addr","s6_addr","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","fmt","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","si_addr","si_value"],"q":["libcdhe 64-bit libc on Solaris and illumos only has …op-by-hop option header","group mgmt protocol","for compatibility","exterior gateway protocol","pup","xns idp","tp-4 w/ class negotiation","DCCP","IP6 routing header","IP6 fragmentation header","resource reservation","General Routing Encap.","IP6 Encap Sec. Payload","IP6 Auth Header","IP6 no next header","IP6 destination option","","","encapsulation header","Protocol indep. multicast","IP Payload Comp. Protocol","SCTP","","","","raw IP packet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maximum number of services provided on the same listening …quivalent to C’s <code>void</code> type when used as a [pointerif":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["c_uint",6]],["c_uint",6]],[[["c_uint",6]],["c_uint",6]],[[["c_int",6]]],[[["c_int",6]],["bool",15]],[[["c_int",6]]],[[]],[[["c_int",6]],["bool",15]],[[["c_int",6]],["c_int",6]],[[["c_int",6]],["bool",15]],[[["c_int",6]],["bool",15]],[[["c_int",6]],["c_int",6]],[[["c_int",6]],["bool",15]],[[["c_int",6]],["c_int",6]],[[["c_int",6]],["bool",15]],[[["c_int",6]],["c_int",6]],[[["u8",15]],["u8",15]],[[["u8",15]],["u8",15]],[[["u8",15]],["u8",15]],[[["u8",15]],["u8",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["c_int",6]],["c_int",6]],[[]],[[["cpu_set_t",3]]],[[["usize",15],["cpu_set_t",3]]],[[["usize",15],["cpu_set_t",3]]],[[["usize",15],["cpu_set_t",3]],["bool",15]],[[["cpu_set_t",3]],["bool",15]],[[["dev_t",6]],["c_uint",6]],[[["dev_t",6]],["c_uint",6]],[[["c_uint",6]],["dev_t",6]],[[["u8",15]],["u8",15]],[[["u8",15]],["u8",15]],[[["u8",15]],["u8",15]],[[["u32",15]],["u32",15]],[[["u32",15]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],[["result",4],["error",3]]],[[],["dir",4]],[[],["group",3]],[[],["utimbuf",3]],[[],["timeval",3]],[[],["timespec",3]],[[],["rlimit",3]],[[],["rusage",3]],[[],["ipv6_mreq",3]],[[],["hostent",3]],[[],["iovec",3]],[[],["pollfd",3]],[[],["winsize",3]],[[],["linger",3]],[[],["sigval",3]],[[],["itimerval",3]],[[],["tms",3]],[[],["servent",3]],[[],["protoent",3]],[[],["file",4]],[[],["fpos_t",4]],[[],["timezone",4]],[[],["in_addr",3]],[[],["ip_mreq",3]],[[],["ip_mreq_source",3]],[[],["sockaddr",3]],[[],["sockaddr_in",3]],[[],["sockaddr_in6",3]],[[],["addrinfo",3]],[[],["sockaddr_ll",3]],[[],["fd_set",3]],[[],["tm",3]],[[],["sched_param",3]],[[],["dl_info",3]],[[],["lconv",3]],[[],["in_pktinfo",3]],[[],["ifaddrs",3]],[[],["in6_rtmsg",3]],[[],["arpreq",3]],[[],["arpreq_old",3]],[[],["arphdr",3]],[[],["mmsghdr",3]],[[],["epoll_event",3]],[[],["sockaddr_un",3]],[[],["sockaddr_storage",3]],[[],["utsname",3]],[[],["sigevent",3]],[[],["fpos64_t",4]],[[],["rlimit64",3]],[[],["glob_t",3]],[[],["passwd",3]],[[],["spwd",3]],[[],["dqblk",3]],[[],["signalfd_siginfo",3]],[[],["itimerspec",3]],[[],["fsid_t",3]],[[],["packet_mreq",3]],[[],["cpu_set_t",3]],[[],["if_nameindex",3]],[[],["msginfo",3]],[[],["sembuf",3]],[[],["input_event",3]],[[],["input_id",3]],[[],["input_absinfo",3]],[[],["input_keymap_entry",3]],[[],["input_mask",3]],[[],["ff_replay",3]],[[],["ff_trigger",3]],[[],["ff_envelope",3]],[[],["ff_constant_effect",3]],[[],["ff_ramp_effect",3]],[[],["ff_condition_effect",3]],[[],["ff_periodic_effect",3]],[[],["ff_rumble_effect",3]],[[],["ff_effect",3]],[[],["dl_phdr_info",3]],[[],["elf32_ehdr",3]],[[],["elf64_ehdr",3]],[[],["elf32_sym",3]],[[],["elf64_sym",3]],[[],["elf32_phdr",3]],[[],["elf64_phdr",3]],[[],["elf32_shdr",3]],[[],["elf64_shdr",3]],[[],["elf32_chdr",3]],[[],["elf64_chdr",3]],[[],["ucred",3]],[[],["mntent",3]],[[],["posix_spawn_file_actions_t",3]],[[],["posix_spawnattr_t",3]],[[],["genlmsghdr",3]],[[],["in6_pktinfo",3]],[[],["arpd_request",3]],[[],["inotify_event",3]],[[],["sockaddr_vm",3]],[[],["sockaddr_nl",3]],[[],["dirent",3]],[[],["dirent64",3]],[[],["sockaddr_alg",3]],[[],["af_alg_iv",3]],[[],["mq_attr",3]],[[],["statx",3]],[[],["statx_timestamp",3]],[[],["aiocb",3]],[[],["__exit_status",3]],[[],["__timeval",3]],[[],["glob64_t",3]],[[],["msghdr",3]],[[],["cmsghdr",3]],[[],["termios",3]],[[],["mallinfo",3]],[[],["nlmsghdr",3]],[[],["nlmsgerr",3]],[[],["nl_pktinfo",3]],[[],["nl_mmap_req",3]],[[],["nl_mmap_hdr",3]],[[],["nlattr",3]],[[],["rtentry",3]],[[],["utmpx",3]],[[],["sigset_t",3]],[[],["sysinfo",3]],[[],["msqid_ds",3]],[[],["sigaction",3]],[[],["statfs",3]],[[],["flock",3]],[[],["flock64",3]],[[],["siginfo_t",3]],[[],["stack_t",3]],[[],["stat",3]],[[],["stat64",3]],[[],["statfs64",3]],[[],["statvfs64",3]],[[],["pthread_attr_t",3]],[[],["_libc_fpxreg",3]],[[],["_libc_xmmreg",3]],[[],["_libc_fpstate",3]],[[],["user_regs_struct",3]],[[],["user",3]],[[],["mcontext_t",3]],[[],["ipc_perm",3]],[[],["shmid_ds",3]],[[],["termios2",3]],[[],["ip_mreqn",3]],[[],["user_fpregs_struct",3]],[[],["ucontext_t",3]],[[],["statvfs",3]],[[],["max_align_t",3]],[[],["sem_t",3]],[[],["pthread_mutexattr_t",3]],[[],["pthread_rwlockattr_t",3]],[[],["pthread_condattr_t",3]],[[],["pthread_cond_t",3]],[[],["pthread_mutex_t",3]],[[],["pthread_rwlock_t",3]],[[],["in6_addr",3]],[[]],[[],["sigval",3]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"in_addr"],[3,"ip_mreq"],[3,"ip_mreq_source"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"mmsghdr"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"sigevent"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"Elf32_Chdr"],[3,"Elf64_Chdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"inotify_event"],[3,"sockaddr_vm"],[3,"sockaddr_nl"],[3,"dirent"],[3,"dirent64"],[3,"sockaddr_alg"],[3,"af_alg_iv"],[3,"mq_attr"],[3,"statx"],[3,"statx_timestamp"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"glob64_t"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"utmpx"],[3,"sysinfo"],[3,"msqid_ds"],[3,"sigaction"],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,"siginfo_t"],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"ip_mreqn"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"in6_addr"],[3,"max_align_t"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[4,"fpos64_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[4,"timezone"],[3,"fd_set"],[3,"in6_rtmsg"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,"c_void"]]},\
"lzw":{"doc":"LZW decoder and encoder","t":[3,3,3,5,8,10,8,10,3,3,3,3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Decoder","DecoderEarlyChange","Encoder","encode","BitReader","read_bits","BitWriter","write_bits","LsbReader","LsbWriter","MsbReader","MsbWriter","Bits","Some","None","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","read_bits","read_bits","write_bits","write_bits","drop","fmt","fmt","fmt","fmt","write","flush","write","flush","new","decode_bytes","new","decode_bytes","new","encode_bytes","new","new","new","new"],"q":["lzw","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Decoder for a LZW compressed stream (this algorithm is …","Decoder for a LZW compressed stream using an “early …","LZW encoder using the algorithm of GIF files.","Convenience function that reads and compresses all bytes …","A bit reader.","Returns the next <code>n</code> bits.","A bit writer.","Writes the next <code>n</code> bits.","Reads bits from a byte stream, LSB first.","Writes bits to a byte stream, LSB first.","Reads bits from a byte stream, MSB first.","Writes bits to a byte stream, MSB first.","Containes either the consumed bytes and reconstructed …","Consumed bytes, reconstructed bits","Consumed bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new LZW decoder. ","Tries to obtain and decode a code word from <code>bytes</code>.","Creates a new LZW decoder. ","Tries to obtain and decode a code word from <code>bytes</code>.","Creates a new LZW encoder.","Compresses <code>bytes</code> and writes the result into the writer.","Creates a new bit reader","Creates a new bit reader","Creates a new bit reader","Creates a new bit reader"],"i":[0,0,0,0,0,1,0,2,0,0,0,0,0,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6,6,6,6,6,6,6,3,3,3,3,3,3,3,7,7,7,7,7,7,7,8,8,8,8,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,7,8,9,10,6,4,5,7,8,9,9,10,10,4,4,5,5,6,6,7,8,9,10],"f":[null,null,null,[[["u8",15]],["result",6]],null,[[["u8",15]],["bits",4]],null,[[["u16",15],["u8",15]],["result",6]],null,null,null,null,null,null,null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["u8",15]],["bits",4]],[[["u8",15]],["bits",4]],[[["u16",15],["u8",15]],["result",6]],[[["u16",15],["u8",15]],["result",6]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],[["usize",15],["result",6]]],[[],["result",6]],[[],[["usize",15],["result",6]]],[[],["result",6]],[[["u8",15]],["decoder",3]],[[],["result",6]],[[["u8",15]],["decoderearlychange",3]],[[],["result",6]],[[["u8",15]],[["result",6],["encoder",3]]],[[],["result",6]],[[],["lsbreader",3]],[[],["msbreader",3]],[[],["lsbwriter",3]],[[],["msbwriter",3]]],"p":[[8,"BitReader"],[8,"BitWriter"],[4,"Bits"],[3,"Decoder"],[3,"DecoderEarlyChange"],[3,"Encoder"],[3,"LsbReader"],[3,"MsbReader"],[3,"LsbWriter"],[3,"MsbWriter"]]},\
"memoffset":{"doc":"A crate used for calculating offsets of struct members …","t":[14,14],"n":["offset_of","span_of"],"q":["memoffset",""],"d":["Calculates the offset of the specified field from the …","Produces a range instance representing the sub-slice …"],"i":[0,0],"f":[null,null],"p":[]},\
"num":{"doc":"A collection of numeric types and traits for Rust.","t":[0,8,10,10,11,10,10,11,11,11,10,10,10,10,10,11,11,11,3,12,12,12,5,5,5,5,5,5,5,5,3,5,5,8,10,11,11,5,5,5,0,3,5,3,5,3,5,3,5,0,0,8,10,10,0,8,11,11,11,11,10,11,11,11,11,11,10,11,11,11,8,11,11,11,11,10,11,11,11,11,11,10,11,11,11,5,8,10,8,10,0,8,10,10,10,10,10,10,10,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,8,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,0,8,10,11,10,8,10,11,11,5,5,0,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,8,10,8,10,8,10,8,10,8,10,8,10,8,10,8,10,0,8,16,10,0,8,16,10,8,10,0,8,10,10,0,8,10,8,10,8,10,8,10,8,10,0,8,16,10,5,5,0,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,8,10,10,10,10,10,5,5,5,8,8,16,10,8,8,8,8,8,8,4,13,13,3,12,5,5,5,8,10,10,8,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,5,8,10,8,11,11,11,11,10,11,11,11,11,11,10,11,11,11,8,10,8,11,11,11,11,10,11,11,11,11,11,10,11,11,11,5,5,8,10,11,11,8,10,11,10,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,8,10,8,10,8,10,8,10,8,10,8,10,8,10,8,10,8,16,10,8,16,10,8,10,8,10,10,8,10,8,10,8,10,8,10,8,10,5,5,8,16,10,5,5,5,8,10,10,10,10,10,8,8,10,10,11,10,10,11,11,11,10,10,10,10,10,11,11,11,5,5,5,5,8,16,10,8,10,11,10,8,10,11,11,8,10,10,10,10,10,8,8,10,10,5,5,5,5,5,8,10,10,8,10,8,10,8,10,8,10,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,8,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,8,11,11,11,11,10,11,11,11,11,11,10,11,11,11,8,11,11,11,11,10,11,11,11,11,11,10,11,11,11,8,10,0,8,11,11,11,11,10,11,11,11,11,11,10,11,11,11,8,11,11,11,11,10,11,11,11,11,11,10,11,11,11,5,8,10,8,10,5,0,8,16,10,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["integer","Integer","div_floor","mod_floor","div_ceil","gcd","lcm","gcd_lcm","extended_gcd","extended_gcd_lcm","divides","is_multiple_of","is_even","is_odd","div_rem","div_mod_floor","next_multiple_of","prev_multiple_of","ExtendedGcd","gcd","x","y","div_rem","div_floor","mod_floor","div_mod_floor","div_ceil","gcd","lcm","gcd_lcm","IterBinomial","binomial","multinomial","Roots","nth_root","sqrt","cbrt","cbrt","nth_root","sqrt","iter","Range","range","RangeInclusive","range_inclusive","RangeStep","range_step","RangeStepInclusive","range_step_inclusive","traits","bounds","Bounded","min_value","max_value","cast","ToPrimitive","to_isize","to_i8","to_i16","to_i32","to_i64","to_i128","to_usize","to_u8","to_u16","to_u32","to_u64","to_u128","to_f32","to_f64","FromPrimitive","from_isize","from_i8","from_i16","from_i32","from_i64","from_i128","from_usize","from_u8","from_u16","from_u32","from_u64","from_u128","from_f32","from_f64","cast","NumCast","from","AsPrimitive","as_","float","FloatCore","infinity","neg_infinity","nan","neg_zero","min_value","min_positive_value","epsilon","max_value","is_nan","is_infinite","is_finite","is_normal","classify","floor","ceil","round","trunc","fract","abs","signum","is_sign_positive","is_sign_negative","min","max","recip","powi","to_degrees","to_radians","integer_decode","Float","nan","infinity","neg_infinity","neg_zero","min_value","min_positive_value","epsilon","max_value","is_nan","is_infinite","is_finite","is_normal","classify","floor","ceil","round","trunc","fract","abs","signum","is_sign_positive","is_sign_negative","mul_add","recip","powi","powf","sqrt","exp","exp2","ln","log","log2","log10","to_degrees","to_radians","max","min","abs_sub","cbrt","hypot","sin","cos","tan","asin","acos","atan","atan2","sin_cos","exp_m1","ln_1p","sinh","cosh","tanh","asinh","acosh","atanh","integer_decode","FloatConst","E","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","LN_10","LN_2","LOG10_E","LOG2_E","PI","SQRT_2","TAU","identities","Zero","zero","set_zero","is_zero","One","one","set_one","is_one","zero","one","int","PrimInt","count_ones","count_zeros","leading_zeros","trailing_zeros","rotate_left","rotate_right","signed_shl","signed_shr","unsigned_shl","unsigned_shr","swap_bytes","from_be","from_le","to_be","to_le","pow","ops","checked","CheckedAdd","checked_add","CheckedSub","checked_sub","CheckedMul","checked_mul","CheckedDiv","checked_div","CheckedRem","checked_rem","CheckedNeg","checked_neg","CheckedShl","checked_shl","CheckedShr","checked_shr","inv","Inv","Output","inv","mul_add","MulAdd","Output","mul_add","MulAddAssign","mul_add_assign","saturating","Saturating","saturating_add","saturating_sub","wrapping","WrappingAdd","wrapping_add","WrappingSub","wrapping_sub","WrappingMul","wrapping_mul","WrappingShl","wrapping_shl","WrappingShr","wrapping_shr","pow","Pow","Output","pow","pow","checked_pow","real","Real","min_value","min_positive_value","epsilon","max_value","floor","ceil","round","trunc","fract","abs","signum","is_sign_positive","is_sign_negative","mul_add","recip","powi","powf","sqrt","exp","exp2","ln","log","log2","log10","to_degrees","to_radians","max","min","abs_sub","cbrt","hypot","sin","cos","tan","asin","acos","atan","atan2","sin_cos","exp_m1","ln_1p","sinh","cosh","tanh","asinh","acosh","atanh","sign","Signed","abs","abs_sub","signum","is_positive","is_negative","abs","abs_sub","signum","Unsigned","Num","FromStrRadixErr","from_str_radix","NumOps","NumRef","RefNum","NumAssignOps","NumAssign","NumAssignRef","FloatErrorKind","Empty","Invalid","ParseFloatError","kind","clamp","clamp_min","clamp_max","Bounded","min_value","max_value","Float","nan","infinity","neg_infinity","neg_zero","min_value","min_positive_value","epsilon","max_value","is_nan","is_infinite","is_finite","is_normal","classify","floor","ceil","round","trunc","fract","abs","signum","is_sign_positive","is_sign_negative","mul_add","recip","powi","powf","sqrt","exp","exp2","ln","log","log2","log10","to_degrees","to_radians","max","min","abs_sub","cbrt","hypot","sin","cos","tan","asin","acos","atan","atan2","sin_cos","exp_m1","ln_1p","sinh","cosh","tanh","asinh","acosh","atanh","integer_decode","FloatConst","E","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","LN_10","LN_2","LOG10_E","LOG2_E","PI","SQRT_2","TAU","cast","AsPrimitive","as_","FromPrimitive","from_isize","from_i8","from_i16","from_i32","from_i64","from_i128","from_usize","from_u8","from_u16","from_u32","from_u64","from_u128","from_f32","from_f64","NumCast","from","ToPrimitive","to_isize","to_i8","to_i16","to_i32","to_i64","to_i128","to_usize","to_u8","to_u16","to_u32","to_u64","to_u128","to_f32","to_f64","one","zero","One","one","set_one","is_one","Zero","zero","set_zero","is_zero","PrimInt","count_ones","count_zeros","leading_zeros","trailing_zeros","rotate_left","rotate_right","signed_shl","signed_shr","unsigned_shl","unsigned_shr","swap_bytes","from_be","from_le","to_be","to_le","pow","CheckedAdd","checked_add","CheckedDiv","checked_div","CheckedMul","checked_mul","CheckedNeg","checked_neg","CheckedRem","checked_rem","CheckedShl","checked_shl","CheckedShr","checked_shr","CheckedSub","checked_sub","Inv","Output","inv","MulAdd","Output","mul_add","MulAddAssign","mul_add_assign","Saturating","saturating_add","saturating_sub","WrappingAdd","wrapping_add","WrappingMul","wrapping_mul","WrappingShl","wrapping_shl","WrappingShr","wrapping_shr","WrappingSub","wrapping_sub","checked_pow","pow","Pow","Output","pow","abs","abs_sub","signum","Signed","abs","abs_sub","signum","is_positive","is_negative","Unsigned","Integer","div_floor","mod_floor","div_ceil","gcd","lcm","gcd_lcm","extended_gcd","extended_gcd_lcm","divides","is_multiple_of","is_even","is_odd","div_rem","div_mod_floor","next_multiple_of","prev_multiple_of","range","range_inclusive","range_step","range_step_inclusive","Num","FromStrRadixErr","from_str_radix","Zero","zero","set_zero","is_zero","One","one","set_one","is_one","Signed","abs","abs_sub","signum","is_positive","is_negative","Unsigned","Bounded","min_value","max_value","one","zero","abs","abs_sub","signum","Saturating","saturating_add","saturating_sub","CheckedAdd","checked_add","CheckedSub","checked_sub","CheckedMul","checked_mul","CheckedDiv","checked_div","PrimInt","count_ones","count_zeros","leading_zeros","trailing_zeros","rotate_left","rotate_right","signed_shl","signed_shr","unsigned_shl","unsigned_shr","swap_bytes","from_be","from_le","to_be","to_le","pow","Float","nan","infinity","neg_infinity","neg_zero","min_value","min_positive_value","epsilon","max_value","is_nan","is_infinite","is_finite","is_normal","classify","floor","ceil","round","trunc","fract","abs","signum","is_sign_positive","is_sign_negative","mul_add","recip","powi","powf","sqrt","exp","exp2","ln","log","log2","log10","to_degrees","to_radians","max","min","abs_sub","cbrt","hypot","sin","cos","tan","asin","acos","atan","atan2","sin_cos","exp_m1","ln_1p","sinh","cosh","tanh","asinh","acosh","atanh","integer_decode","ToPrimitive","to_isize","to_i8","to_i16","to_i32","to_i64","to_i128","to_usize","to_u8","to_u16","to_u32","to_u64","to_u128","to_f32","to_f64","FromPrimitive","from_isize","from_i8","from_i16","from_i32","from_i64","from_i128","from_usize","from_u8","from_u16","from_u32","from_u64","from_u128","from_f32","from_f64","NumCast","from","cast","ToPrimitive","to_isize","to_i8","to_i16","to_i32","to_i64","to_i128","to_usize","to_u8","to_u16","to_u32","to_u64","to_u128","to_f32","to_f64","FromPrimitive","from_isize","from_i8","from_i16","from_i32","from_i64","from_i128","from_usize","from_u8","from_u16","from_u32","from_u64","from_u128","from_f32","from_f64","cast","NumCast","from","AsPrimitive","as_","cast","pow","Pow","Output","pow","pow","checked_pow","pow","checked_pow","clamp","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","fmt","fmt","fmt","eq","ne","clone","next","fmt","clone","clone","clone","clone","next_back","next_back","next","size_hint","next","next","size_hint","next","new"],"q":["num","num::integer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num","num::iter","","","","","","","","num","num::traits","num::traits::bounds","","","num::traits","num::traits::cast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num::traits","num::traits::float","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num::traits","num::traits::identities","","","","","","","","","","num::traits","num::traits::int","","","","","","","","","","","","","","","","","num::traits","num::traits::ops","num::traits::ops::checked","","","","","","","","","","","","","","","","num::traits::ops","num::traits::ops::inv","","","num::traits::ops","num::traits::ops::mul_add","","","","","num::traits::ops","num::traits::ops::saturating","","","num::traits::ops","num::traits::ops::wrapping","","","","","","","","","","num::traits","num::traits::pow","","","","","num::traits","num::traits::real","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num::traits","num::traits::sign","","","","","","","","","","num::traitsnum","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num::cast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num","","num::pow","","","","","num","","","num::integer","","","","","","","","","","","","","","","","","num::iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num::traits","","","","","","","","","","","","","","","","","","num::integer","","","","","num::iter","","","","","","","","","","","","num::integer"],"d":["","","Floored integer division.","Floored integer modulo, satisfying:","Ceiled integer division.","Greatest Common Divisor (GCD).","Lowest Common Multiple (LCM).","Greatest Common Divisor (GCD) and Lowest Common Multiple …","Greatest common divisor and Bézout coefficients.","Greatest common divisor, least common multiple, and …","Deprecated, use <code>is_multiple_of</code> instead.","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.","Returns <code>true</code> if the number is even.","Returns <code>true</code> if the number is odd.","Simultaneous truncated integer division and modulus. …","Simultaneous floored integer division and modulus. …","Rounds up to nearest multiple of argument.","Rounds down to nearest multiple of argument.","Greatest common divisor and Bézout coefficients","","","","Simultaneous integer division and modulus","Floored integer division","Floored integer modulus","Simultaneous floored integer division and modulus","Ceiled integer division","Calculates the Greatest Common Divisor (GCD) of the …","Calculates the Lowest Common Multiple (LCM) of the number …","Calculates the Greatest Common Divisor (GCD) and Lowest …","An iterator over binomial coefficients.","Calculate the binomial coefficient.","Calculate the multinomial coefficient.","Provides methods to compute an integer’s square root, …","Returns the truncated principal <code>n</code>th root of an integer –…","Returns the truncated principal square root of an integer …","Returns the truncated principal cube root of an integer …","Returns the truncated principal cube root of an integer …","Returns the truncated principal <code>n</code>th root of an integer –…","Returns the truncated principal square root of an integer …","","An iterator over the range [start, stop)","Returns an iterator over the given range [start, stop) …","An iterator over the range [start, stop]","Return an iterator over the range [start, stop]","An iterator over the range [start, stop) by <code>step</code>. It …","Return an iterator over the range [start, stop) by <code>step</code>. …","An iterator over the range [start, stop] by <code>step</code>. It …","Return an iterator over the range [start, stop] by <code>step</code>. …","","","Numbers which have upper and lower bounds","returns the smallest finite number this type can represent","returns the largest finite number this type can represent","","A generic trait for converting a value to a number.","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i128</code>. If the value …","Converts the value of <code>self</code> to a <code>usize</code>. If the value …","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>f32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>f64</code>. If the value cannot …","A generic trait for converting a number to a value.","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this …","Converts a <code>usize</code> to return an optional value of this …","Converts an <code>u8</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u128</code> to return an optional value of this …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Cast from one machine scalar to another.","An interface for casting between machine scalars.","Creates a number from another value that can be converted …","A generic interface for casting between machine scalars …","Convert a value to another, using the <code>as</code> operator.","","Generic trait for floating point numbers that works with …","Returns positive infinity.","Returns negative infinity.","Returns NaN.","Returns <code>-0.0</code>.","Returns the smallest finite value that this type can …","Returns the smallest positive, normalized value that this …","Returns epsilon, a small positive value.","Returns the largest finite value that this type can …","Returns <code>true</code> if the number is NaN.","Returns <code>true</code> if the number is infinite.","Returns <code>true</code> if the number is neither infinite or NaN.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns the floating point category of the number. If …","Returns the largest integer less than or equal to a …","Returns the smallest integer greater than or equal to a …","Returns the nearest integer to a number. Round half-way …","Return the integer part of a number.","Returns the fractional part of a number.","Computes the absolute value of <code>self</code>. Returns …","Returns a number that represents the sign of <code>self</code>.","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …","Returns the minimum of the two numbers.","Returns the maximum of the two numbers.","Returns the reciprocal (multiplicative inverse) of the …","Raise a number to an integer power.","Converts to degrees, assuming the number is in radians.","Converts to radians, assuming the number is in degrees.","Returns the mantissa, base 2 exponent, and sign as …","Generic trait for floating point numbers","Returns the <code>NaN</code> value.","Returns the infinite value.","Returns the negative infinite value.","Returns <code>-0.0</code>.","Returns the smallest finite value that this type can …","Returns the smallest positive, normalized value that this …","Returns epsilon, a small positive value.","Returns the largest finite value that this type can …","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.","Returns <code>true</code> if this value is positive infinity or …","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns the floating point category of the number. If …","Returns the largest integer less than or equal to a …","Returns the smallest integer greater than or equal to a …","Returns the nearest integer to a number. Round half-way …","Return the integer part of a number.","Returns the fractional part of a number.","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","Returns a number that represents the sign of <code>self</code>.","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Raise a number to an integer power.","Raise a number to a floating point power.","Take the square root of a number.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns the natural logarithm of the number.","Returns the logarithm of the number with respect to an …","Returns the base 2 logarithm of the number.","Returns the base 10 logarithm of the number.","Converts radians to degrees.","Converts degrees to radians.","Returns the maximum of the two numbers.","Returns the minimum of the two numbers.","The positive difference of two numbers.","Take the cubic root of a number.","Calculate the length of the hypotenuse of a right-angle …","Computes the sine of a number (in radians).","Computes the cosine of a number (in radians).","Computes the tangent of a number (in radians).","Computes the arcsine of a number. Return value is in …","Computes the arccosine of a number. Return value is in …","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …","Simultaneously computes the sine and cosine of the …","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …","Hyperbolic sine function.","Hyperbolic cosine function.","Hyperbolic tangent function.","Inverse hyperbolic sine function.","Inverse hyperbolic cosine function.","Inverse hyperbolic tangent function.","Returns the mantissa, base 2 exponent, and sign as …","","Return Euler’s number.","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(e)</code>.","Return Archimedes’ constant <code>π</code>.","Return <code>sqrt(2.0)</code>.","Return the full circle constant <code>τ</code>.","","Defines an additive identity element for <code>Self</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Defines a multiplicative identity element for <code>Self</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns the additive identity, <code>0</code>.","Returns the multiplicative identity, <code>1</code>.","","Generic trait for primitive integers.","Returns the number of ones in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of leading zeros in the binary …","Returns the number of trailing zeros in the binary …","Shifts the bits to the left by a specified amount amount, …","Shifts the bits to the right by a specified amount …","Shifts the bits to the left by a specified amount amount, …","Shifts the bits to the right by a specified amount …","Shifts the bits to the left by a specified amount amount, …","Shifts the bits to the right by a specified amount …","Reverses the byte order of the integer.","Convert an integer from big endian to the target’s …","Convert an integer from little endian to the target’s …","Convert <code>self</code> to big endian from the target’s endianness.","Convert <code>self</code> to little endian from the target’s …","Raises self to the power of <code>exp</code>, using exponentiation by …","","","Performs addition that returns <code>None</code> instead of wrapping …","Adds two numbers, checking for overflow. If overflow …","Performs subtraction that returns <code>None</code> instead of …","Subtracts two numbers, checking for underflow. If …","Performs multiplication that returns <code>None</code> instead of …","Multiplies two numbers, checking for underflow or …","Performs division that returns <code>None</code> instead of panicking …","Divides two numbers, checking for underflow, overflow and …","Performs an integral remainder that returns <code>None</code> instead …","Finds the remainder of dividing two numbers, checking for …","Performs negation that returns <code>None</code> if the result can’t …","Negates a number, returning <code>None</code> for results that can’t …","Performs a left shift that returns <code>None</code> on shifts larger …","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …","Performs a right shift that returns <code>None</code> on shifts larger …","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …","","Unary operator for retrieving the multiplicative inverse, …","The result after applying the operator.","Returns the multiplicative inverse of <code>self</code>.","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The resulting type after applying the fused multiply-add.","Performs the fused multiply-add operation.","The fused multiply-add assignment operation.","Performs the fused multiply-add operation.","","Saturating math operations","Saturating addition operator. Returns a+b, saturating at …","Saturating subtraction operator. Returns a-b, saturating …","","Performs addition that wraps around on overflow.","Wrapping (modular) addition. Computes <code>self + other</code>, …","Performs subtraction that wraps around on overflow.","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","Performs multiplication that wraps around on overflow.","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Performs a left shift that does not panic.","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …","Performs a right shift that does not panic.","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …","","Binary operator for raising a value to a power.","The result after applying the operator.","Returns <code>self</code> to the power <code>rhs</code>.","Raises a value to the power of exp, using exponentiation …","Raises a value to the power of exp, returning <code>None</code> if an …","","A trait for real number types that do not necessarily have…","Returns the smallest finite value that this type can …","Returns the smallest positive, normalized value that this …","Returns epsilon, a small positive value.","Returns the largest finite value that this type can …","Returns the largest integer less than or equal to a …","Returns the smallest integer greater than or equal to a …","Returns the nearest integer to a number. Round half-way …","Return the integer part of a number.","Returns the fractional part of a number.","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","Returns a number that represents the sign of <code>self</code>.","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Raise a number to an integer power.","Raise a number to a real number power.","Take the square root of a number.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns the natural logarithm of the number.","Returns the logarithm of the number with respect to an …","Returns the base 2 logarithm of the number.","Returns the base 10 logarithm of the number.","Converts radians to degrees.","Converts degrees to radians.","Returns the maximum of the two numbers.","Returns the minimum of the two numbers.","The positive difference of two numbers.","Take the cubic root of a number.","Calculate the length of the hypotenuse of a right-angle …","Computes the sine of a number (in radians).","Computes the cosine of a number (in radians).","Computes the tangent of a number (in radians).","Computes the arcsine of a number. Return value is in …","Computes the arccosine of a number. Return value is in …","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …","Simultaneously computes the sine and cosine of the …","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …","Hyperbolic sine function.","Hyperbolic cosine function.","Hyperbolic tangent function.","Inverse hyperbolic sine function.","Inverse hyperbolic cosine function.","Inverse hyperbolic tangent function.","","Useful functions for signed numbers (i.e. numbers that …","Computes the absolute value.","The positive difference of two numbers.","Returns the sign of the number.","Returns true if the number is positive and false if the …","Returns true if the number is negative and false if the …","Computes the absolute value.","The positive difference of two numbers.","Returns the sign of the number.","A trait for values which cannot be negative","The base trait for numeric types, covering <code>0</code> and <code>1</code> values,…","","Convert from a string and radix <= 36.","The trait for types implementing basic numeric operations","The trait for <code>Num</code> types which also implement numeric …","The trait for references which implement numeric …","The trait for types implementing numeric assignment …","The trait for <code>Num</code> types which also implement assignment …","The trait for <code>NumAssign</code> types which also implement …","","","","","","A value bounded by a minimum and a maximum","A value bounded by a minimum value","A value bounded by a maximum value","Numbers which have upper and lower bounds","returns the smallest finite number this type can represent","returns the largest finite number this type can represent","Generic trait for floating point numbers","Returns the <code>NaN</code> value.","Returns the infinite value.","Returns the negative infinite value.","Returns <code>-0.0</code>.","Returns the smallest finite value that this type can …","Returns the smallest positive, normalized value that this …","Returns epsilon, a small positive value.","Returns the largest finite value that this type can …","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.","Returns <code>true</code> if this value is positive infinity or …","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns the floating point category of the number. If …","Returns the largest integer less than or equal to a …","Returns the smallest integer greater than or equal to a …","Returns the nearest integer to a number. Round half-way …","Return the integer part of a number.","Returns the fractional part of a number.","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","Returns a number that represents the sign of <code>self</code>.","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Raise a number to an integer power.","Raise a number to a floating point power.","Take the square root of a number.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns the natural logarithm of the number.","Returns the logarithm of the number with respect to an …","Returns the base 2 logarithm of the number.","Returns the base 10 logarithm of the number.","Converts radians to degrees.","Converts degrees to radians.","Returns the maximum of the two numbers.","Returns the minimum of the two numbers.","The positive difference of two numbers.","Take the cubic root of a number.","Calculate the length of the hypotenuse of a right-angle …","Computes the sine of a number (in radians).","Computes the cosine of a number (in radians).","Computes the tangent of a number (in radians).","Computes the arcsine of a number. Return value is in …","Computes the arccosine of a number. Return value is in …","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …","Simultaneously computes the sine and cosine of the …","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …","Hyperbolic sine function.","Hyperbolic cosine function.","Hyperbolic tangent function.","Inverse hyperbolic sine function.","Inverse hyperbolic cosine function.","Inverse hyperbolic tangent function.","Returns the mantissa, base 2 exponent, and sign as …","","Return Euler’s number.","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(e)</code>.","Return Archimedes’ constant <code>π</code>.","Return <code>sqrt(2.0)</code>.","Return the full circle constant <code>τ</code>.","Cast from one machine scalar to another.","A generic interface for casting between machine scalars …","Convert a value to another, using the <code>as</code> operator.","A generic trait for converting a number to a value.","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this …","Converts a <code>usize</code> to return an optional value of this …","Converts an <code>u8</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u128</code> to return an optional value of this …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","An interface for casting between machine scalars.","Creates a number from another value that can be converted …","A generic trait for converting a value to a number.","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i128</code>. If the value …","Converts the value of <code>self</code> to a <code>usize</code>. If the value …","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>f32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>f64</code>. If the value cannot …","Returns the multiplicative identity, <code>1</code>.","Returns the additive identity, <code>0</code>.","Defines a multiplicative identity element for <code>Self</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Defines an additive identity element for <code>Self</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Generic trait for primitive integers.","Returns the number of ones in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of leading zeros in the binary …","Returns the number of trailing zeros in the binary …","Shifts the bits to the left by a specified amount amount, …","Shifts the bits to the right by a specified amount …","Shifts the bits to the left by a specified amount amount, …","Shifts the bits to the right by a specified amount …","Shifts the bits to the left by a specified amount amount, …","Shifts the bits to the right by a specified amount …","Reverses the byte order of the integer.","Convert an integer from big endian to the target’s …","Convert an integer from little endian to the target’s …","Convert <code>self</code> to big endian from the target’s endianness.","Convert <code>self</code> to little endian from the target’s …","Raises self to the power of <code>exp</code>, using exponentiation by …","Performs addition that returns <code>None</code> instead of wrapping …","Adds two numbers, checking for overflow. If overflow …","Performs division that returns <code>None</code> instead of panicking …","Divides two numbers, checking for underflow, overflow and …","Performs multiplication that returns <code>None</code> instead of …","Multiplies two numbers, checking for underflow or …","Performs negation that returns <code>None</code> if the result can’t …","Negates a number, returning <code>None</code> for results that can’t …","Performs an integral remainder that returns <code>None</code> instead …","Finds the remainder of dividing two numbers, checking for …","Performs a left shift that returns <code>None</code> on shifts larger …","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …","Performs a right shift that returns <code>None</code> on shifts larger …","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …","Performs subtraction that returns <code>None</code> instead of …","Subtracts two numbers, checking for underflow. If …","Unary operator for retrieving the multiplicative inverse, …","The result after applying the operator.","Returns the multiplicative inverse of <code>self</code>.","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The resulting type after applying the fused multiply-add.","Performs the fused multiply-add operation.","The fused multiply-add assignment operation.","Performs the fused multiply-add operation.","Saturating math operations","Saturating addition operator. Returns a+b, saturating at …","Saturating subtraction operator. Returns a-b, saturating …","Performs addition that wraps around on overflow.","Wrapping (modular) addition. Computes <code>self + other</code>, …","Performs multiplication that wraps around on overflow.","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Performs a left shift that does not panic.","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …","Performs a right shift that does not panic.","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …","Performs subtraction that wraps around on overflow.","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","Raises a value to the power of exp, returning <code>None</code> if an …","Raises a value to the power of exp, using exponentiation …","Binary operator for raising a value to a power.","The result after applying the operator.","Returns <code>self</code> to the power <code>rhs</code>.","Computes the absolute value.","The positive difference of two numbers.","Returns the sign of the number.","Useful functions for signed numbers (i.e. numbers that …","Computes the absolute value.","The positive difference of two numbers.","Returns the sign of the number.","Returns true if the number is positive and false if the …","Returns true if the number is negative and false if the …","A trait for values which cannot be negative","","Floored integer division.","Floored integer modulo, satisfying:","Ceiled integer division.","Greatest Common Divisor (GCD).","Lowest Common Multiple (LCM).","Greatest Common Divisor (GCD) and Lowest Common Multiple …","Greatest common divisor and Bézout coefficients.","Greatest common divisor, least common multiple, and …","Deprecated, use <code>is_multiple_of</code> instead.","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.","Returns <code>true</code> if the number is even.","Returns <code>true</code> if the number is odd.","Simultaneous truncated integer division and modulus. …","Simultaneous floored integer division and modulus. …","Rounds up to nearest multiple of argument.","Rounds down to nearest multiple of argument.","Returns an iterator over the given range [start, stop) …","Return an iterator over the range [start, stop]","Return an iterator over the range [start, stop) by <code>step</code>. …","Return an iterator over the range [start, stop] by <code>step</code>. …","The base trait for numeric types, covering <code>0</code> and <code>1</code> values,…","","Convert from a string and radix <= 36.","Defines an additive identity element for <code>Self</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Defines a multiplicative identity element for <code>Self</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Useful functions for signed numbers (i.e. numbers that …","Computes the absolute value.","The positive difference of two numbers.","Returns the sign of the number.","Returns true if the number is positive and false if the …","Returns true if the number is negative and false if the …","A trait for values which cannot be negative","Numbers which have upper and lower bounds","returns the smallest finite number this type can represent","returns the largest finite number this type can represent","Returns the multiplicative identity, <code>1</code>.","Returns the additive identity, <code>0</code>.","Computes the absolute value.","The positive difference of two numbers.","Returns the sign of the number.","Saturating math operations","Saturating addition operator. Returns a+b, saturating at …","Saturating subtraction operator. Returns a-b, saturating …","Performs addition that returns <code>None</code> instead of wrapping …","Adds two numbers, checking for overflow. If overflow …","Performs subtraction that returns <code>None</code> instead of …","Subtracts two numbers, checking for underflow. If …","Performs multiplication that returns <code>None</code> instead of …","Multiplies two numbers, checking for underflow or …","Performs division that returns <code>None</code> instead of panicking …","Divides two numbers, checking for underflow, overflow and …","Generic trait for primitive integers.","Returns the number of ones in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of leading zeros in the binary …","Returns the number of trailing zeros in the binary …","Shifts the bits to the left by a specified amount amount, …","Shifts the bits to the right by a specified amount …","Shifts the bits to the left by a specified amount amount, …","Shifts the bits to the right by a specified amount …","Shifts the bits to the left by a specified amount amount, …","Shifts the bits to the right by a specified amount …","Reverses the byte order of the integer.","Convert an integer from big endian to the target’s …","Convert an integer from little endian to the target’s …","Convert <code>self</code> to big endian from the target’s endianness.","Convert <code>self</code> to little endian from the target’s …","Raises self to the power of <code>exp</code>, using exponentiation by …","Generic trait for floating point numbers","Returns the <code>NaN</code> value.","Returns the infinite value.","Returns the negative infinite value.","Returns <code>-0.0</code>.","Returns the smallest finite value that this type can …","Returns the smallest positive, normalized value that this …","Returns epsilon, a small positive value.","Returns the largest finite value that this type can …","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.","Returns <code>true</code> if this value is positive infinity or …","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns the floating point category of the number. If …","Returns the largest integer less than or equal to a …","Returns the smallest integer greater than or equal to a …","Returns the nearest integer to a number. Round half-way …","Return the integer part of a number.","Returns the fractional part of a number.","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","Returns a number that represents the sign of <code>self</code>.","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Raise a number to an integer power.","Raise a number to a floating point power.","Take the square root of a number.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns the natural logarithm of the number.","Returns the logarithm of the number with respect to an …","Returns the base 2 logarithm of the number.","Returns the base 10 logarithm of the number.","Converts radians to degrees.","Converts degrees to radians.","Returns the maximum of the two numbers.","Returns the minimum of the two numbers.","The positive difference of two numbers.","Take the cubic root of a number.","Calculate the length of the hypotenuse of a right-angle …","Computes the sine of a number (in radians).","Computes the cosine of a number (in radians).","Computes the tangent of a number (in radians).","Computes the arcsine of a number. Return value is in …","Computes the arccosine of a number. Return value is in …","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …","Simultaneously computes the sine and cosine of the …","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …","Hyperbolic sine function.","Hyperbolic cosine function.","Hyperbolic tangent function.","Inverse hyperbolic sine function.","Inverse hyperbolic cosine function.","Inverse hyperbolic tangent function.","Returns the mantissa, base 2 exponent, and sign as …","A generic trait for converting a value to a number.","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i128</code>. If the value …","Converts the value of <code>self</code> to a <code>usize</code>. If the value …","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>f32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>f64</code>. If the value cannot …","A generic trait for converting a number to a value.","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this …","Converts a <code>usize</code> to return an optional value of this …","Converts an <code>u8</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u128</code> to return an optional value of this …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","An interface for casting between machine scalars.","Creates a number from another value that can be converted …","","A generic trait for converting a value to a number.","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i128</code>. If the value …","Converts the value of <code>self</code> to a <code>usize</code>. If the value …","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>f32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>f64</code>. If the value cannot …","A generic trait for converting a number to a value.","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this …","Converts a <code>usize</code> to return an optional value of this …","Converts an <code>u8</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u128</code> to return an optional value of this …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Cast from one machine scalar to another.","An interface for casting between machine scalars.","Creates a number from another value that can be converted …","A generic interface for casting between machine scalars …","Convert a value to another, using the <code>as</code> operator.","Cast from one machine scalar to another.","","Binary operator for raising a value to a power.","The result after applying the operator.","Returns <code>self</code> to the power <code>rhs</code>.","Raises a value to the power of exp, using exponentiation …","Raises a value to the power of exp, returning <code>None</code> if an …","Raises a value to the power of exp, using exponentiation …","Raises a value to the power of exp, returning <code>None</code> if an …","A value bounded by a minimum and a maximum","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","For a given n, iterate over all binomial coefficients …"],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,7,0,8,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,12,12,12,0,13,13,13,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,15,0,16,0,17,0,18,0,19,0,20,0,21,0,22,0,0,23,23,0,0,24,24,0,25,0,0,26,26,0,0,27,0,28,0,29,0,30,0,31,0,0,32,32,0,0,0,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,0,34,34,34,34,34,0,0,0,0,0,35,35,0,0,0,0,0,0,0,36,36,0,37,0,0,0,0,4,4,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,8,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,7,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,13,13,13,0,12,12,12,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,15,0,18,0,17,0,20,0,19,0,21,0,22,0,16,0,23,23,0,24,24,0,25,0,26,26,0,27,0,29,0,30,0,31,0,28,0,0,0,32,32,0,0,0,0,34,34,34,34,34,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,35,35,0,12,12,12,0,13,13,13,0,34,34,34,34,34,0,0,4,4,0,0,0,0,0,0,26,26,0,15,0,16,0,17,0,18,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,7,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,7,0,8,0,0,0,32,32,0,0,0,0,0,2,2,2,2,2,2,2,2,2,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,42,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,36,37,2,2,2,38,2,40,41,39,42,39,40,39,39,41,40,40,42,38],"f":[null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["extendedgcd",3]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],null,[[["u32",15]]],[[]],[[]],[[]],[[["u32",15]]],[[]],null,null,[[],["range",3]],null,[[],["rangeinclusive",3]],null,[[],["rangestep",3]],null,[[],["rangestepinclusive",3]],null,null,null,[[]],[[]],null,null,[[],[["isize",15],["option",4]]],[[],[["option",4],["i8",15]]],[[],[["i16",15],["option",4]]],[[],[["i32",15],["option",4]]],[[],[["option",4],["i64",15]]],[[],[["option",4],["i128",15]]],[[],[["usize",15],["option",4]]],[[],[["u8",15],["option",4]]],[[],[["u16",15],["option",4]]],[[],[["u32",15],["option",4]]],[[],[["u64",15],["option",4]]],[[],[["u128",15],["option",4]]],[[],[["f32",15],["option",4]]],[[],[["f64",15],["option",4]]],null,[[["isize",15]],["option",4]],[[["i8",15]],["option",4]],[[["i16",15]],["option",4]],[[["i32",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["usize",15]],["option",4]],[[["u8",15]],["option",4]],[[["u16",15]],["option",4]],[[["u32",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[],["option",4]],null,[[],["option",4]],null,[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["fpcategory",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[["i32",15]]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["fpcategory",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[["i32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[],["bool",15]],null,[[]],[[]],[[],["bool",15]],[[]],[[]],null,null,[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]]],null,null,null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[["u32",15]],["option",4]],null,[[["u32",15]],["option",4]],null,null,null,[[]],null,null,null,[[]],null,[[]],null,null,[[]],[[]],null,null,[[]],null,[[]],null,[[]],null,[[["u32",15]]],null,[[["u32",15]]],null,null,null,[[]],[[["usize",15]]],[[["usize",15]],["option",4]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[["i32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],null,null,null,[[["u32",15],["str",15]],["result",4]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],null,[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["fpcategory",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[["i32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],null,[[]],null,[[["isize",15]],["option",4]],[[["i8",15]],["option",4]],[[["i16",15]],["option",4]],[[["i32",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["usize",15]],["option",4]],[[["u8",15]],["option",4]],[[["u16",15]],["option",4]],[[["u32",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],null,[[],["option",4]],null,[[],[["isize",15],["option",4]]],[[],[["option",4],["i8",15]]],[[],[["i16",15],["option",4]]],[[],[["i32",15],["option",4]]],[[],[["option",4],["i64",15]]],[[],[["option",4],["i128",15]]],[[],[["usize",15],["option",4]]],[[],[["u8",15],["option",4]]],[[],[["u16",15],["option",4]]],[[],[["u32",15],["option",4]]],[[],[["u64",15],["option",4]]],[[],[["u128",15],["option",4]]],[[],[["f32",15],["option",4]]],[[],[["f64",15],["option",4]]],[[]],[[]],null,[[]],[[]],[[],["bool",15]],null,[[]],[[]],[[],["bool",15]],null,[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]]],null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[["u32",15]],["option",4]],null,[[["u32",15]],["option",4]],null,[[],["option",4]],null,null,[[]],null,null,[[]],null,[[]],null,[[]],[[]],null,[[]],null,[[]],null,[[["u32",15]]],null,[[["u32",15]]],null,[[]],[[["usize",15]],["option",4]],[[["usize",15]]],null,null,[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["extendedgcd",3]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["range",3]],[[],["rangeinclusive",3]],[[],["rangestep",3]],[[],["rangestepinclusive",3]],null,null,[[["u32",15],["str",15]],["result",4]],null,[[]],[[]],[[],["bool",15]],null,[[]],[[]],[[],["bool",15]],null,[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["fpcategory",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[["i32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],[["isize",15],["option",4]]],[[],[["option",4],["i8",15]]],[[],[["i16",15],["option",4]]],[[],[["i32",15],["option",4]]],[[],[["option",4],["i64",15]]],[[],[["option",4],["i128",15]]],[[],[["usize",15],["option",4]]],[[],[["u8",15],["option",4]]],[[],[["u16",15],["option",4]]],[[],[["u32",15],["option",4]]],[[],[["u64",15],["option",4]]],[[],[["u128",15],["option",4]]],[[],[["f32",15],["option",4]]],[[],[["f64",15],["option",4]]],null,[[["isize",15]],["option",4]],[[["i8",15]],["option",4]],[[["i16",15]],["option",4]],[[["i32",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["usize",15]],["option",4]],[[["u8",15]],["option",4]],[[["u16",15]],["option",4]],[[["u32",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],null,[[],["option",4]],null,null,[[],[["isize",15],["option",4]]],[[],[["option",4],["i8",15]]],[[],[["i16",15],["option",4]]],[[],[["i32",15],["option",4]]],[[],[["option",4],["i64",15]]],[[],[["option",4],["i128",15]]],[[],[["usize",15],["option",4]]],[[],[["u8",15],["option",4]]],[[],[["u16",15],["option",4]]],[[],[["u32",15],["option",4]]],[[],[["u64",15],["option",4]]],[[],[["u128",15],["option",4]]],[[],[["f32",15],["option",4]]],[[],[["f64",15],["option",4]]],null,[[["isize",15]],["option",4]],[[["i8",15]],["option",4]],[[["i16",15]],["option",4]],[[["i32",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["usize",15]],["option",4]],[[["u8",15]],["option",4]],[[["u16",15]],["option",4]],[[["u32",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[],["option",4]],null,[[],["option",4]],null,[[]],[[],["option",4]],null,null,null,[[]],[[["usize",15]]],[[["usize",15]],["option",4]],[[["usize",15]]],[[["usize",15]],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["extendedgcd",3]],["bool",15]],[[["extendedgcd",3]],["bool",15]],[[],["extendedgcd",3]],[[],["option",4]],[[["formatter",3]],[["error",3],["result",4]]],[[],["rangeinclusive",3]],[[],["rangestep",3]],[[],["range",3]],[[],["rangestepinclusive",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[],["option",4]],[[],["iterbinomial",3]]],"p":[[8,"Integer"],[3,"ExtendedGcd"],[8,"Roots"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Saturating"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[3,"IterBinomial"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"]]},\
"num_cpus":{"doc":"A crate with utilities to determine the number of CPUs …","t":[5,5],"n":["get","get_physical"],"q":["num_cpus",""],"d":["Returns the number of available CPUs of the current …","Returns the number of physical cores of the current …"],"i":[0,0],"f":[[[],["usize",15]],[[],["usize",15]]],"p":[]},\
"num_derive":{"doc":"Procedural macros to derive numeric traits in Rust.","t":[24,24,24,24,24,24,24,24],"n":["FromPrimitive","ToPrimitive","NumOps","NumCast","Zero","One","Num","Float"],"q":["num_derive","","","","","","",""],"d":["Derives <code>num_traits::FromPrimitive</code> for simple enums and …","Derives <code>num_traits::ToPrimitive</code> for simple enums and …","Derives <code>num_traits::NumOps</code> for newtypes.  The inner type …","Derives <code>num_traits::NumCast</code> for newtypes.  The inner type …","Derives <code>num_traits::Zero</code> for newtypes.  The inner type …","Derives <code>num_traits::One</code> for newtypes.  The inner type …","Derives <code>num_traits::Num</code> for newtypes.  The inner type …","Derives <code>num_traits::Float</code> for newtypes.  The inner type …"],"i":[0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null],"p":[]},\
"num_integer":{"doc":"Integer trait and functions.","t":[8,10,11,11,5,5,5,8,10,10,11,10,10,11,11,11,10,10,10,10,10,11,11,11,3,12,12,12,5,5,5,5,5,5,5,5,3,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Roots","nth_root","sqrt","cbrt","cbrt","nth_root","sqrt","Integer","div_floor","mod_floor","div_ceil","gcd","lcm","gcd_lcm","extended_gcd","extended_gcd_lcm","divides","is_multiple_of","is_even","is_odd","div_rem","div_mod_floor","next_multiple_of","prev_multiple_of","ExtendedGcd","gcd","x","y","div_rem","div_floor","mod_floor","div_mod_floor","div_ceil","gcd","lcm","gcd_lcm","IterBinomial","new","binomial","multinomial","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","fmt","eq","ne","next","clone","sqrt","cbrt"],"q":["num_integer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Provides methods to compute an integer’s square root, …","Returns the truncated principal <code>n</code>th root of an integer –…","Returns the truncated principal square root of an integer …","Returns the truncated principal cube root of an integer …","Returns the truncated principal cube root of an integer …","Returns the truncated principal <code>n</code>th root of an integer –…","Returns the truncated principal square root of an integer …","","Floored integer division.","Floored integer modulo, satisfying:","Ceiled integer division.","Greatest Common Divisor (GCD).","Lowest Common Multiple (LCM).","Greatest Common Divisor (GCD) and Lowest Common Multiple …","Greatest common divisor and Bézout coefficients.","Greatest common divisor, least common multiple, and …","Deprecated, use <code>is_multiple_of</code> instead.","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.","Returns <code>true</code> if the number is even.","Returns <code>true</code> if the number is odd.","Simultaneous truncated integer division and modulus. …","Simultaneous floored integer division and modulus. …","Rounds up to nearest multiple of argument.","Rounds down to nearest multiple of argument.","Greatest common divisor and Bézout coefficients","","","","Simultaneous integer division and modulus","Floored integer division","Floored integer modulus","Simultaneous floored integer division and modulus","Ceiled integer division","Calculates the Greatest Common Divisor (GCD) of the …","Calculates the Lowest Common Multiple (LCM) of the number …","Calculates the Greatest Common Divisor (GCD) and Lowest …","An iterator over binomial coefficients.","For a given n, iterate over all binomial coefficients …","Calculate the binomial coefficient.","Calculate the multinomial coefficient.","","","","","","","","","","","","","","","","","","","","","","","Returns the truncated principal square root of an integer …","Returns the truncated principal cube root of an integer …"],"i":[0,1,1,1,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,3,0,0,0,0,0,0,0,0,0,4,0,0,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,3,3,3,4,3,1,1],"f":[null,[[["u32",15]]],[[]],[[]],[[["roots",8]],["roots",8]],[[["u32",15],["roots",8]],["roots",8]],[[["roots",8]],["roots",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["extendedgcd",3]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],null,null,null,null,[[["integer",8]]],[[["integer",8]],["integer",8]],[[["integer",8]],["integer",8]],[[["integer",8]]],[[["integer",8]],["integer",8]],[[["integer",8]],["integer",8]],[[["integer",8]],["integer",8]],[[["integer",8]]],null,[[],["iterbinomial",3]],[[["integer",8],["clone",8]],[["clone",8],["integer",8]]],[[],[["clone",8],["integer",8]]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],["result",6]],[[["extendedgcd",3]],["bool",15]],[[["extendedgcd",3]],["bool",15]],[[],["option",4]],[[],["extendedgcd",3]],[[]],[[]]],"p":[[8,"Roots"],[8,"Integer"],[3,"ExtendedGcd"],[3,"IterBinomial"]]},\
"num_iter":{"doc":"External iterators for generic mathematics","t":[3,5,3,5,3,5,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Range","range","RangeInclusive","range_inclusive","RangeStep","range_step","RangeStepInclusive","range_step_inclusive","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","next_back","next_back","next","size_hint","next","size_hint","next","next","clone","clone","clone","clone"],"q":["num_iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An iterator over the range [start, stop)","Returns an iterator over the given range [start, stop) …","An iterator over the range [start, stop]","Return an iterator over the range [start, stop]","An iterator over the range [start, stop) by <code>step</code>. It …","Return an iterator over the range [start, stop) by <code>step</code>. …","An iterator over the range [start, stop] by <code>step</code>. It …","Return an iterator over the range [start, stop] by <code>step</code>. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,1,2,1,1,2,2,3,4,1,2,3,4],"f":[null,[[],["range",3]],null,[[],["rangeinclusive",3]],null,[[],["rangestep",3]],null,[[],["rangestepinclusive",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[],["option",4]],[[],["range",3]],[[],["rangeinclusive",3]],[[],["rangestep",3]],[[],["rangestepinclusive",3]]],"p":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"]]},\
"num_rational":{"doc":"Rational numbers","tn":["Ratio","Rational","Rational32","Rational64","new_raw","numer","denom","new","from_integer","to_integer","is_integer","reduced","recip","floor","ceil","round","trunc","fract","pow","ParseRatioError","approximate_float","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","to_string","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","to_string","fmt","fmt","fmt","fmt","div","div","div","div","rem","rem","rem","rem","sub","sub","sub","sub","eq","eq","ne","cmp","partial_cmp","from_str","add","add","add","add","mul","mul","mul","mul","neg","add_assign","add_assign","add_assign","add_assign","sub_assign","sub_assign","sub_assign","sub_assign","mul_assign","mul_assign","mul_assign","mul_assign","div_assign","div_assign","div_assign","div_assign","rem_assign","rem_assign","rem_assign","rem_assign","hash","sum","sum","product","product","from","from","into","clone","clone","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_str_radix","zero","is_zero","set_zero","one","is_one","set_one","checked_add","checked_sub","checked_mul","checked_div","inv","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","abs","abs_sub","signum","is_positive","is_negative"],"q":["num_rationald":["Represents the ratio between two numbers.","Alias for a <code>Ratio</code> of machine-sized integers.","Alias for a <code>Ratio</code> of 32-bit-sized integers.","Alias for a <code>Ratio</code> of 64-bit-sized integers.","Creates a <code>Ratio</code> without checking for <code>denom == 0</code> or …","Gets an immutable reference to the numerator.","Gets an immutable reference to the denominator.","Creates a new <code>Ratio</code>. Fails if <code>denom</code> is zero.","Creates a <code>Ratio</code> representing the integer <code>t</code>.","Converts to an integer, rounding towards zero.","Returns true if the rational number is an integer …","Returns a reduced copy of self.","Returns the reciprocal.","Rounds towards minus infinity.","Rounds towards plus infinity.","Rounds to the nearest integer. Rounds half-way cases away …","Rounds towards zero.","Returns the fractional part of a number, with division …","Raises the <code>Ratio</code> to the power of an exponent.","","","","","","","","","","","","","","","","","","","","","","","","","Renders as <code>numer/denom</code>. If denom=1, renders as numer.","","","","","","","","","","","","","","","","","","","Parses <code>numer/denom</code> or just <code>numer</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses <code>numer/denom</code> where the numbers are in base <code>radix</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,1,2,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,null,null,null,[[],["ratio",3]],[[]],[[]],[[],["ratio",3]],[[],["ratio",3]],[[]],[[],["bool",15]],[[],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[["i32",15]],["ratio",3]],null,[[["floatcore",8],["numcast",8]],[["ratio",3],["option",4]]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[],["bool",15]],[[["parseratioerror",3]],["bool",15]],[[["parseratioerror",3]],["bool",15]],[[],["ordering",4]],[[],[["ordering",4],["option",4]]],[[["str",15]],[["ratio",3],["result",4],["parseratioerror",3]]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[["ratio",3]]],[[]],[[["ratio",3]]],[[]],[[["ratio",3]]],[[]],[[["ratio",3]]],[[]],[[["ratio",3]]],[[]],[[["ratio",3]]],[[]],[[["ratio",3]]],[[]],[[["ratio",3]]],[[]],[[["ratio",3]]],[[]],[[["ratio",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["ratio",3]],[[],["ratio",3]],[[]],[[],["ratio",3]],[[],["parseratioerror",3]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["u32",15],["str",15]],[["ratio",3],["result",4],["parseratioerror",3]]],[[],["ratio",3]],[[],["bool",15]],[[]],[[],["ratio",3]],[[],["bool",15]],[[]],[[["ratio",3]],[["ratio",3],["option",4]]],[[["ratio",3]],[["ratio",3],["option",4]]],[[["ratio",3]],[["ratio",3],["option",4]]],[[["ratio",3]],[["ratio",3],["option",4]]],[[],["ratio",3]],[[["i8",15]],["ratio",3]],[[["i8",15]],["ratio",3]],[[["i16",15]],["ratio",3]],[[["i16",15]],["ratio",3]],[[["i32",15]],["ratio",3]],[[["i32",15]],["ratio",3]],[[["i64",15]],["ratio",3]],[[["i64",15]],["ratio",3]],[[["isize",15]],["ratio",3]],[[["isize",15]],["ratio",3]],[[["u8",15]],["ratio",3]],[[["u8",15]],["ratio",3]],[[["u16",15]],["ratio",3]],[[["u16",15]],["ratio",3]],[[["u32",15]],["ratio",3]],[[["u32",15]],["ratio",3]],[[["u64",15]],["ratio",3]],[[["u64",15]],["ratio",3]],[[["usize",15]],["ratio",3]],[[["usize",15]],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[],["bool",15]],[[],["bool",15]]],"p":[[3,"Ratio"],[3,"ParseRatioError"]]},\
"num_traits":{"doc":"Numeric traits for generic mathematics","t":[0,8,10,10,0,8,11,11,11,11,10,11,11,11,11,11,10,11,11,11,8,11,11,11,11,10,11,11,11,11,11,10,11,11,11,5,8,10,8,10,0,8,10,10,10,10,10,10,10,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,8,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,0,8,10,11,10,8,10,11,11,5,5,0,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,8,10,8,10,8,10,8,10,8,10,8,10,8,10,8,10,0,8,16,10,0,8,16,10,8,10,0,8,10,10,0,8,10,8,10,8,10,8,10,8,10,0,8,16,10,5,5,0,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,8,10,10,10,10,10,5,5,5,8,8,16,10,8,8,8,8,8,8,4,13,13,3,12,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["bounds","Bounded","min_value","max_value","cast","ToPrimitive","to_isize","to_i8","to_i16","to_i32","to_i64","to_i128","to_usize","to_u8","to_u16","to_u32","to_u64","to_u128","to_f32","to_f64","FromPrimitive","from_isize","from_i8","from_i16","from_i32","from_i64","from_i128","from_usize","from_u8","from_u16","from_u32","from_u64","from_u128","from_f32","from_f64","cast","NumCast","from","AsPrimitive","as_","float","FloatCore","infinity","neg_infinity","nan","neg_zero","min_value","min_positive_value","epsilon","max_value","is_nan","is_infinite","is_finite","is_normal","classify","floor","ceil","round","trunc","fract","abs","signum","is_sign_positive","is_sign_negative","min","max","recip","powi","to_degrees","to_radians","integer_decode","Float","nan","infinity","neg_infinity","neg_zero","min_value","min_positive_value","epsilon","max_value","is_nan","is_infinite","is_finite","is_normal","classify","floor","ceil","round","trunc","fract","abs","signum","is_sign_positive","is_sign_negative","mul_add","recip","powi","powf","sqrt","exp","exp2","ln","log","log2","log10","to_degrees","to_radians","max","min","abs_sub","cbrt","hypot","sin","cos","tan","asin","acos","atan","atan2","sin_cos","exp_m1","ln_1p","sinh","cosh","tanh","asinh","acosh","atanh","integer_decode","FloatConst","E","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","LN_10","LN_2","LOG10_E","LOG2_E","PI","SQRT_2","TAU","identities","Zero","zero","set_zero","is_zero","One","one","set_one","is_one","zero","one","int","PrimInt","count_ones","count_zeros","leading_zeros","trailing_zeros","rotate_left","rotate_right","signed_shl","signed_shr","unsigned_shl","unsigned_shr","swap_bytes","from_be","from_le","to_be","to_le","pow","ops","checked","CheckedAdd","checked_add","CheckedSub","checked_sub","CheckedMul","checked_mul","CheckedDiv","checked_div","CheckedRem","checked_rem","CheckedNeg","checked_neg","CheckedShl","checked_shl","CheckedShr","checked_shr","inv","Inv","Output","inv","mul_add","MulAdd","Output","mul_add","MulAddAssign","mul_add_assign","saturating","Saturating","saturating_add","saturating_sub","wrapping","WrappingAdd","wrapping_add","WrappingSub","wrapping_sub","WrappingMul","wrapping_mul","WrappingShl","wrapping_shl","WrappingShr","wrapping_shr","pow","Pow","Output","pow","pow","checked_pow","real","Real","min_value","min_positive_value","epsilon","max_value","floor","ceil","round","trunc","fract","abs","signum","is_sign_positive","is_sign_negative","mul_add","recip","powi","powf","sqrt","exp","exp2","ln","log","log2","log10","to_degrees","to_radians","max","min","abs_sub","cbrt","hypot","sin","cos","tan","asin","acos","atan","atan2","sin_cos","exp_m1","ln_1p","sinh","cosh","tanh","asinh","acosh","atanh","sign","Signed","abs","abs_sub","signum","is_positive","is_negative","abs","abs_sub","signum","Unsigned","Num","FromStrRadixErr","from_str_radix","NumOps","NumRef","RefNum","NumAssignOps","NumAssign","NumAssignRef","FloatErrorKind","Empty","Invalid","ParseFloatError","kind","clamp","clamp_min","clamp_max","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_string","fmt","fmt","fmt"],"q":["num_traits","num_traits::bounds","","","num_traits","num_traits::cast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num_traits","num_traits::float","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num_traits","num_traits::identities","","","","","","","","","","num_traits","num_traits::int","","","","","","","","","","","","","","","","","num_traits","num_traits::ops","num_traits::ops::checked","","","","","","","","","","","","","","","","num_traits::ops","num_traits::ops::inv","","","num_traits::ops","num_traits::ops::mul_add","","","","","num_traits::ops","num_traits::ops::saturating","","","num_traits::ops","num_traits::ops::wrapping","","","","","","","","","","num_traits","num_traits::pow","","","","","num_traits","num_traits::real","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num_traits","num_traits::sign","","","","","","","","","","num_traits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Numbers which have upper and lower bounds","returns the smallest finite number this type can represent","returns the largest finite number this type can represent","","A generic trait for converting a value to a number.","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i128</code>. If the value …","Converts the value of <code>self</code> to a <code>usize</code>. If the value …","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>f32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>f64</code>. If the value cannot …","A generic trait for converting a number to a value.","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this …","Converts a <code>usize</code> to return an optional value of this …","Converts an <code>u8</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u128</code> to return an optional value of this …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Cast from one machine scalar to another.","An interface for casting between machine scalars.","Creates a number from another value that can be converted …","A generic interface for casting between machine scalars …","Convert a value to another, using the <code>as</code> operator.","","Generic trait for floating point numbers that works with …","Returns positive infinity.","Returns negative infinity.","Returns NaN.","Returns <code>-0.0</code>.","Returns the smallest finite value that this type can …","Returns the smallest positive, normalized value that this …","Returns epsilon, a small positive value.","Returns the largest finite value that this type can …","Returns <code>true</code> if the number is NaN.","Returns <code>true</code> if the number is infinite.","Returns <code>true</code> if the number is neither infinite or NaN.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns the floating point category of the number. If …","Returns the largest integer less than or equal to a …","Returns the smallest integer greater than or equal to a …","Returns the nearest integer to a number. Round half-way …","Return the integer part of a number.","Returns the fractional part of a number.","Computes the absolute value of <code>self</code>. Returns …","Returns a number that represents the sign of <code>self</code>.","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …","Returns the minimum of the two numbers.","Returns the maximum of the two numbers.","Returns the reciprocal (multiplicative inverse) of the …","Raise a number to an integer power.","Converts to degrees, assuming the number is in radians.","Converts to radians, assuming the number is in degrees.","Returns the mantissa, base 2 exponent, and sign as …","Generic trait for floating point numbers","Returns the <code>NaN</code> value.","Returns the infinite value.","Returns the negative infinite value.","Returns <code>-0.0</code>.","Returns the smallest finite value that this type can …","Returns the smallest positive, normalized value that this …","Returns epsilon, a small positive value.","Returns the largest finite value that this type can …","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.","Returns <code>true</code> if this value is positive infinity or …","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns the floating point category of the number. If …","Returns the largest integer less than or equal to a …","Returns the smallest integer greater than or equal to a …","Returns the nearest integer to a number. Round half-way …","Return the integer part of a number.","Returns the fractional part of a number.","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","Returns a number that represents the sign of <code>self</code>.","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Raise a number to an integer power.","Raise a number to a floating point power.","Take the square root of a number.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns the natural logarithm of the number.","Returns the logarithm of the number with respect to an …","Returns the base 2 logarithm of the number.","Returns the base 10 logarithm of the number.","Converts radians to degrees.","Converts degrees to radians.","Returns the maximum of the two numbers.","Returns the minimum of the two numbers.","The positive difference of two numbers.","Take the cubic root of a number.","Calculate the length of the hypotenuse of a right-angle …","Computes the sine of a number (in radians).","Computes the cosine of a number (in radians).","Computes the tangent of a number (in radians).","Computes the arcsine of a number. Return value is in …","Computes the arccosine of a number. Return value is in …","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …","Simultaneously computes the sine and cosine of the …","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …","Hyperbolic sine function.","Hyperbolic cosine function.","Hyperbolic tangent function.","Inverse hyperbolic sine function.","Inverse hyperbolic cosine function.","Inverse hyperbolic tangent function.","Returns the mantissa, base 2 exponent, and sign as …","","Return Euler’s number.","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(e)</code>.","Return Archimedes’ constant <code>π</code>.","Return <code>sqrt(2.0)</code>.","Return the full circle constant <code>τ</code>.","","Defines an additive identity element for <code>Self</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Defines a multiplicative identity element for <code>Self</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns the additive identity, <code>0</code>.","Returns the multiplicative identity, <code>1</code>.","","Generic trait for primitive integers.","Returns the number of ones in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of leading zeros in the binary …","Returns the number of trailing zeros in the binary …","Shifts the bits to the left by a specified amount amount, …","Shifts the bits to the right by a specified amount …","Shifts the bits to the left by a specified amount amount, …","Shifts the bits to the right by a specified amount …","Shifts the bits to the left by a specified amount amount, …","Shifts the bits to the right by a specified amount …","Reverses the byte order of the integer.","Convert an integer from big endian to the target’s …","Convert an integer from little endian to the target’s …","Convert <code>self</code> to big endian from the target’s endianness.","Convert <code>self</code> to little endian from the target’s …","Raises self to the power of <code>exp</code>, using exponentiation by …","","","Performs addition that returns <code>None</code> instead of wrapping …","Adds two numbers, checking for overflow. If overflow …","Performs subtraction that returns <code>None</code> instead of …","Subtracts two numbers, checking for underflow. If …","Performs multiplication that returns <code>None</code> instead of …","Multiplies two numbers, checking for underflow or …","Performs division that returns <code>None</code> instead of panicking …","Divides two numbers, checking for underflow, overflow and …","Performs an integral remainder that returns <code>None</code> instead …","Finds the remainder of dividing two numbers, checking for …","Performs negation that returns <code>None</code> if the result can’t …","Negates a number, returning <code>None</code> for results that can’t …","Performs a left shift that returns <code>None</code> on shifts larger …","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …","Performs a right shift that returns <code>None</code> on shifts larger …","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …","","Unary operator for retrieving the multiplicative inverse, …","The result after applying the operator.","Returns the multiplicative inverse of <code>self</code>.","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The resulting type after applying the fused multiply-add.","Performs the fused multiply-add operation.","The fused multiply-add assignment operation.","Performs the fused multiply-add operation.","","Saturating math operations","Saturating addition operator. Returns a+b, saturating at …","Saturating subtraction operator. Returns a-b, saturating …","","Performs addition that wraps around on overflow.","Wrapping (modular) addition. Computes <code>self + other</code>, …","Performs subtraction that wraps around on overflow.","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","Performs multiplication that wraps around on overflow.","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Performs a left shift that does not panic.","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …","Performs a right shift that does not panic.","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …","","Binary operator for raising a value to a power.","The result after applying the operator.","Returns <code>self</code> to the power <code>rhs</code>.","Raises a value to the power of exp, using exponentiation …","Raises a value to the power of exp, returning <code>None</code> if an …","","A trait for real number types that do not necessarily have…","Returns the smallest finite value that this type can …","Returns the smallest positive, normalized value that this …","Returns epsilon, a small positive value.","Returns the largest finite value that this type can …","Returns the largest integer less than or equal to a …","Returns the smallest integer greater than or equal to a …","Returns the nearest integer to a number. Round half-way …","Return the integer part of a number.","Returns the fractional part of a number.","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","Returns a number that represents the sign of <code>self</code>.","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Raise a number to an integer power.","Raise a number to a real number power.","Take the square root of a number.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns the natural logarithm of the number.","Returns the logarithm of the number with respect to an …","Returns the base 2 logarithm of the number.","Returns the base 10 logarithm of the number.","Converts radians to degrees.","Converts degrees to radians.","Returns the maximum of the two numbers.","Returns the minimum of the two numbers.","The positive difference of two numbers.","Take the cubic root of a number.","Calculate the length of the hypotenuse of a right-angle …","Computes the sine of a number (in radians).","Computes the cosine of a number (in radians).","Computes the tangent of a number (in radians).","Computes the arcsine of a number. Return value is in …","Computes the arccosine of a number. Return value is in …","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …","Simultaneously computes the sine and cosine of the …","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …","Hyperbolic sine function.","Hyperbolic cosine function.","Hyperbolic tangent function.","Inverse hyperbolic sine function.","Inverse hyperbolic cosine function.","Inverse hyperbolic tangent function.","","Useful functions for signed numbers (i.e. numbers that …","Computes the absolute value.","The positive difference of two numbers.","Returns the sign of the number.","Returns true if the number is positive and false if the …","Returns true if the number is negative and false if the …","Computes the absolute value.","The positive difference of two numbers.","Returns the sign of the number.","A trait for values which cannot be negative","The base trait for numeric types, covering <code>0</code> and <code>1</code> values,…","","Convert from a string and radix <= 36.","The trait for types implementing basic numeric operations","The trait for <code>Num</code> types which also implement numeric …","The trait for references which implement numeric …","The trait for types implementing numeric assignment …","The trait for <code>Num</code> types which also implement assignment …","The trait for <code>NumAssign</code> types which also implement …","","","","","","A value bounded by a minimum and a maximum","A value bounded by a minimum value","A value bounded by a maximum value","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,4,0,5,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,9,9,9,0,10,10,10,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,12,0,13,0,14,0,15,0,16,0,17,0,18,0,19,0,0,20,20,0,0,21,21,0,22,0,0,23,23,0,0,24,0,25,0,26,0,27,0,28,0,0,29,29,0,0,0,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,0,31,31,31,31,31,0,0,0,0,0,32,32,0,0,0,0,0,0,0,33,33,0,34,0,0,0,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,33,34,34],"f":[null,null,[[]],[[]],null,null,[[],[["isize",15],["option",4]]],[[],[["i8",15],["option",4]]],[[],[["option",4],["i16",15]]],[[],[["option",4],["i32",15]]],[[],[["i64",15],["option",4]]],[[],[["i128",15],["option",4]]],[[],[["option",4],["usize",15]]],[[],[["option",4],["u8",15]]],[[],[["option",4],["u16",15]]],[[],[["u32",15],["option",4]]],[[],[["option",4],["u64",15]]],[[],[["u128",15],["option",4]]],[[],[["option",4],["f32",15]]],[[],[["f64",15],["option",4]]],null,[[["isize",15]],["option",4]],[[["i8",15]],["option",4]],[[["i16",15]],["option",4]],[[["i32",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["usize",15]],["option",4]],[[["u8",15]],["option",4]],[[["u16",15]],["option",4]],[[["u32",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["numcast",8]],[["numcast",8],["option",4]]],null,[[["toprimitive",8]],["option",4]],null,[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["fpcategory",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[["i32",15]]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["fpcategory",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[["i32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[],["bool",15]],null,[[]],[[]],[[],["bool",15]],[[],["zero",8]],[[],["one",8]],null,null,[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]]],null,null,null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[["u32",15]],["option",4]],null,[[["u32",15]],["option",4]],null,null,null,[[]],null,null,null,[[]],null,[[]],null,null,[[]],[[]],null,null,[[]],null,[[]],null,[[]],null,[[["u32",15]]],null,[[["u32",15]]],null,null,null,[[]],[[["one",8],["usize",15],["clone",8],["mul",8]],[["one",8],["mul",8],["clone",8]]],[[["one",8],["usize",15],["clone",8],["checkedmul",8]],[["one",8],["clone",8],["option",4],["checkedmul",8]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[["i32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["signed",8]],["signed",8]],[[["signed",8]],["signed",8]],[[["signed",8]],["signed",8]],null,null,null,[[["u32",15],["str",15]],["result",4]],null,null,null,null,null,null,null,null,null,null,null,[[["partialord",8]],["partialord",8]],[[["partialord",8]],["partialord",8]],[[["partialord",8]],["partialord",8]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["string",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]]],"p":[[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Saturating"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"]]},\
"opengl_graphics":{"doc":"An OpenGL back-end for Rust-Graphics","t":[0,3,11,11,11,11,11,11,5,5,5,0,4,13,0,3,8,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,4,13,13,13,13,13,13,13,13,13,13,13,13,3,4,13,13,13,13,13,13,13,13,13,13,13,13,3,3,3,3,0,5,5,8,10,11,11,3,4,13,8,16,10,8,16,10,4,13,13,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["shader_utils","DynamicAttribute","xyz","xy","rgb","rgba","uv","set","compile_shader","attribute_location","uniform_location","error","Error","IoError","shader_uniforms","ShaderUniform","UniformType","SUFloat","SUInt","SUVec2","SUVec3","SUVec4","SUMat2x2","SUMat3x3","SUMat4x4","set","set","set","set","set","set","set","set","OpenGL","V2_0","V2_1","V3_0","V3_1","V3_2","V3_3","V4_0","V4_1","V4_2","V4_3","V4_4","V4_5","Shaders","GLSL","V1_10","V1_20","V1_30","V1_40","V1_50","V3_30","V4_00","V4_10","V4_20","V4_30","V4_40","V4_50","Colored","Textured","GlGraphics","Texture","ops","flip_vertical","alpha_to_rgba8","ImageSize","get_size","get_width","get_height","TextureSettings","Format","Rgba8","CreateTexture","Error","create","UpdateTexture","Error","update","Filter","Linear","Nearest","GlyphCache","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from_str","from_str","cmp","cmp","eq","eq","pick_shader","partial_cmp","partial_cmp","fmt","fmt","clone","clone","fmt","fmt","clone","clone","clone","drop","drop","drop","drop","from","clone","clone","clone","clone","clone","clone","clone","clone","clone","fmt","fmt","clear_color","clear_stencil","tri_list","tri_list_uv","get_size","create","update","get_uniform","new","from_vs_fs","new","from_vs_fs","new","from_colored_textured","viewport","get_current_program","use_program","clear_program","use_draw_state","clear_draw_state","draw_begin","draw_end","draw","has_texture_alpha","new","get_id","empty","from_memory_alpha","from_path","from_image","update","get_major_minor","to_glsl","new","set","get","to_opengl","new","get_convert_gamma","set_convert_gamma","convert_gamma","get_compress","set_compress","compress","get_generate_mipmap","set_generate_mipmap","generate_mipmap","get_min","set_min","min","get_mag","set_mag","mag","get_mipmap","set_mipmap","mipmap","get_filter","set_filter","filter"],"q":["opengl_graphics","opengl_graphics::shader_utils","","","","","","","","","","opengl_graphics","opengl_graphics::error","","opengl_graphics","opengl_graphics::shader_uniforms","","","","","","","","","","","","","","","","","","opengl_graphics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","opengl_graphics::ops","","opengl_graphics","","","","","","","","","","","","","","","","","opengl_graphics::shader_utils","","","","","","","opengl_graphics::error","","","","","","","","opengl_graphics::shader_uniforms","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","opengl_graphics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","opengl_graphics::shader_utils","opengl_graphics","","","opengl_graphics::error","opengl_graphics::shader_uniforms","","","","","","","","","opengl_graphics::error","","opengl_graphics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Helper functions for dealing with shaders.","Describes a shader attribute.","Create XYZ vertex attribute.","Create XY vertex attribute.","Create RGB color attribute.","Create RGBA color attribute.","Create texture coordinate attribute.","Sets attribute data.","Compiles a shader.","Finds attribute location from a program.","Finds uniform location from a program.","Errors","An enum to represent various possible run-time errors …","An error happened with I/O.","Types and methods for setting shader uniforms","Describes a shader uniform of a given type.","Shader uniform type","Shader uniform float","Shader uniform integer","Shader uniform vector of size 2 Vector elements are floats","Shader uniform vector of size 3 Vector elements are floats","Shader uniform vector of size 4 Vector elements are floats","Shader uniform 2x2 matrix Matrix elements are floats","Shader uniform 3x3 matrix Matrix elements are floats","Shader uniform 4x4 matrix Matrix elements are floats","Set the value of the float uniform.","Set the value of the integer uniform.","Set the value of the vector 2 uniform.","Set the value of the vector 3 uniform.","Set the value of the vector 4 uniform.","Set the value of the 2x2 matrix uniform.","Set the value of the 3x3 matrix uniform.","Set the value of the 4x4 matrix uniform.","","","","","","","","","","","","","","Shader picker.","For OpenGL version 3.3 and above, the GLSL version is the …","","","","","","","","","","","","","Describes how to render colored objects.","Describes how to render textured objects.","Contains OpenGL data.","Wraps OpenGL texture data. The texture gets deleted when …","Image operations for textures.","Flips the image vertically.","Converts from alpha to rgba8.","Implemented by all images to be used with generic …","Get the image size.","Gets the image width.","Gets the image height.","Texture creation parameters.","Texture format.","<code>(red, green, blue, alpha)</code> with values 0-255.","Implemented by textures for creation.","The error when creating texture.","Create texture from memory.","Implemented by textures for updating.","The error when updating texture.","Update the texture.","Sampling filter","A Weighted Linear Blend","Nearest Texel","Glyph cache implementation for OpenGL backendry to get uniform from the current shader of a given …","Generate using pass-through shaders.","Generate using custom vertex and fragment shaders.","Generate using pass-through shaders.","Generate using custom vertex and fragment shaders.","Creates a new OpenGL back-end.","Create a new OpenGL back-end with <code>Colored</code> and <code>Textured</code> …","Sets viewport with normalized coordinates and center as …","Returns the current program","Sets the current program only if the program is not in …","Unset the current program.","Sets the current draw state, by detecting changes.","Unsets the current draw state.","Setup that should be called at the start of a frame’s …","Finalize the frame’s draw calls.","Convenience for wrapping draw calls with the begin and …","Assume all textures has alpha channel for now.","Creates a new texture.","Gets the OpenGL id of the texture.","Returns empty texture.","Loads image from memory, the format is 8-bit greyscale.","Loads image by relative file name to the asset root.","Creates a texture from image.","Updates image with a new one.","Gets the minor version of OpenGL.","Gets GLSL version associated with OpenGL.","Creates a new shader picker.","Sets source for a shader version.","Get the closest shader to a shader version.","Gets OpenGL version associated with GLSL.","Create default settings.","Gets whether to convert gamma, treated as sRGB color …","Sets convert gamma.","Sets convert gamma.","Gets wheter compress on the GPU.","Sets compress.","Sets compress.","Gets generate mipmap.","Sets generate mipmap.","Sets generate mipmap.","Gets minify filter.","Sets minify filter.","Sets minify filter.","Gets magnify filter","Sets magnify filter","Sets magnify filter","Gets minify mipmap filter","Sets magnify mipmap filter, and sets generate_mipmap to …","Sets magnify mipmap filter, and sets generate_mipmap to …","Returns the min and mag filter","Sets the min and mag filter","Sets the min and mag filter"],"i":[0,0,1,1,1,1,1,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,0,4,4,4,4,4,4,4,4,4,4,4,4,0,0,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,6,6,6,0,0,7,0,8,8,0,9,9,0,10,10,0,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,20,20,20,20,20,20,20,21,21,21,21,21,21,21,22,22,22,22,22,22,22,4,4,4,4,4,4,4,4,4,23,23,23,23,23,23,23,5,5,5,5,5,5,5,5,5,24,24,24,24,24,24,24,24,24,7,7,7,7,7,7,7,7,7,10,10,10,10,10,10,10,10,10,5,4,5,4,4,5,5,4,5,5,4,5,4,7,10,24,10,7,1,19,20,22,2,3,11,12,13,14,15,16,17,18,2,2,21,21,21,21,22,22,22,21,19,19,20,20,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,4,4,23,23,23,5,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24],"f":[null,null,[[["gluint",6],["str",15]],[["result",4],["dynamicattribute",3],["string",3]]],[[["gluint",6],["str",15]],[["result",4],["dynamicattribute",3],["string",3]]],[[["gluint",6],["str",15]],[["result",4],["dynamicattribute",3],["string",3]]],[[["gluint",6],["str",15]],[["result",4],["dynamicattribute",3],["string",3]]],[[["gluint",6],["str",15]],[["result",4],["dynamicattribute",3],["string",3]]],[[]],[[["glenum",6],["str",15]],[["string",3],["gluint",6],["result",4]]],[[["gluint",6],["str",15]],[["string",3],["gluint",6],["result",4]]],[[["gluint",6],["str",15]],[["string",3],["gluint",6],["result",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["glgraphics",3],["f32",15]]],[[["glgraphics",3],["i32",15]]],[[["glgraphics",3]]],[[["glgraphics",3]]],[[["glgraphics",3]]],[[["glgraphics",3]]],[[["glgraphics",3]]],[[["glgraphics",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u8",15]],[["global",3],["vec",3],["u8",15]]],[[],[["global",3],["vec",3],["u8",15]]],null,[[]],[[],["u32",15]],[[],["u32",15]],null,null,null,null,null,[[["format",4],["texturesettings",3]],["result",4]],null,null,[[["format",4]],["result",4]],null,null,null,null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["str",15]],[["result",4],["glsl",4]]],[[["str",15]],[["opengl",4],["result",4]]],[[["glsl",4]],["ordering",4]],[[["opengl",4]],["ordering",4]],[[["opengl",4]],["bool",15]],[[["glsl",4]],["bool",15]],[[["shaders",3]],["option",4]],[[["opengl",4]],[["option",4],["ordering",4]]],[[["glsl",4]],[["option",4],["ordering",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[],["glsl",4]],[[],["opengl",4]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[],["texturesettings",3]],[[],["filter",4]],[[],["format",4]],[[]],[[]],[[]],[[]],[[["error",3]],["error",4]],[[],["shaderuniform",3]],[[],["sufloat",3]],[[],["suint",3]],[[],["suvec2",3]],[[],["suvec3",3]],[[],["suvec4",3]],[[],["sumat2x2",3]],[[],["sumat3x3",3]],[[],["sumat4x4",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["u8",15]]],[[["drawstate",3]]],[[["texture",3],["drawstate",3]]],[[]],[[["into",8],["texturesettings",3],["format",4]],["result",4]],[[["into",8],["format",4]],["result",4]],[[["str",15]],[["option",4],["shaderuniform",3]]],[[["glsl",4]]],[[["glsl",4],["shaders",3]],[["string",3],["result",4]]],[[["glsl",4]]],[[["glsl",4],["shaders",3]],[["string",3],["result",4]]],[[["opengl",4]]],[[["colored",3],["textured",3]]],[[["i32",15]]],[[],[["gluint",6],["option",4]]],[[["gluint",6]]],[[]],[[["drawstate",3]]],[[]],[[["viewport",3]],["context",3]],[[]],[[["viewport",3]]],[[["texture",3]],["bool",15]],[[["u32",15],["gluint",6]]],[[],["gluint",6]],[[["texturesettings",3]],[["string",3],["result",4]]],[[["u32",15],["texturesettings",3]],[["string",3],["result",4]]],[[["texturesettings",3]],[["string",3],["result",4]]],[[["rgbaimage",6],["texturesettings",3]]],[[["rgbaimage",6]]],[[]],[[],["glsl",4]],[[],["shaders",3]],[[],["shaders",3]],[[],["option",4]],[[],["opengl",4]],[[],["texturesettings",3]],[[],["bool",15]],[[["bool",15]]],[[["bool",15]],["texturesettings",3]],[[],["bool",15]],[[["bool",15]]],[[["bool",15]],["texturesettings",3]],[[],["bool",15]],[[["bool",15]]],[[["bool",15]],["texturesettings",3]],[[],["filter",4]],[[["filter",4]]],[[["filter",4]],["texturesettings",3]],[[],["filter",4]],[[["filter",4]]],[[["filter",4]],["texturesettings",3]],[[],["filter",4]],[[["filter",4]]],[[["filter",4]],["texturesettings",3]],[[]],[[["filter",4]]],[[["filter",4]],["texturesettings",3]]],"p":[[3,"DynamicAttribute"],[4,"Error"],[3,"ShaderUniform"],[4,"OpenGL"],[4,"GLSL"],[8,"ImageSize"],[4,"Format"],[8,"CreateTexture"],[8,"UpdateTexture"],[4,"Filter"],[3,"SUFloat"],[3,"SUInt"],[3,"SUVec2"],[3,"SUVec3"],[3,"SUVec4"],[3,"SUMat2x2"],[3,"SUMat3x3"],[3,"SUMat4x4"],[3,"Colored"],[3,"Textured"],[3,"GlGraphics"],[3,"Texture"],[3,"Shaders"],[3,"TextureSettings"]]},\
"piston":{"doc":"A modular game engine written in Rust.","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"png":{"doc":"PNG encoder and decoder","t":[0,6,17,17,17,17,17,17,17,17,17,17,17,5,5,5,5,4,13,13,13,13,13,4,13,13,13,13,13,3,12,12,12,4,13,13,3,12,12,12,12,12,12,12,12,12,3,12,12,3,12,12,12,12,12,12,12,12,12,12,3,3,3,3,12,12,12,12,12,3,4,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,12,12,12,12,13,13,3,3,4,13,13,8,10,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["chunk","ChunkType","IHDR","PLTE","IDAT","IEND","tRNS","bKGD","tIME","pHYs","acTL","fcTL","fdAT","is_critical","is_private","reserved_set","safe_to_copy","ColorType","Grayscale","RGB","Indexed","GrayscaleAlpha","RGBA","BitDepth","One","Two","Four","Eight","Sixteen","PixelDimensions","xppu","yppu","unit","Unit","Unspecified","Meter","FrameControl","sequence_number","width","height","x_offset","y_offset","delay_num","delay_den","dispose_op","blend_op","AnimationControl","num_frames","num_plays","Info","width","height","bit_depth","color_type","interlaced","trns","pixel_dims","palette","frame_control","animation_control","Transformations","Decoder","Reader","OutputInfo","width","height","color_type","bit_depth","line_size","StreamingDecoder","Decoded","Nothing","Header","ChunkBegin","ChunkComplete","PixelDimensions","AnimationControl","FrameControl","ImageData","PartialChunk","ImageEnd","DecodingError","IoError","Format","InvalidSignature","CrcMismatch","recover","crc_val","crc_sum","chunk","Other","CorruptFlateStream","Encoder","Writer","EncodingError","IoError","Format","Parameter","set_param","HasParameters","set","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","set_param","set_param","set_param","drop","from","from","from","extend","clone","clone","clone","clone","clone","clone","default","cmp","eq","eq","eq","eq","ne","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","sub","sub_assign","not","bitand","bitor","bitxor","bitand_assign","bitor_assign","bitxor_assign","hash","from_iter","fmt","fmt","fmt","fmt","description","description","new","reset","update","buffer_size","new","read_info","info","next_frame","next_row","next_interlaced_row","output_color_type","output_buffer_size","output_line_size","new","write_header","write_chunk","write_image_data","set","samples","from_u8","from_u8","from_u8","size","is_animated","animation_control","frame_control","bits_per_pixel","bytes_per_pixel","raw_bytes","raw_row_length","raw_row_length_from_width","IDENTITY","STRIP_16","STRIP_ALPHA","PACKING","PACKSWAP","EXPAND","INVERT_MONO","SHIFT","BGR","SWAP_ALPHA","SWAP_ENDIAN","INVERT_ALPHA","STRIP_FILLER","STRIP_FILLER_BEFORE","STRIP_FILLER_AFTER","GRAY_TO_RGB","EXPAND_16","SCALE_16","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set"],"q":["png","png::chunk","","","","","","","","","","","","","","","","png","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","png::DecodingError","","","","pngd":["Chunk types and functions","","Image header","Palette","Image data","Image trailer","Transparency","Background colour","Image last-modification time","Physical pixel dimensions","Animation control","Frame control","Frame data","Returns true if the chunk is critical.","Returns true if the chunk is private.","Checks whether the reserved bit of the chunk name is set. …","Returns true if the chunk is safe to copy if unknown.","","","","","","","Bit depth of the png file","","","","","","Pixel dimensions information","Pixels per unit, X axis","Pixels per unit, Y axis","Either <em>Meter</em> or <em>Unspecified</em>","Physical unit of the pixel dimensions","","","Frame control information","Sequence number of the animation chunk, starting from 0","Width of the following frame","Height of the following frame","X position at which to render the following frame","Y position at which to render the following frame","Frame delay fraction numerator","Frame delay fraction denominator","Type of frame area disposal to be done after rendering …","Type of frame area rendering for this frame","Animation control information","Number of frames","Number of times to loop this APNG.  0 indicates infinite …","PNG info struct","","","","","","","","","","","Output transformations","PNG Decoder","PNG reader (mostly high-level interface)","Output info","","","","","","PNG StreamingDecoder (low-level interface)","Result of the decoding process","Nothing decoded yet","","","","","","","Decoded raw image data.","","","","","","","","bytes to skip to try to recover from this error","Stored CRC32 value","Calculated CRC32 sum","","","","PNG Encoder","PNG writer","","","","Configuration parameter trait","","Object has parameterseturns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the complement of this set of flags.","Returns the intersection between the two sets of flags.","Returns the union of the two sets of flags.","Returns the left flags, but with all the right flags …","Disables all flags disabled in the set.","Adds the set of flags.","Toggles the set of flags.","","","","","","","","","Creates a new StreamingDecoder","Resets the StreamingDecoder","Low level StreamingDecoder interface.","Returns the size needed to hold a decoded frame","","Reads all meta data until the first IDAT chunk","","Decodes the next frame into <code>buf</code>","Returns the next processed row of the image","Returns the next processed row of the image","Returns the color type and the number of bits per sample …","Returns the number of bytes required to hold a …","Returns the number of bytes required to hold a …","","","","Writes the image data.","","Returns the number of samples used per pixel of <code>ColorType</code>","u8 -> Self. Temporary solution until Rust provides a …","u8 -> Self. Temporary solution until Rust provides a …","u8 -> Self. Temporary solution until Rust provides a …","Size of the image","Returns true if the image is an APNG image.","Returns the frame control information of the image","Returns the frame control information of the current frame","Returns the bits per pixel","Returns the bytes per pixel","Returns the number of bytes needed for one deinterlaced …","Returns the number of bytes needed for one deinterlaced …","Returns the number of bytes needed for one deinterlaced …","No transformation","Strip 16-bit samples to 8 bits","Discard the alpha channel","Expand 1; 2 and 4-bit samples to bytes","Change order of packed pixels to LSB first","Expand paletted images to RGB; expand grayscale images of …","Invert monochrome images","Normalize pixels to the sBIT depth","Flip RGB to BGR; RGBA to BGRA","Flip RGBA to ARGB or GA to AG","Byte-swap 16-bit samples","Change alpha from opacity to transparency","","","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,2,2,2,2,2,0,3,3,3,0,4,4,0,5,5,5,5,5,5,5,5,5,0,6,6,0,7,7,7,7,7,7,7,7,7,7,0,0,0,0,8,8,8,8,8,0,0,9,9,9,9,9,9,9,9,9,9,0,10,10,10,10,11,11,11,11,10,10,0,0,0,12,12,0,13,0,14,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,15,15,15,15,15,15,15,8,8,8,8,8,8,8,16,16,16,16,16,16,16,17,17,17,17,17,17,17,12,12,12,12,12,12,12,12,18,18,18,18,18,18,18,19,19,19,19,19,19,19,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,20,20,20,20,20,20,20,20,20,20,1,2,19,10,10,12,20,1,2,3,4,6,20,7,20,1,2,4,20,20,20,9,10,12,1,2,3,4,5,6,7,20,10,12,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,10,12,15,15,15,8,16,16,17,17,17,17,17,17,17,18,18,19,19,14,1,1,2,4,7,7,7,7,7,7,7,7,7,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[["chunktype",6]],["bool",15]],[[["chunktype",6]],["bool",15]],[[["chunktype",6]],["bool",15]],[[["chunktype",6]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,[[["parameter",8]]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["decoder",3]]],[[["encoder",3]]],[[["encoder",3]]],[[]],[[["error",3]],["decodingerror",4]],[[["string",3]],["decodingerror",4]],[[["error",3]],["encodingerror",4]],[[["intoiterator",8]]],[[],["colortype",4]],[[],["bitdepth",4]],[[],["pixeldimensions",3]],[[],["unit",4]],[[],["animationcontrol",3]],[[],["transformations",3]],[[],["info",3]],[[["transformations",3]],["ordering",4]],[[["colortype",4]],["bool",15]],[[["bitdepth",4]],["bool",15]],[[["unit",4]],["bool",15]],[[["transformations",3]],["bool",15]],[[["transformations",3]],["bool",15]],[[["transformations",3]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["transformations",3]],["transformations",3]],[[["transformations",3]]],[[],["transformations",3]],[[["transformations",3]],["transformations",3]],[[["transformations",3]],["transformations",3]],[[["transformations",3]],["transformations",3]],[[["transformations",3]]],[[["transformations",3]]],[[["transformations",3]]],[[]],[[["intoiterator",8]],["transformations",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["str",15]],[[],["str",15]],[[],["streamingdecoder",3]],[[]],[[],[["result",4],["decodingerror",4]]],[[],["usize",15]],[[],["decoder",3]],[[],[["result",4],["decodingerror",4]]],[[],["info",3]],[[],[["result",4],["decodingerror",4]]],[[],[["result",4],["option",4],["decodingerror",4]]],[[],[["result",4],["decodingerror",4],["option",4]]],[[]],[[],["usize",15]],[[["u32",15]],["usize",15]],[[["u32",15]],["encoder",3]],[[],[["encodingerror",4],["writer",3],["result",4]]],[[],[["result",4],["encodingerror",4]]],[[],[["result",4],["encodingerror",4]]],[[["parameter",8]]],[[],["usize",15]],[[["u8",15]],[["option",4],["colortype",4]]],[[["u8",15]],[["option",4],["bitdepth",4]]],[[["u8",15]],[["unit",4],["option",4]]],[[]],[[],["bool",15]],[[],[["animationcontrol",3],["option",4]]],[[],[["framecontrol",3],["option",4]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["u32",15]],["usize",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["transformations",3]],[[],["transformations",3]],[[],["u32",15]],[[["u32",15]],[["transformations",3],["option",4]]],[[["u32",15]],["transformations",3]],[[["u32",15]],["transformations",3]],[[],["bool",15]],[[],["bool",15]],[[["transformations",3]],["bool",15]],[[["transformations",3]],["bool",15]],[[["transformations",3]]],[[["transformations",3]]],[[["transformations",3]]],[[["transformations",3],["bool",15]]]],"p":[[4,"ColorType"],[4,"BitDepth"],[3,"PixelDimensions"],[4,"Unit"],[3,"FrameControl"],[3,"AnimationControl"],[3,"Info"],[3,"OutputInfo"],[4,"Decoded"],[4,"DecodingError"],[13,"CrcMismatch"],[4,"EncodingError"],[8,"Parameter"],[8,"HasParameters"],[3,"StreamingDecoder"],[3,"Decoder"],[3,"Reader"],[3,"Encoder"],[3,"Writer"],[3,"Transformations"]]},\
"rand":{"doc":"Utilities for random number generation","t":[0,0,3,11,11,8,16,8,16,10,10,10,11,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,8,10,8,10,8,10,11,3,3,3,12,12,3,11,0,0,0,3,11,11,3,0,3,3,0,3,11,11,3,0,3,11,11,3,11,3,0,0,3,3,0,3,11,3,4,13,13,13,13,13,3,3,3,3,3,0,5,5,5,5,8,10,10,10,10,8,8,16,10,11,11,4,13,13,13,13,3,12,12,5,8,10,8,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10,10,3,3,8,10,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["distributions","uniform","Uniform","new","new_inclusive","SampleUniform","Sampler","UniformSampler","X","new","new_inclusive","sample","sample_single","UniformInt","UniformFloat","UniformDuration","range","Alphanumeric","Uniform","OpenClosed01","Open01","Gamma","ChiSquared","FisherF","StudentT","Normal","LogNormal","StandardNormal","Exp","Exp1","Pareto","Poisson","Binomial","Bernoulli","Cauchy","Sample","sample","IndependentSample","ind_sample","Distribution","sample","sample_iter","DistIter","Standard","Weighted","weight","item","WeightedChoice","new","prelude","prng","chacha","ChaChaRng","new_unseeded","set_stream","ChaChaCore","hc128","Hc128Rng","Hc128Core","isaac","IsaacRng","new_unseeded","new_from_u64","IsaacCore","isaac64","Isaac64Rng","new_unseeded","new_from_u64","Isaac64Core","new_from_u64","XorShiftRng","rngs","adapter","ReadRng","ReseedingRng","mock","StepRng","new","JitterRng","TimerError","NoTimer","CoarseTimer","NotMonotonic","TinyVariantions","TooManyStuck","EntropyRng","SmallRng","StdRng","ThreadRng","OsRng","seq","sample_iter","sample_slice","sample_slice_ref","sample_indices","RngCore","next_u32","next_u64","fill_bytes","try_fill_bytes","CryptoRng","SeedableRng","Seed","from_seed","seed_from_u64","from_rng","ErrorKind","Unavailable","Unexpected","Transient","NotReady","Error","kind","msg","thread_rng","Rand","rand","Rng","gen","gen_range","sample","sample_iter","fill","try_fill","gen_bool","choose","choose_mut","shuffle","gen_iter","gen_weighted_bool","gen_ascii_chars","AsByteSliceMut","as_byte_slice_mut","to_le","Generator","AsciiGenerator","FromEntropy","from_entropy","weak_rng","random","sample","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from_entropy","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from_entropy","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from_entropy","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from_entropy","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from_entropy","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from_entropy","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from_entropy","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from_entropy","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from_entropy","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from_entropy","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from_entropy","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","try_from","borrow","borrow_mut","try_into","type_id","read","description","cause","eq","fmt","fmt","fmt","clone","new","new_inclusive","sample","sample_single","new","new_inclusive","sample","sample_single","new","new_inclusive","sample","sample_single","new","new_inclusive","sample","sample_single","new","new_inclusive","sample","sample_single","new","new_inclusive","sample","sample_single","new","new_inclusive","sample","sample_single","new","new_inclusive","sample","sample_single","new","new_inclusive","sample","sample_single","new","new_inclusive","sample","sample_single","new","new_inclusive","sample","sample_single","new","new_inclusive","sample","sample_single","new","new_inclusive","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","ind_sample","ind_sample","ind_sample","ind_sample","ind_sample","ind_sample","ind_sample","ind_sample","ind_sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","from","from","from","next","size_hint","next","next","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","description","generate","generate","generate","generate","next_u32","next_u64","fill_bytes","try_fill_bytes","next_u32","next_u64","fill_bytes","try_fill_bytes","next_u32","next_u64","fill_bytes","try_fill_bytes","next_u32","next_u64","fill_bytes","try_fill_bytes","next_u32","next_u64","fill_bytes","try_fill_bytes","next_u32","next_u64","fill_bytes","try_fill_bytes","next_u32","next_u64","fill_bytes","try_fill_bytes","next_u32","next_u64","fill_bytes","try_fill_bytes","next_u32","next_u64","fill_bytes","try_fill_bytes","next_u32","next_u64","fill_bytes","try_fill_bytes","next_u32","next_u64","fill_bytes","try_fill_bytes","next_u32","next_u64","fill_bytes","try_fill_bytes","next_u32","next_u64","fill_bytes","try_fill_bytes","next_u32","next_u64","fill_bytes","try_fill_bytes","from_seed","from_rng","from_seed","from_seed","from_rng","from_seed","from_seed","seed_from_u64","from_rng","from_seed","seed_from_u64","from_rng","from_seed","seed_from_u64","from_rng","from_seed","seed_from_u64","from_rng","from_seed","from_rng","from_seed","from_rng","from_seed","from_rng","new","new","new","new","new","new","new","new","new","new","new","new","new_unseeded","new","new","reseed","new","new","new_with_timer","set_rounds","test_timer","timer_stats","new","should_retry","should_wait","description","new","with_cause","take_cause"],"q":["rand","rand::distributions","rand::distributions::uniform","","","","","","","","","","","","","","rand::distributions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rand","","rand::prng","rand::prng::chacha","","","","rand::prng","rand::prng::hc128","","rand::prng","rand::prng::isaac","","","","rand::prng","rand::prng::isaac64","","","","","rand::prng","rand","rand::rngs","rand::rngs::adapter","","rand::rngs","rand::rngs::mock","","rand::rngs","","","","","","","","","","","","rand","rand::seq","","","","rand","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rand::distributions","","","","","","","","","rand::distributions::uniform","","","","","","","","","","","","","","","","","","","","","","","","","","","rand::distributionsrand::prng::chacha","","","","","","","","","","","","","","","","","","","","rand::prng::hc128","","","","","","","","","","","","","","","","","","","","rand::prng::isaac","","","","","","","","","","","","","","","","","","","","rand::prng::isaac64","","","","","","","","","","","","","","","","","","","","rand::prng","","","","","","","","","","rand::rngs::adapter","","","","","","","","","","","","","","","","rand::rngs","","","","","","","","","","","","","","","","","","","","","","","","","","rand::rngs::mock","","","","","","","","","rand::rngs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rand","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rand::distributions::uniform","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rand::distributions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rand::prng::chacha","rand","rand::distributions","","rand","","rand::distributions","rand::distributions::uniform","","","rand::distributions","","","","","","","","","","","","","","","","","","rand::prng::chacha","","rand::prng::hc128","","rand::prng::isaac","","rand::prng::isaac64","","rand::prng","rand::rngs::adapter","rand::rngs","","rand::rngs::mock","rand::rngs","","","","","","rand::distributions","rand::distributions::uniform","","","rand::distributions","","","","","","","","","","","","","","","","","","","","","rand::prng::chacha","","rand::prng::hc128","","rand::prng::isaac","","rand::prng::isaac64","","rand::prng","rand::rngs::adapter","","rand::rngs","","","rand::rngs::mock","rand::rngs","","","","rand","","rand::rngs","","rand::prng::chacha","rand::prng::hc128","rand::prng::isaac","rand::prng::isaac64","rand::prng::chacha","","","","rand::prng::hc128","","","","rand::prng::isaac","","","","rand::prng::isaac64","","","","rand::prng","","","","rand::rngs::adapter","","","","","","","","rand::rngs","","","","","","","","rand::rngs::mock","","","","rand::rngs","","","","","","","","","","","","","","","","rand::prng::chacha","","","rand::prng::hc128","","","rand::prng::isaac","","","","","","rand::prng::isaac64","","","","","","rand::prng","","rand::rngs","","","","rand::distributions","","","","","","","","","","","","rand::prng","rand::rngs::adapter","","","rand::rngs","","","","","","","rand","","","","",""],"d":["Generating random samples from probability distributions.","A distribution uniformly sampling numbers within a given …","Sample values uniformly between two bounds.","Create a new <code>Uniform</code> instance which samples uniformly …","Create a new <code>Uniform</code> instance which samples uniformly …","Helper trait for creating objects using the correct …","The <code>UniformSampler</code> implementation supporting type <code>X</code>.","Helper trait handling actual uniform sampling.","The type sampled by this implementation.","Construct self, with inclusive lower bound and exclusive …","Construct self, with inclusive bounds <code>[low, high]</code>.","Sample a value.","Sample a single value uniformly from a range with …","The back-end implementing <code>UniformSampler</code> for integer …","The back-end implementing <code>UniformSampler</code> for …","The back-end implementing <code>UniformSampler</code> for <code>Duration</code>.","DEPRECATED: Use <code>distributions::uniform</code> instead.","Sample a <code>char</code>, uniformly distributed over ASCII letters …","Sample values uniformly between two bounds.","A distribution to sample floating point numbers uniformly …","A distribution to sample floating point numbers uniformly …","The Gamma distribution <code>Gamma(shape, scale)</code> distribution.","The chi-squared distribution <code>χ²(k)</code>, where <code>k</code> is the …","The Fisher F distribution <code>F(m, n)</code>.","The Student t distribution, <code>t(nu)</code>, where <code>nu</code> is the …","The normal distribution <code>N(mean, std_dev**2)</code>.","The log-normal distribution <code>ln N(mean, std_dev**2)</code>.","Samples floating-point numbers according to the normal …","The exponential distribution <code>Exp(lambda)</code>.","Samples floating-point numbers according to the …","Samples floating-point numbers according to the Pareto …","The Poisson distribution <code>Poisson(lambda)</code>.","The binomial distribution <code>Binomial(n, p)</code>.","The Bernoulli distribution.","The Cauchy distribution <code>Cauchy(median, scale)</code>.","Types that can be used to create a random instance of …","Generate a random value of <code>Support</code>, using <code>rng</code> as the …","<code>Sample</code>s that do not require keeping track of state.","Generate a random value.","Types (distributions) that can be used to create a random …","Generate a random value of <code>T</code>, using <code>rng</code> as the source of …","Create an iterator that generates random values of <code>T</code>, …","An iterator that generates random values of <code>T</code> with …","A generic random value distribution, implemented for many …","A value with a particular weight for use with …","The numerical weight of this item","The actual item which is being weighted","A distribution that selects from a finite collection of …","Create a new <code>WeightedChoice</code>.","Convenience re-export of common members","Pseudo-random number generators.","The ChaCha random number generator.","A cryptographically secure random number generator that …","Create an ChaCha random number generator using the default…","Set the stream number.","The core of <code>ChaChaRng</code>, used with <code>BlockRng</code>.","The HC-128 random number generator.","A cryptographically secure random number generator that …","The core of <code>Hc128Rng</code>, used with <code>BlockRng</code>.","The ISAAC random number generator.","A random number generator that uses the ISAAC algorithm.","Create an ISAAC random number generator using the default …","Create an ISAAC random number generator using an <code>u64</code> as …","The core of <code>IsaacRng</code>, used with <code>BlockRng</code>.","The ISAAC-64 random number generator.","A random number generator that uses ISAAC-64, the 64-bit …","Create a 64-bit ISAAC random number generator using the …","Create an ISAAC-64 random number generator using an <code>u64</code> …","The core of <code>Isaac64Rng</code>, used with <code>BlockRng</code>.","Create an ISAAC-64 random number generator using an <code>u64</code> …","An Xorshift random number generator.","Random number generators and adapters for common usage:","Wrappers / adapters forming RNGs","An RNG that reads random bytes straight from any type …","A wrapper around any PRNG which reseeds the underlying …","Mock random number generator","A simple implementation of <code>RngCore</code> for testing purposes.","Create a <code>StepRng</code>, yielding an arithmetic sequence …","A true random number generator based on jitter in the CPU …","An error that can occur when <code>JitterRng::test_timer</code> fails.","No timer available.","Timer too coarse to use as an entropy source.","Timer is not monotonically increasing.","Variations of deltas of time too small.","Too many stuck results (indicating no added entropy).","An interface returning random data from external …","An RNG recommended when small state, cheap initialization …","The standard RNG. The PRNG algorithm in <code>StdRng</code> is chosen …","The type returned by <code>thread_rng</code>, essentially just a …","A random number generator that retrieves randomness …","Functions for randomly accessing and sampling sequences.","Randomly sample <code>amount</code> elements from a finite iterator.","Randomly sample exactly <code>amount</code> values from <code>slice</code>.","Randomly sample exactly <code>amount</code> references from <code>slice</code>.","Randomly sample exactly <code>amount</code> indices from <code>0..length</code>.","The core of a random number generator.","Return the next random <code>u32</code>.","Return the next random <code>u64</code>.","Fill <code>dest</code> with random data.","Fill <code>dest</code> entirely with random data.","A marker trait used to indicate that an [<code>RngCore</code>] or …","A random number generator that can be explicitly seeded.","Seed type, which is restricted to types …","Create a new PRNG using the given seed.","Create a new PRNG using a <code>u64</code> seed.","Create a new PRNG seeded from another <code>Rng</code>.","Error kind which can be matched over.","Feature is not available; not recoverable.","General failure; there may be a chance of recovery on …","A transient failure which likely can be resolved or …","Not ready yet: recommended to try again a little later.","Error type of random number generators","The error kind","The error message","Retrieve the lazily-initialized thread-local random number…","A type that can be randomly generated using an <code>Rng</code>.","Generates a random instance of this type using the …","An automatically-implemented extension trait on <code>RngCore</code> …","Return a random value supporting the <code>Standard</code> …","Generate a random value in the range [<code>low</code>, <code>high</code>), i.e. …","Sample a new value, using the given distribution.","Create an iterator that generates values using the given …","Fill <code>dest</code> entirely with random bytes (uniform value …","Fill <code>dest</code> entirely with random bytes (uniform value …","Return a bool with a probability <code>p</code> of being true.","Return a random element from <code>values</code>.","Return a mutable pointer to a random element from <code>values</code>.","Shuffle a mutable slice in place.","Return an iterator that will yield an infinite number of …","Return a bool with a 1 in n chance of true","Return an iterator of random characters from the set …","Trait for casting types to byte slices","Return a mutable reference to self as a byte slice","Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian …","Iterator which will generate a stream of random items.","Iterator which will continuously generate random ascii …","A convenience extension to <code>SeedableRng</code> allowing …","Creates a new instance, automatically seeded with fresh …","DEPRECATED: use <code>SmallRng</code> instead.","Generates a random value using the thread-local random …","DEPRECATED: use <code>seq::sample_iter</code> insteadefills the output buffer, <code>results</code>. See also the …","Refills the output buffer, <code>results</code>. See also the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an HC-128 random number generator with a seed. The …","","Create an ISAAC random number generator using an <code>u64</code> as …","","","Create an ISAAC random number generator using an <code>u64</code> as …","","","Create an ISAAC random number generator using an <code>u64</code> as …","","","","","","","","","","","Construct an object representing the <code>Gamma(shape, scale)</code> …","Create a new chi-squared distribution with …","Create a new <code>FisherF</code> distribution, with the given …","Create a new Student t distribution with <code>n</code> degrees of …","Construct a new <code>Normal</code> distribution with the given mean …","Construct a new <code>LogNormal</code> distribution with the given mean…","Construct a new <code>Exp</code> with the given shape parameter <code>lambda</code>…","Construct a new Pareto distribution with given <code>scale</code> and …","Construct a new <code>Poisson</code> with the given shape parameter …","Construct a new <code>Binomial</code> with the given shape parameters <code>n</code>…","Construct a new <code>Bernoulli</code> with the given probability of …","Construct a new <code>Cauchy</code> with the given shape parameters …","Creates a new XorShiftRng instance which is not seeded.","Create a new <code>ReadRng</code> from a <code>Read</code>.","Create a new <code>ReseedingRng</code> with the given parameters.","Reseed the internal PRNG.","Create a new <code>EntropyRng</code>.","Create a new <code>JitterRng</code>. Makes use of <code>std::time</code> for a …","Create a new <code>JitterRng</code>. A custom timer can be supplied, …","Configures how many rounds are used to generate each …","Basic quality tests on the timer, by measuring CPU timing …","Statistical test: return the timer delta of one normal …","Create a new <code>OsRng</code>.","True if this kind of error may resolve itself on retry.","True if we should retry but wait before retrying","A description of this error kind","Create a new instance, with specified kind and a message.","Create a new instance, with specified kind, message, and a…","Take the cause, if any. This allows the embedded cause to …"],"i":[0,0,0,1,1,0,2,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,5,0,6,6,0,0,0,7,7,0,8,0,0,0,0,9,9,0,0,0,0,0,0,10,10,0,0,0,11,11,0,12,0,0,0,0,0,0,0,13,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,16,16,16,16,0,17,17,17,17,0,18,18,0,0,19,0,20,20,20,20,20,20,20,20,20,20,20,20,20,0,21,21,0,0,0,22,0,0,0,1,1,1,1,1,1,1,1,1,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,45,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,47,10,10,10,10,10,10,10,10,10,10,48,48,48,48,48,48,48,48,48,48,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,49,49,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,51,51,51,51,51,51,51,51,51,52,52,52,52,52,52,52,53,53,53,53,53,53,53,53,53,14,14,14,14,14,14,14,14,14,14,13,13,13,13,13,13,13,13,13,54,54,54,54,54,54,54,54,54,54,55,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,57,57,57,57,57,57,57,57,57,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,58,58,58,58,58,58,58,58,59,59,59,59,59,59,59,59,15,18,18,17,17,18,18,17,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,25,25,25,8,1,34,26,27,28,29,31,32,8,1,34,26,27,28,29,31,32,1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,44,40,41,44,40,41,44,44,44,44,44,44,44,44,44,44,44,42,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,8,1,9,18,43,43,58,59,1,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,7,9,45,46,47,10,48,11,12,49,51,53,14,13,54,55,56,57,52,14,1,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,7,8,9,45,46,47,10,48,11,12,49,50,51,52,53,14,13,54,55,56,57,58,59,14,14,45,47,48,12,9,9,9,9,46,46,46,46,10,10,10,10,11,11,11,11,49,49,49,49,50,50,50,50,51,51,51,51,52,52,52,52,53,53,53,53,13,13,13,13,54,54,54,54,55,55,55,55,56,56,56,56,57,57,57,57,9,9,45,46,46,47,10,10,10,48,48,48,11,11,11,12,12,12,49,49,54,54,55,55,26,27,28,29,31,32,34,35,36,37,38,39,49,50,51,51,52,53,53,53,53,53,57,17,17,17,18,18,18],"f":[null,null,null,[[],["uniform",3]],[[],["uniform",3]],null,null,null,null,[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,[[]],null,[[]],[[],["distiter",3]],null,null,null,null,null,null,[[],["weightedchoice",3]],null,null,null,null,[[],["chacharng",3]],[[["u64",15]]],null,null,null,null,null,null,[[]],[[["u64",15]]],null,null,null,[[]],[[["u64",15]]],null,[[["u64",15]]],null,null,null,null,null,null,null,[[["u64",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15]],[["vec",3],["result",4]]],[[["usize",15]],["vec",3]],[[["usize",15]],["vec",3]],[[["usize",15]],[["usize",15],["vec",3]]],null,[[],["u32",15]],[[],["u64",15]],[[]],[[],[["error",3],["result",4]]],null,null,null,[[]],[[["u64",15]]],[[],[["error",3],["result",4]]],null,null,null,null,null,null,null,null,[[],["threadrng",3]],null,[[]],null,[[]],[[["partialord",8],["sampleuniform",8]],[["partialord",8],["sampleuniform",8]]],[[["distribution",8]]],[[],[["distribution",8],["distiter",3]]],[[]],[[],[["error",3],["result",4]]],[[["f64",15]],["bool",15]],[[],["option",4]],[[],["option",4]],[[]],[[],["generator",3]],[[["u32",15]],["bool",15]],[[],["asciigenerator",3]],null,[[]],[[]],null,null,null,[[]],[[],["xorshiftrng",3]],[[]],[[["usize",15]],["vec",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],[["usize",15],["result",4],["error",3]]],[[],["str",15]],[[],[["option",4],["error",8]]],[[["errorkind",4]],["bool",15]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[],["errorkind",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["duration",3]],["uniformduration",3]],[[["duration",3]],["uniformduration",3]],[[],["duration",3]],[[]],[[]],[[],["f64",15]],[[],["f64",15]],[[],["f64",15]],[[],["f64",15]],[[],["f64",15]],[[],["f64",15]],[[],["f64",15]],[[]],[[]],[[],["f64",15]],[[],["f64",15]],[[],["f64",15]],[[],["f64",15]],[[],["f64",15]],[[],["f64",15]],[[],["f64",15]],[[]],[[],["f64",15]],[[],["f64",15]],[[],["f64",15]],[[],["f64",15]],[[],["f64",15]],[[],["f64",15]],[[],["f64",15]],[[],["f64",15]],[[],["f64",15]],[[],["f64",15]],[[],["u64",15]],[[],["u64",15]],[[],["bool",15]],[[],["f64",15]],[[],["f32",15]],[[],["f32",15]],[[],["f32",15]],[[],["f64",15]],[[],["f64",15]],[[],["f64",15]],[[],["u8",15]],[[],["u16",15]],[[],["u32",15]],[[],["u64",15]],[[],["usize",15]],[[],["i8",15]],[[],["i16",15]],[[],["i32",15]],[[],["i64",15]],[[],["isize",15]],[[],["char",15]],[[],["char",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["wrapping",3]],[[]],[[["range",3]],["uniform",3]],[[["chachacore",3]]],[[["timererror",4]],["error",3]],[[],["option",4]],[[]],[[],["option",4]],[[],[["char",15],["option",4]]],[[],["uniform",3]],[[],["uniformint",3]],[[],["uniformfloat",3]],[[],["uniformduration",3]],[[],["gamma",3]],[[],["chisquared",3]],[[],["fisherf",3]],[[],["studentt",3]],[[],["standardnormal",3]],[[],["normal",3]],[[],["lognormal",3]],[[],["exp1",3]],[[],["exp",3]],[[],["pareto",3]],[[],["poisson",3]],[[],["binomial",3]],[[],["bernoulli",3]],[[],["cauchy",3]],[[],["openclosed01",3]],[[],["open01",3]],[[],["standard",3]],[[],["weighted",3]],[[],["chacharng",3]],[[],["chachacore",3]],[[],["hc128rng",3]],[[],["hc128core",3]],[[],["isaacrng",3]],[[],["isaaccore",3]],[[],["isaac64rng",3]],[[],["isaac64core",3]],[[],["xorshiftrng",3]],[[],["reseedingrng",3]],[[],["jitterrng",3]],[[],["timererror",4]],[[],["steprng",3]],[[],["smallrng",3]],[[],["stdrng",3]],[[],["threadrng",3]],[[],["osrng",3]],[[]],[[["timererror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["str",15]],[[]],[[]],[[["isaacarray",3]]],[[["isaacarray",3]]],[[],["u32",15]],[[],["u64",15]],[[]],[[],[["error",3],["result",4]]],[[],["u32",15]],[[],["u64",15]],[[]],[[],[["error",3],["result",4]]],[[],["u32",15]],[[],["u64",15]],[[]],[[],[["error",3],["result",4]]],[[],["u32",15]],[[],["u64",15]],[[]],[[],[["error",3],["result",4]]],[[],["u32",15]],[[],["u64",15]],[[]],[[],[["error",3],["result",4]]],[[],["u32",15]],[[],["u64",15]],[[]],[[],[["error",3],["result",4]]],[[],["u32",15]],[[],["u64",15]],[[]],[[],[["error",3],["result",4]]],[[],["u32",15]],[[],["u64",15]],[[]],[[],[["error",3],["result",4]]],[[],["u32",15]],[[],["u64",15]],[[]],[[],[["error",3],["result",4]]],[[],["u32",15]],[[],["u64",15]],[[]],[[],[["error",3],["result",4]]],[[],["u32",15]],[[],["u64",15]],[[]],[[],[["error",3],["result",4]]],[[],["u32",15]],[[],["u64",15]],[[]],[[],[["error",3],["result",4]]],[[],["u32",15]],[[],["u64",15]],[[]],[[],[["error",3],["result",4]]],[[],["u32",15]],[[],["u64",15]],[[]],[[],[["error",3],["result",4]]],[[]],[[["rngcore",8]],[["error",3],["result",4]]],[[]],[[]],[[["rngcore",8]],[["error",3],["result",4]]],[[]],[[]],[[["u64",15]]],[[["rngcore",8]],[["error",3],["result",4]]],[[]],[[["u64",15]]],[[["rngcore",8]],[["error",3],["result",4]]],[[]],[[["u64",15]]],[[["rngcore",8]],[["error",3],["result",4]]],[[]],[[["u64",15]]],[[["rngcore",8]],[["error",3],["result",4]]],[[]],[[["rngcore",8]],[["error",3],["result",4]]],[[]],[[["rngcore",8]],[["error",3],["result",4]]],[[]],[[["rngcore",8]],[["error",3],["result",4]]],[[["f64",15]],["gamma",3]],[[["f64",15]],["chisquared",3]],[[["f64",15]],["fisherf",3]],[[["f64",15]],["studentt",3]],[[["f64",15]],["normal",3]],[[["f64",15]],["lognormal",3]],[[["f64",15]],["exp",3]],[[["f64",15]],["pareto",3]],[[["f64",15]],["poisson",3]],[[["f64",15],["u64",15]],["binomial",3]],[[["f64",15]],["bernoulli",3]],[[["f64",15]],["cauchy",3]],[[],["xorshiftrng",3]],[[],["readrng",3]],[[["u64",15]]],[[],[["error",3],["result",4]]],[[]],[[],[["jitterrng",3],["timererror",4],["result",4]]],[[],["jitterrng",3]],[[["u8",15]]],[[],[["result",4],["timererror",4],["u8",15]]],[[["bool",15]],["i64",15]],[[],[["error",3],["result",4],["osrng",3]]],[[],["bool",15]],[[],["bool",15]],[[],["str",15]],[[["str",15],["errorkind",4]],["error",3]],[[["str",15],["errorkind",4]],["error",3]],[[],[["box",3],["option",4]]]],"p":[[3,"Uniform"],[8,"SampleUniform"],[8,"UniformSampler"],[8,"Sample"],[8,"IndependentSample"],[8,"Distribution"],[3,"Weighted"],[3,"WeightedChoice"],[3,"ChaChaRng"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"Isaac64Core"],[3,"StepRng"],[4,"TimerError"],[8,"RngCore"],[8,"SeedableRng"],[4,"ErrorKind"],[3,"Error"],[8,"Rand"],[8,"Rng"],[8,"AsByteSliceMut"],[8,"FromEntropy"],[3,"UniformInt"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[3,"Pareto"],[3,"Poisson"],[3,"Binomial"],[3,"Bernoulli"],[3,"Cauchy"],[3,"OpenClosed01"],[3,"Open01"],[3,"Alphanumeric"],[3,"DistIter"],[3,"Standard"],[3,"ChaChaCore"],[3,"Hc128Rng"],[3,"Hc128Core"],[3,"IsaacCore"],[3,"XorShiftRng"],[3,"ReadRng"],[3,"ReseedingRng"],[3,"EntropyRng"],[3,"JitterRng"],[3,"SmallRng"],[3,"StdRng"],[3,"ThreadRng"],[3,"OsRng"],[3,"Generator"],[3,"AsciiGenerator"]]},\
"rayon":{"doc":"Data-parallelism library that makes it easy to convert …","t":[0,0,3,3,0,3,3,3,0,3,3,0,3,3,3,0,3,3,0,3,3,3,0,3,3,3,0,0,8,16,10,8,16,16,10,11,11,10,11,8,16,16,16,10,10,10,8,16,10,11,10,10,8,10,8,10,10,8,16,10,10,5,5,5,4,13,13,3,8,10,3,3,3,3,3,3,3,3,3,3,3,3,5,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,5,3,5,3,5,3,5,3,8,16,16,10,8,16,16,10,8,16,16,10,8,16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,8,10,8,10,0,3,3,3,0,8,10,0,3,0,3,0,3,3,3,0,8,10,11,11,11,8,10,11,11,11,11,11,11,11,11,3,3,3,3,3,3,3,0,8,10,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,5,5,5,5,5,3,5,3,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["collections","binary_heap","IntoIter","Iter","btree_map","IntoIter","Iter","IterMut","btree_set","IntoIter","Iter","hash_map","IntoIter","Iter","IterMut","hash_set","IntoIter","Iter","linked_list","IntoIter","Iter","IterMut","vec_deque","IntoIter","Iter","IterMut","iter","plumbing","ProducerCallback","Output","callback","Producer","Item","IntoIter","into_iter","min_len","max_len","split_at","fold_with","Consumer","Folder","Reducer","Result","split_at","into_folder","full","Folder","Result","consume","consume_iter","complete","full","Reducer","reduce","UnindexedConsumer","split_off_left","to_reducer","UnindexedProducer","Item","split","fold_with","bridge","bridge_producer_consumer","bridge_unindexed","Either","Left","Right","IterBridge","ParallelBridge","par_bridge","Chain","Chunks","Enumerate","Filter","FilterMap","FlatMap","Flatten","Fold","FoldWith","TryFold","TryFoldWith","Skip","split","Split","Take","Map","MapInit","MapWith","Zip","ZipEq","MultiZip","Interleave","InterleaveShortest","Intersperse","Update","Rev","MaxLen","MinLen","Cloned","Copied","Inspect","PanicFuse","WhileSome","repeat","Repeat","repeatn","RepeatN","empty","Empty","once","Once","IntoParallelIterator","Iter","Item","into_par_iter","IntoParallelRefIterator","Iter","Item","par_iter","IntoParallelRefMutIterator","Iter","Item","par_iter_mut","ParallelIterator","Item","for_each","for_each_with","for_each_init","try_for_each","try_for_each_with","try_for_each_init","count","map","map_with","map_init","cloned","copied","inspect","update","filter","filter_map","flat_map","flatten","reduce","reduce_with","try_reduce","try_reduce_with","fold","fold_with","try_fold","try_fold_with","sum","product","min","min_by","min_by_key","max","max_by","max_by_key","chain","find_any","find_first","find_last","find_map_any","find_map_first","find_map_last","any","all","while_some","panic_fuse","collect","unzip","partition","partition_map","intersperse","drive_unindexed","opt_len","IndexedParallelIterator","collect_into_vec","unzip_into_vecs","zip","zip_eq","interleave","interleave_shortest","chunks","cmp","partial_cmp","eq","ne","lt","le","gt","ge","enumerate","skip","take","position_any","position_first","position_last","rev","with_min_len","with_max_len","len","drive","with_producer","FromParallelIterator","from_par_iter","ParallelExtend","par_extend","option","IntoIter","Iter","IterMut","prelude","ParallelBridge","par_bridge","range","Iter","range_inclusive","Iter","result","IntoIter","Iter","IterMut","slice","ParallelSlice","as_parallel_slice","par_split","par_windows","par_chunks","ParallelSliceMut","as_parallel_slice_mut","par_split_mut","par_chunks_mut","par_sort","par_sort_by","par_sort_by_key","par_sort_unstable","par_sort_unstable_by","par_sort_unstable_by_key","Iter","Chunks","Windows","IterMut","ChunksMut","Split","SplitMut","str","ParallelString","as_parallel_string","par_chars","par_char_indices","par_bytes","par_encode_utf16","par_split","par_split_terminator","par_lines","par_split_whitespace","par_matches","par_match_indices","Chars","CharIndices","Bytes","EncodeUtf16","Split","SplitTerminator","Lines","SplitWhitespace","Matches","MatchIndices","vec","IntoIter","FnContext","ThreadBuilder","ThreadPool","ThreadPoolBuildError","ThreadPoolBuilder","current_num_threads","current_thread_index","join","join_context","scope","Scope","scope_fifo","ScopeFifo","spawn","spawn_fifo","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","into_iter","to_owned","clone_into","to_string","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","into_par_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","cmp","eq","ne","fmt","partial_cmp","hash","as_ref","as_ref","as_ref","deref_mut","into","next","size_hint","fold","count","last","nth","collect","all","deref","fmt","next_back","extend","from","clone","as_mut","as_mut","as_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","drop","default","description","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","opt_len","drive_unindexed","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","drive_unindexed","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","opt_len","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","opt_len","drive_unindexed","opt_len","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","len","drive","with_producer","len","drive","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","with_producer","len","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","drive","len","with_producer","par_extend","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","take","zip","is_left","is_right","left","right","as_ref","as_mut","flip","map_left","map_right","either","either_with","left_and_then","right_and_then","into_iter","left_or","left_or_default","left_or_else","right_or","right_or_default","right_or_else","factor_first","factor_second","into_inner","map","migrated","index","name","stack_size","run","new","install","current_num_threads","current_thread_index","current_thread_has_pending_tasks","join","scope","scope_fifo","spawn","spawn_fifo","new","build","build_global","build_scoped","spawn_handler","thread_name","num_threads","panic_handler","stack_size","breadth_first","start_handler","exit_handler","spawn","spawn_fifo"],"q":["rayon","rayon::collections","rayon::collections::binary_heap","","rayon::collections","rayon::collections::btree_map","","","rayon::collections","rayon::collections::btree_set","","rayon::collections","rayon::collections::hash_map","","","rayon::collections","rayon::collections::hash_set","","rayon::collections","rayon::collections::linked_list","","","rayon::collections","rayon::collections::vec_deque","","","rayon","rayon::iter","rayon::iter::plumbing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon","rayon::option","","","rayon","rayon::prelude","","rayon","rayon::range","rayon","rayon::range_inclusive","rayon","rayon::result","","","rayon","rayon::slice","","","","","","","","","","","","","","","","","","","","","","rayon","rayon::str","","","","","","","","","","","","","","","","","","","","","","rayon","rayon::vec","rayon","","","","","","","","","","","","","","","rayon::collections::binary_heap","","","","","","","","","","","","","","","","","","","","rayon::collections::btree_map","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::collections::btree_set","","","","","","","","","","","","","","","","","","rayon::collections::hash_map","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::collections::hash_set","","","","","","","","","","","","","","","","","","rayon::collections::linked_list","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::collections::vec_deque","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::iterrayon::option","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::range","","","","","","","","","","rayon::range_inclusive","","","","","","","","","","rayon::result","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::slice","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::str","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::vec","","","","","","","","","","rayon","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon","","","","","","","","","","","rayon::collections::binary_heap","","","","rayon::collections::btree_map","","","","","","rayon::collections::btree_set","","","","rayon::collections::hash_map","","","","","","rayon::collections::hash_set","","","","rayon::collections::linked_list","","","","","","rayon::collections::vec_deque","","","","","","rayon::iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::option","","","","","","rayon::range","","","","","","","","","","","","","","","","","","","","","","","","rayon::range_inclusive","","","","","","","","","","","","","","","","","","","","","","","","rayon::result","","","","","","rayon::slice","","","","","","","","","","","","rayon::str","","","","","","","","","","rayon::vec","","rayon::iter","","rayon::collections::binary_heap","","","","","","rayon::collections::vec_deque","","","","","","","","","rayon::iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::option","","","","","","","","","rayon::range","","","","","","","","","","","","","","","","","","","","","","","","rayon::range_inclusive","","","","","","","","","","","","rayon::result","","","","","","","","","rayon::slice","","","","","","","","","","","","","","","rayon::vec","","","rayon::iter","","","","rayon::collections::binary_heap","","rayon::collections::btree_map","rayon::collections::btree_set","rayon::collections::hash_map","rayon::collections::hash_set","rayon::collections::linked_list","","rayon::collections::vec_deque","","rayon::iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::option","","rayon::range","rayon::range_inclusive","rayon::result","","rayon::slice","","","","rayon::str","","","","","","","","","","rayon::vec","rayon::collections::binary_heap","","rayon::collections::btree_map","","","rayon::collections::btree_set","","rayon::collections::hash_map","","","rayon::collections::hash_set","","rayon::collections::linked_list","","","rayon::collections::vec_deque","","","rayon::iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::option","","","rayon::range","rayon::range_inclusive","rayon::result","","","rayon::slice","","","","","","","rayon::str","","","","","","","","","","rayon::vec","rayon::iter","","","","","","","","","","","","","","","","","","","","","","","","","","rayon","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Parallel iterator types for standard collections","This module contains the parallel iterator types for heaps…","Parallel iterator over a binary heap","Parallel iterator over an immutable reference to a binary …","This module contains the parallel iterator types for …","Parallel iterator over a B-Tree map","Parallel iterator over an immutable reference to a B-Tree …","Parallel iterator over a mutable reference to a B-Tree map","This module contains the parallel iterator types for …","Parallel iterator over a B-Tree set","Parallel iterator over an immutable reference to a B-Tree …","This module contains the parallel iterator types for hash …","Parallel iterator over a hash map","Parallel iterator over an immutable reference to a hash …","Parallel iterator over a mutable reference to a hash map","This module contains the parallel iterator types for hash …","Parallel iterator over a hash set","Parallel iterator over an immutable reference to a hash …","This module contains the parallel iterator types for …","Parallel iterator over a linked list","Parallel iterator over an immutable reference to a linked …","Parallel iterator over a mutable reference to a linked …","This module contains the parallel iterator types for …","Parallel iterator over a double-ended queue","Parallel iterator over an immutable reference to a …","Parallel iterator over a mutable reference to a …","Traits for writing parallel programs using an …","Traits and functions used to implement parallel …","The <code>ProducerCallback</code> trait is a kind of generic closure, …","The type of value returned by this callback. Analogous to …","Invokes the callback with the given producer as argument. …","A <code>Producer</code> is effectively a “splittable <code>IntoIterator</code>”…","The type of item that will be produced by this producer …","The type of iterator we will become.","Convert <code>self</code> into an iterator; at this point, no more …","The minimum number of items that we will process …","The maximum number of items that we will process …","Split into two producers; one produces items <code>0..index</code>, the…","Iterate the producer, feeding each element to <code>folder</code>, and …","A consumer is effectively a generalized “fold” …","The type of folder that this consumer can be converted …","The type of reducer that is produced if this consumer is …","The type of result that this consumer will ultimately …","Divide the consumer into two consumers, one processing …","Convert the consumer into a folder that can consume items …","Hint whether this <code>Consumer</code> would like to stop processing …","The <code>Folder</code> trait encapsulates the standard fold operation…","The type of result that will ultimately be produced by …","Consume next item and return new sequential state.","Consume items from the iterator until full, and return …","Finish consuming items, produce final result.","Hint whether this <code>Folder</code> would like to stop processing …","The reducer is the final step of a <code>Consumer</code> – after a …","Reduce two final results into one; this is executed after …","A stateless consumer can be freely copied. These …","Splits off a “left” consumer and returns it. The <code>self</code> …","Creates a reducer that can be used to combine the results …","A variant on <code>Producer</code> which does not know its exact …","The type of item returned by this producer.","Split midway into a new producer if possible, otherwise …","Iterate the producer, feeding each element to <code>folder</code>, and …","This helper function is used to “connect” a parallel …","This helper function is used to “connect” a producer …","A variant of <code>bridge_producer_consumer</code> where the producer …","The enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general …","A value of type <code>L</code>.","A value of type <code>R</code>.","<code>IterBridge</code> is a parallel iterator that wraps a sequential …","Conversion trait to convert an <code>Iterator</code> to a …","Create a bridge from this type to a <code>ParallelIterator</code>.","<code>Chain</code> is an iterator that joins <code>b</code> after <code>a</code> in one …","<code>Chunks</code> is an iterator that groups elements of an …","<code>Enumerate</code> is an iterator that returns the current count …","<code>Filter</code> takes a predicate <code>filter_op</code> and filters out …","<code>FilterMap</code> creates an iterator that uses <code>filter_op</code> to both …","<code>FlatMap</code> maps each element to an iterator, then flattens …","<code>Flatten</code> turns each element to an iterator, then flattens …","<code>Fold</code> is an iterator that applies a function over an …","<code>FoldWith</code> is an iterator that applies a function over an …","<code>TryFold</code> is an iterator that applies a function over an …","<code>TryFoldWith</code> is an iterator that applies a function over …","<code>Skip</code> is an iterator that skips over the first <code>n</code> elements. …","The <code>split</code> function takes arbitrary data and a closure …","<code>Split</code> is a parallel iterator using arbitrary data and a …","<code>Take</code> is an iterator that iterates over the first <code>n</code> …","<code>Map</code> is an iterator that transforms the elements of an …","<code>MapInit</code> is an iterator that transforms the elements of an …","<code>MapWith</code> is an iterator that transforms the elements of an …","<code>Zip</code> is an iterator that zips up <code>a</code> and <code>b</code> into a single …","An <code>IndexedParallelIterator</code> that iterates over two …","<code>MultiZip</code> is an iterator that zips up a tuple of parallel …","<code>Interleave</code> is an iterator that interleaves elements of …","<code>InterleaveShortest</code> is an iterator that works similarly to …","<code>Intersperse</code> is an iterator that inserts a particular item …","<code>Update</code> is an iterator that mutates the elements of an …","<code>Rev</code> is an iterator that produces elements in reverse …","<code>MaxLen</code> is an iterator that imposes a maximum length on …","<code>MinLen</code> is an iterator that imposes a minimum length on …","<code>Cloned</code> is an iterator that clones the elements of an …","<code>Copied</code> is an iterator that copies the elements of an …","<code>Inspect</code> is an iterator that calls a function with a …","<code>PanicFuse</code> is an adaptor that wraps an iterator with a …","<code>WhileSome</code> is an iterator that yields the <code>Some</code> elements of …","Creates a parallel iterator that endlessly repeats <code>elt</code> (by…","Iterator adaptor for the <code>repeat()</code> function.","Creates a parallel iterator that produces <code>n</code> repeats of <code>elt</code>…","Iterator adaptor for the <code>repeatn()</code> function.","Creates a parallel iterator that produces nothing.","Iterator adaptor for the <code>empty()</code> function.","Creates a parallel iterator that produces an element …","Iterator adaptor for the <code>once()</code> function.","<code>IntoParallelIterator</code> implements the conversion to a …","The parallel iterator type that will be created.","The type of item that the parallel iterator will produce.","Converts <code>self</code> into a parallel iterator.","<code>IntoParallelRefIterator</code> implements the conversion to a …","The type of the parallel iterator that will be returned.","The type of item that the parallel iterator will produce. …","Converts <code>self</code> into a parallel iterator.","<code>IntoParallelRefMutIterator</code> implements the conversion to a …","The type of iterator that will be created.","The type of item that will be produced; this is typically …","Creates the parallel iterator from <code>self</code>.","Parallel version of the standard iterator trait.","The type of item that this parallel iterator produces. …","Executes <code>OP</code> on each item produced by the iterator, in …","Executes <code>OP</code> on the given <code>init</code> value with each item …","Executes <code>OP</code> on a value returned by <code>init</code> with each item …","Executes a fallible <code>OP</code> on each item produced by the …","Executes a fallible <code>OP</code> on the given <code>init</code> value with each …","Executes a fallible <code>OP</code> on a value returned by <code>init</code> with …","Counts the number of items in this parallel iterator.","Applies <code>map_op</code> to each item of this iterator, producing a …","Applies <code>map_op</code> to the given <code>init</code> value with each item of …","Applies <code>map_op</code> to a value returned by <code>init</code> with each item …","Creates an iterator which clones all of its elements.  …","Creates an iterator which copies all of its elements.  …","Applies <code>inspect_op</code> to a reference to each item of this …","Mutates each item of this iterator before yielding it.","Applies <code>filter_op</code> to each item of this iterator, …","Applies <code>filter_op</code> to each item of this iterator to get an …","Applies <code>map_op</code> to each item of this iterator to get …","An adaptor that flattens iterable <code>Item</code>s into one large …","Reduces the items in the iterator into one item using <code>op</code>. …","Reduces the items in the iterator into one item using <code>op</code>. …","Reduces the items in the iterator into one item using a …","Reduces the items in the iterator into one item using a …","Parallel fold is similar to sequential fold except that …","Applies <code>fold_op</code> to the given <code>init</code> value with each item of …","Perform a fallible parallel fold.","Perform a fallible parallel fold with a cloneable <code>init</code> …","Sums up the items in the iterator.","Multiplies all the items in the iterator.","Computes the minimum of all the items in the iterator. If …","Computes the minimum of all the items in the iterator …","Computes the item that yields the minimum value for the …","Computes the maximum of all the items in the iterator. If …","Computes the maximum of all the items in the iterator …","Computes the item that yields the maximum value for the …","Takes two iterators and creates a new iterator over both.","Searches for <strong>some</strong> item in the parallel iterator that …","Searches for the sequentially <strong>first</strong> item in the parallel …","Searches for the sequentially <strong>last</strong> item in the parallel …","Applies the given predicate to the items in the parallel …","Applies the given predicate to the items in the parallel …","Applies the given predicate to the items in the parallel …","Searches for <strong>some</strong> item in the parallel iterator that …","Tests that every item in the parallel iterator matches …","Creates an iterator over the <code>Some</code> items of this iterator, …","Wraps an iterator with a fuse in case of panics, to halt …","Create a fresh collection containing all the element …","Unzips the items of a parallel iterator into a pair of …","Partitions the items of a parallel iterator into a pair …","Partitions and maps the items of a parallel iterator into …","Intersperses clones of an element between items of this …","Internal method used to define the behavior of this …","Internal method used to define the behavior of this …","An iterator that supports “random access” to its …","Collects the results of the iterator into the specified …","Unzips the results of the iterator into the specified …","Iterate over tuples <code>(A, B)</code>, where the items <code>A</code> are from …","The same as <code>Zip</code>, but requires that both iterators have …","Interleave elements of this iterator and the other given …","Interleave elements of this iterator and the other given …","Split an iterator up into fixed-size chunks.","Lexicographically compares the elements of this …","Lexicographically compares the elements of this …","Determines if the elements of this <code>ParallelIterator</code> are …","Determines if the elements of this <code>ParallelIterator</code> are …","Determines if the elements of this <code>ParallelIterator</code> are …","Determines if the elements of this <code>ParallelIterator</code> are …","Determines if the elements of this <code>ParallelIterator</code> are …","Determines if the elements of this <code>ParallelIterator</code> are …","Yields an index along with each item.","Creates an iterator that skips the first <code>n</code> elements.","Creates an iterator that yields the first <code>n</code> elements.","Searches for <strong>some</strong> item in the parallel iterator that …","Searches for the sequentially <strong>first</strong> item in the parallel …","Searches for the sequentially <strong>last</strong> item in the parallel …","Produces a new iterator with the elements of this …","Sets the minimum length of iterators desired to process …","Sets the maximum length of iterators desired to process …","Produces an exact count of how many items this iterator …","Internal method used to define the behavior of this …","Internal method used to define the behavior of this …","<code>FromParallelIterator</code> implements the creation of a …","Creates an instance of the collection from the parallel …","<code>ParallelExtend</code> extends an existing collection with items …","Extends an instance of the collection with the elements …","Parallel iterator types for options","A parallel iterator over the value in <code>Some</code> variant of an …","A parallel iterator over a reference to the <code>Some</code> variant …","A parallel iterator over a mutable reference to the <code>Some</code> …","The rayon prelude imports the various <code>ParallelIterator</code> …","Conversion trait to convert an <code>Iterator</code> to a …","Create a bridge from this type to a <code>ParallelIterator</code>.","Parallel iterator types for ranges, the type for values …","Parallel iterator over a range, implemented for all …","Parallel iterator types for inclusive ranges, the type …","Parallel iterator over an inclusive range, implemented …","Parallel iterator types for results","Parallel iterator over a result","Parallel iterator over an immutable reference to a result","Parallel iterator over a mutable reference to a result","Parallel iterator types for slices","Parallel extensions for slices.","Returns a plain slice, which is used to implement the …","Returns a parallel iterator over subslices separated by …","Returns a parallel iterator over all contiguous windows …","Returns a parallel iterator over at most <code>chunk_size</code> …","Parallel extensions for mutable slices.","Returns a plain mutable slice, which is used to implement …","Returns a parallel iterator over mutable subslices …","Returns a parallel iterator over at most <code>chunk_size</code> …","Sorts the slice in parallel.","Sorts the slice in parallel with a comparator function.","Sorts the slice in parallel with a key extraction …","Sorts the slice in parallel, but may not preserve the …","Sorts the slice in parallel with a comparator function, …","Sorts the slice in parallel with a key extraction …","Parallel iterator over immutable items in a slice","Parallel iterator over immutable non-overlapping chunks …","Parallel iterator over immutable overlapping windows of a …","Parallel iterator over mutable items in a slice","Parallel iterator over mutable non-overlapping chunks of …","Parallel iterator over slices separated by a predicate","Parallel iterator over mutable slices separated by a …","Parallel iterator types for strings","Parallel extensions for strings.","Returns a plain string slice, which is used to implement …","Returns a parallel iterator over the characters of a …","Returns a parallel iterator over the characters of a …","Returns a parallel iterator over the bytes of a string.","Returns a parallel iterator over a string encoded as …","Returns a parallel iterator over substrings separated by a…","Returns a parallel iterator over substrings terminated by …","Returns a parallel iterator over the lines of a string, …","Returns a parallel iterator over the sub-slices of a …","Returns a parallel iterator over substrings that match a …","Returns a parallel iterator over substrings that match a …","Parallel iterator over the characters of a string","Parallel iterator over the characters of a string, with …","Parallel iterator over the bytes of a string","Parallel iterator over a string encoded as UTF-16","Parallel iterator over substrings separated by a pattern","Parallel iterator over substrings separated by a …","Parallel iterator over lines in a string","Parallel iterator over substrings separated by whitespace","Parallel iterator over substrings that match a pattern","Parallel iterator over substrings that match a pattern, …","Parallel iterator types for vectors (<code>Vec<T></code>)","Parallel iterator that moves out of a vector.","Provides the calling context to a closure called by …","Thread builder used for customization via …","Represents a user created thread-pool.","Error when initializing a thread pool.","Used to create a new <code>ThreadPool</code> or to configure the …","Returns the number of threads in the current registry. If …","If called from a Rayon worker thread, returns the index …","Takes two closures and <em>potentially</em> runs them in parallel. …","Identical to <code>join</code>, except that the closures have a …","Create a “fork-join” scope <code>s</code> and invokes the closure …","Represents a fork-join scope which can be used to spawn …","Create a “fork-join” scope <code>s</code> with FIFO order, and …","Represents a fork-join scope which can be used to spawn …","Fires off a task into the Rayon threadpool in the “…","Fires off a task into the Rayon threadpool in the “…ake only <code>n</code> repeats of the element, similar to the general…","Iterate tuples repeating the element with items from …","Return true if the value is the <code>Left</code> variant.","Return true if the value is the <code>Right</code> variant.","Convert the left side of <code>Either<L, R></code> to an <code>Option<L></code>.","Convert the right side of <code>Either<L, R></code> to an <code>Option<R></code>.","Convert <code>&Either<L, R></code> to <code>Either<&L, &R></code>.","Convert <code>&mut Either<L, R></code> to <code>Either<&mut L, &mut R></code>.","Convert <code>Either<L, R></code> to <code>Either<R, L></code>.","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","Apply one of two functions depending on contents, …","Like <code>either</code>, but provide some context to whichever of the …","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","Convert the inner value to an iterator.","Return left value or given value","Return left or a default","Returns left value or computes it from a closure","Return right value or given value","Return right or a default","Returns right value or computes it from a closure","Factor out a homogeneous type from an either of pairs.","Factor out a homogeneous type from an either of pairs.","Extract the value of an either over two equivalent types.","Map <code>f</code> over the contained value and return the result in …","Returns <code>true</code> if the closure was called from a different …","Get the index of this thread in the pool, within …","Get the string that was specified by …","Get the value that was specified by …","Execute the main loop for this thread. This will not …","Deprecated in favor of <code>ThreadPoolBuilder::build</code>.","Executes <code>op</code> within the threadpool. Any attempts to use …","Returns the (current) number of threads in the thread …","If called from a Rayon worker thread in this thread-pool, …","Returns true if the current worker thread currently has …","Execute <code>oper_a</code> and <code>oper_b</code> in the thread-pool and return …","Creates a scope that executes within this thread-pool. …","Creates a scope that executes within this thread-pool. …","Spawns an asynchronous task in this thread-pool. This …","Spawns an asynchronous task in this thread-pool. This …","Creates and returns a valid rayon thread pool builder, …","Create a new <code>ThreadPool</code> initialized using this …","Initializes the global thread pool. This initialization is…","Create a scoped <code>ThreadPool</code> initialized using this …","Set a custom function for spawning threads.","Set a closure which takes a thread index and returns the …","Set the number of threads to be used in the rayon …","Normally, whenever Rayon catches a panic, it tries to …","Set the stack size of the worker threads","<strong>(DEPRECATED)</strong> Suggest to worker threads that they execute …","Set a callback to be invoked on thread start.","Set a callback to be invoked on thread exit.","Spawns a job into the fork-join scope <code>self</code>. This job will …","Spawns a job into the fork-join scope <code>self</code>. This job will …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,2,2,2,2,2,2,2,0,3,3,3,3,3,3,0,4,4,4,4,4,0,5,0,6,6,0,7,7,7,0,0,0,0,8,8,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,0,11,11,11,0,12,12,12,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,15,0,16,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,18,18,18,18,18,18,18,18,18,0,0,0,0,0,0,0,0,0,19,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,42,43,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,50,50,51,51,51,51,51,51,51,51,51,51,52,52,52,52,52,52,52,52,52,52,53,53,53,53,53,53,53,53,53,53,54,54,54,54,54,54,54,54,54,54,55,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,56,57,57,57,57,57,57,57,57,57,57,58,58,58,58,58,58,58,58,58,58,59,59,59,59,59,59,59,59,59,59,60,60,60,60,60,60,60,60,60,60,61,61,61,61,61,61,61,61,61,61,62,62,62,62,62,62,62,62,62,62,63,63,63,63,63,63,63,63,63,63,64,64,64,64,64,64,64,64,64,64,65,65,65,65,65,65,65,65,65,65,66,66,66,66,66,66,66,66,66,66,67,67,67,67,67,67,67,67,67,67,68,68,68,68,68,68,68,68,68,68,69,69,69,69,69,69,69,69,69,69,70,70,70,70,70,70,70,70,70,70,71,71,71,71,71,71,71,71,71,71,72,72,72,72,72,72,72,72,72,72,73,73,73,73,73,73,73,73,73,73,74,74,74,74,74,74,74,74,74,74,8,8,8,8,8,8,8,8,8,8,8,8,75,75,75,75,75,75,75,75,75,75,76,76,76,76,76,76,76,76,76,76,77,77,77,77,77,77,77,77,78,78,78,78,78,78,78,78,78,78,79,79,79,79,79,79,79,79,79,79,80,80,80,80,80,80,80,80,80,80,81,81,81,81,81,81,81,81,81,81,82,82,82,82,82,82,82,82,83,83,83,83,83,83,83,83,83,83,84,84,84,84,84,84,84,84,84,84,85,85,85,85,85,85,85,85,85,85,86,86,86,86,86,86,86,86,87,87,87,87,87,87,87,87,88,88,88,88,88,88,88,88,88,88,89,89,89,89,89,89,89,89,90,90,90,90,90,90,90,90,90,90,91,91,91,91,91,91,91,91,91,91,92,92,92,92,92,92,92,92,92,92,93,93,93,93,93,93,93,93,93,93,94,94,94,94,94,94,94,94,94,94,95,95,95,95,95,95,95,95,95,95,96,96,96,96,96,96,96,96,96,96,97,97,97,97,97,97,97,97,97,97,98,98,98,98,98,98,98,98,98,98,99,99,99,99,99,99,99,99,99,99,100,100,100,100,100,100,100,100,100,100,101,101,101,101,101,101,101,102,102,102,102,102,102,102,103,103,103,103,103,103,103,104,104,104,104,104,104,104,104,105,105,105,105,105,105,105,106,106,106,106,106,106,106,107,107,107,107,107,107,107,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,104,106,101,107,103,105,102,104,103,105,104,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,37,38,39,39,40,40,41,41,42,43,44,45,46,47,48,49,50,50,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,59,59,60,60,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,69,69,70,71,72,72,73,73,74,74,75,75,76,76,77,77,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,89,90,91,92,93,94,95,96,97,98,99,100,100,8,8,20,20,20,21,21,21,35,35,35,36,36,36,37,37,37,39,39,39,40,40,40,41,41,41,50,50,50,52,52,52,53,53,53,54,54,54,55,55,55,56,56,56,57,57,57,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,59,59,59,60,60,60,61,61,61,62,62,62,63,63,63,64,64,64,65,65,65,66,66,66,67,67,67,68,68,68,69,69,69,72,72,72,73,73,73,74,74,74,75,75,75,76,76,76,77,77,77,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,79,79,79,79,79,79,79,79,79,79,79,79,80,80,80,81,81,81,82,82,82,83,83,83,84,84,84,85,85,85,86,86,86,87,87,87,100,100,100,8,8,8,8,20,21,23,26,28,31,32,33,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,83,84,85,88,90,91,92,93,94,95,96,97,98,99,100,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,71,71,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,101,102,102,102,102,103,103,103,103,103,103,103,103,103,103,105,105,105,105,105,105,105,105,105,105,105,105,106,107],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,[[]],[[],["usize",15]],[[],["usize",15]],[[["usize",15]]],[[]],null,null,null,null,[[["usize",15]]],[[]],[[],["bool",15]],null,null,[[]],[[]],[[]],[[],["bool",15]],null,[[]],null,[[]],[[]],null,null,[[]],[[]],[[]],[[["usize",15]]],[[]],null,null,null,null,null,[[],["iterbridge",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["split",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["send",8],["clone",8]],[["repeat",3],["send",8],["clone",8]]],null,[[["usize",15],["send",8],["clone",8]],[["send",8],["clone",8],["repeatn",3]]],null,[[],[["send",8],["empty",3]]],null,[[["send",8]],[["once",3],["send",8]]],null,null,null,null,[[]],null,null,null,[[]],null,null,null,[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["map",3]],[[],["mapwith",3]],[[],["mapinit",3]],[[],["cloned",3]],[[],["copied",3]],[[],["inspect",3]],[[],["update",3]],[[],["filter",3]],[[],["filtermap",3]],[[],["flatmap",3]],[[],["flatten",3]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[],["fold",3]],[[],["foldwith",3]],[[],["tryfold",3]],[[],["tryfoldwith",3]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["chain",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["bool",15]],[[],["bool",15]],[[],["whilesome",3]],[[],["panicfuse",3]],[[]],[[]],[[]],[[]],[[],["intersperse",3]],[[]],[[],[["usize",15],["option",4]]],null,[[["vec",3]]],[[["vec",3],["vec",3]]],[[],["zip",3]],[[],["zipeq",3]],[[],["interleave",3]],[[],["interleaveshortest",3]],[[["usize",15]],["chunks",3]],[[],["ordering",4]],[[],[["ordering",4],["option",4]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["enumerate",3]],[[["usize",15]],["skip",3]],[[["usize",15]],["take",3]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],["rev",3]],[[["usize",15]],["minlen",3]],[[["usize",15]],["maxlen",3]],[[],["usize",15]],[[["consumer",8]]],[[["producercallback",8]]],null,[[]],null,[[]],null,null,null,null,null,null,[[],["iterbridge",3]],null,null,null,null,null,null,null,null,null,null,[[]],[[],["split",3]],[[["usize",15]],["windows",3]],[[["usize",15]],["chunks",3]],null,[[]],[[],["splitmut",3]],[[["usize",15]],["chunksmut",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[],["str",15]],[[],["chars",3]],[[],["charindices",3]],[[],["bytes",3]],[[],["encodeutf16",3]],[[["pattern",8]],[["split",3],["pattern",8]]],[[["pattern",8]],[["pattern",8],["splitterminator",3]]],[[],["lines",3]],[[],["splitwhitespace",3]],[[["pattern",8]],[["pattern",8],["matches",3]]],[[["pattern",8]],[["pattern",8],["matchindices",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["usize",15]],[[],[["usize",15],["option",4]]],[[]],[[]],[[]],null,[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["either",4]],["ordering",4]],[[["either",4]],["bool",15]],[[["either",4]],["bool",15]],[[["formatter",3]],[["error",3],["result",4]]],[[["either",4]],[["option",4],["ordering",4]]],[[]],[[]],[[],["str",15]],[[]],[[]],[[],["result",4]],[[],["option",4]],[[]],[[]],[[],["usize",15]],[[],["option",4]],[[["usize",15]],["option",4]],[[]],[[],["bool",15]],[[]],[[["formatter",3]],[["error",3],["result",4]]],[[],["option",4]],[[]],[[["result",4]],["either",4]],[[],["either",4]],[[]],[[]],[[],["str",15]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[],[["threadpoolbuilder",3],["defaultspawn",3]]],[[],["str",15]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["usize",15],["option",4]]],[[]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[["consumer",8]]],[[],["usize",15]],[[]],[[],["usize",15]],[[["consumer",8]]],[[]],[[],["usize",15]],[[["consumer",8]]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[["consumer",8]]],[[],["usize",15]],[[]],[[["consumer",8]]],[[],["usize",15]],[[]],[[["consumer",8]]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[]],[[],["usize",15]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["intoiter",3]],[[]],[[]],[[]],[[]],[[]],[[],["intoiter",3]],[[]],[[],["intoiter",3]],[[]],[[],["iterbridge",3]],[[],["chain",3]],[[],["chunks",3]],[[],["enumerate",3]],[[],["filter",3]],[[],["filtermap",3]],[[],["flatmap",3]],[[],["flatten",3]],[[],["fold",3]],[[],["foldwith",3]],[[],["tryfold",3]],[[],["tryfoldwith",3]],[[],["skip",3]],[[],["split",3]],[[],["take",3]],[[],["map",3]],[[],["mapwith",3]],[[],["mapinit",3]],[[],["zip",3]],[[],["zipeq",3]],[[],["multizip",3]],[[],["interleave",3]],[[],["interleaveshortest",3]],[[],["intersperse",3]],[[],["update",3]],[[],["rev",3]],[[],["minlen",3]],[[],["maxlen",3]],[[],["cloned",3]],[[],["copied",3]],[[],["inspect",3]],[[],["panicfuse",3]],[[],["whilesome",3]],[[],["repeat",3]],[[],["repeatn",3]],[[]],[[],["once",3]],[[],["intoiter",3]],[[]],[[],["iter",3]],[[],["iter",3]],[[],["intoiter",3]],[[]],[[]],[[]],[[]],[[]],[[],["chars",3]],[[],["charindices",3]],[[],["bytes",3]],[[],["encodeutf16",3]],[[],["split",3]],[[],["splitterminator",3]],[[],["lines",3]],[[],["splitwhitespace",3]],[[],["matches",3]],[[],["matchindices",3]],[[],["intoiter",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["usize",15]],["repeatn",3]],[[],[["zip",3],["repeatn",3]]],[[],["bool",15]],[[],["bool",15]],[[],["option",4]],[[],["option",4]],[[],["either",4]],[[],["either",4]],[[],["either",4]],[[],["either",4]],[[],["either",4]],[[]],[[]],[[],["either",4]],[[],["either",4]],[[],["either",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["either",4]],[[],["bool",15]],[[],["usize",15]],[[],[["option",4],["str",15]]],[[],[["usize",15],["option",4]]],[[]],[[["configuration",3]],[["box",3],["result",4],["threadpool",3]]],[[]],[[],["usize",15]],[[],[["usize",15],["option",4]]],[[],[["option",4],["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[],[["threadpoolbuilder",3],["defaultspawn",3]]],[[],[["threadpool",3],["result",4],["threadpoolbuilderror",3]]],[[],[["result",4],["threadpoolbuilderror",3]]],[[],[["result",4],["threadpoolbuilderror",3]]],[[],[["threadpoolbuilder",3],["customspawn",3]]],[[],["threadpoolbuilder",3]],[[["usize",15]],["threadpoolbuilder",3]],[[],["threadpoolbuilder",3]],[[["usize",15]],["threadpoolbuilder",3]],[[],["threadpoolbuilder",3]],[[],["threadpoolbuilder",3]],[[],["threadpoolbuilder",3]],[[]],[[]]],"p":[[8,"ProducerCallback"],[8,"Producer"],[8,"Consumer"],[8,"Folder"],[8,"Reducer"],[8,"UnindexedConsumer"],[8,"UnindexedProducer"],[4,"Either"],[8,"ParallelBridge"],[8,"IntoParallelIterator"],[8,"IntoParallelRefIterator"],[8,"IntoParallelRefMutIterator"],[8,"ParallelIterator"],[8,"IndexedParallelIterator"],[8,"FromParallelIterator"],[8,"ParallelExtend"],[8,"ParallelSlice"],[8,"ParallelSliceMut"],[8,"ParallelString"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IterBridge"],[3,"Chain"],[3,"Chunks"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"Flatten"],[3,"Fold"],[3,"FoldWith"],[3,"TryFold"],[3,"TryFoldWith"],[3,"Skip"],[3,"Split"],[3,"Take"],[3,"Map"],[3,"MapWith"],[3,"MapInit"],[3,"Zip"],[3,"ZipEq"],[3,"MultiZip"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"Intersperse"],[3,"Update"],[3,"Rev"],[3,"MinLen"],[3,"MaxLen"],[3,"Cloned"],[3,"Copied"],[3,"Inspect"],[3,"PanicFuse"],[3,"WhileSome"],[3,"Repeat"],[3,"RepeatN"],[3,"Empty"],[3,"Once"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Chunks"],[3,"Windows"],[3,"IterMut"],[3,"ChunksMut"],[3,"Split"],[3,"SplitMut"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"EncodeUtf16"],[3,"Split"],[3,"SplitTerminator"],[3,"Lines"],[3,"SplitWhitespace"],[3,"Matches"],[3,"MatchIndices"],[3,"IntoIter"],[3,"FnContext"],[3,"ThreadBuilder"],[3,"ThreadPool"],[3,"ThreadPoolBuildError"],[3,"ThreadPoolBuilder"],[3,"Scope"],[3,"ScopeFifo"]]},\
"rayon_core":{"doc":"Under construction","t":[5,5,3,5,3,5,3,5,5,5,5,3,5,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["join","join_context","ThreadBuilder","scope","Scope","scope_fifo","ScopeFifo","spawn","spawn_fifo","current_thread_has_pending_tasks","current_thread_index","ThreadPool","current_num_threads","ThreadPoolBuildError","ThreadPoolBuilder","Configuration","new","build","build_global","build_scoped","spawn_handler","thread_name","num_threads","panic_handler","stack_size","breadth_first","start_handler","exit_handler","new","build","thread_name","num_threads","panic_handler","stack_size","breadth_first","start_handler","exit_handler","initialize","FnContext","migrated","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","drop","default","default","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","description","index","name","stack_size","run","spawn","spawn_fifo","new","install","current_num_threads","current_thread_index","current_thread_has_pending_tasks","join","scope","scope_fifo","spawn","spawn_fifo"],"q":["rayon_core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Takes two closures and <em>potentially</em> runs them in parallel. …","Identical to <code>join</code>, except that the closures have a …","Thread builder used for customization via …","Create a “fork-join” scope <code>s</code> and invokes the closure …","Represents a fork-join scope which can be used to spawn …","Create a “fork-join” scope <code>s</code> with FIFO order, and …","Represents a fork-join scope which can be used to spawn …","Fires off a task into the Rayon threadpool in the “…","Fires off a task into the Rayon threadpool in the “…","If called from a Rayon worker thread, indicates whether …","If called from a Rayon worker thread, returns the index …","Represents a user created thread-pool.","Returns the number of threads in the current registry. If …","Error when initializing a thread pool.","Used to create a new <code>ThreadPool</code> or to configure the …","Contains the rayon thread pool configuration. Use …","Creates and returns a valid rayon thread pool builder, …","Create a new <code>ThreadPool</code> initialized using this …","Initializes the global thread pool. This initialization is…","Create a scoped <code>ThreadPool</code> initialized using this …","Set a custom function for spawning threads.","Set a closure which takes a thread index and returns the …","Set the number of threads to be used in the rayon …","Normally, whenever Rayon catches a panic, it tries to …","Set the stack size of the worker threads","<strong>(DEPRECATED)</strong> Suggest to worker threads that they execute …","Set a callback to be invoked on thread start.","Set a callback to be invoked on thread exit.","Creates and return a valid rayon thread pool …","Deprecated in favor of <code>ThreadPoolBuilder::build</code>.","Deprecated in favor of <code>ThreadPoolBuilder::thread_name</code>.","Deprecated in favor of <code>ThreadPoolBuilder::num_threads</code>.","Deprecated in favor of <code>ThreadPoolBuilder::panic_handler</code>.","Deprecated in favor of <code>ThreadPoolBuilder::stack_size</code>.","Deprecated in favor of <code>ThreadPoolBuilder::breadth_first</code>.","Deprecated in favor of <code>ThreadPoolBuilder::start_handler</code>.","Deprecated in favor of <code>ThreadPoolBuilder::exit_handler</code>.","Deprecated in favor of <code>ThreadPoolBuilder::build_global</code>.","Provides the calling context to a closure called by …","Returns <code>true</code> if the closure was called from a different …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the index of this thread in the pool, within …","Get the string that was specified by …","Get the value that was specified by …","Execute the main loop for this thread. This will not …","Spawns a job into the fork-join scope <code>self</code>. This job will …","Spawns a job into the fork-join scope <code>self</code>. This job will …","Deprecated in favor of <code>ThreadPoolBuilder::build</code>.","Executes <code>op</code> within the threadpool. Any attempts to use …","Returns the (current) number of threads in the thread …","If called from a Rayon worker thread in this thread-pool, …","Returns true if the current worker thread currently has …","Execute <code>oper_a</code> and <code>oper_b</code> in the thread-pool and return …","Creates a scope that executes within this thread-pool. …","Creates a scope that executes within this thread-pool. …","Spawns an asynchronous task in this thread-pool. This …","Spawns an asynchronous task in this thread-pool. This …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,0,0,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6,6,6,6,6,6,6,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,7,1,2,4,5,6,7,8,1,2,3,8,8,4,4,4,4,5,6,7,7,7,7,7,7,7,7,7,7],"f":[[[]],[[]],null,[[]],null,[[]],null,[[]],[[]],[[],[["bool",15],["option",4]]],[[],[["usize",15],["option",4]]],null,[[],["usize",15]],null,null,null,[[]],[[],[["threadpool",3],["threadpoolbuilderror",3],["result",4]]],[[],[["result",4],["threadpoolbuilderror",3]]],[[],[["result",4],["threadpoolbuilderror",3]]],[[],[["threadpoolbuilder",3],["customspawn",3]]],[[]],[[["usize",15]]],[[]],[[["usize",15]]],[[]],[[]],[[]],[[],["configuration",3]],[[],[["threadpool",3],["result",4],["box",3]]],[[]],[[["usize",15]],["configuration",3]],[[],["configuration",3]],[[["usize",15]]],[[]],[[],["configuration",3]],[[],["configuration",3]],[[["configuration",3]],[["result",4],["box",3]]],null,[[],["bool",15]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["str",15]],[[],["usize",15]],[[],[["option",4],["str",15]]],[[],[["usize",15],["option",4]]],[[]],[[]],[[]],[[["configuration",3]],[["threadpool",3],["result",4],["box",3]]],[[]],[[],["usize",15]],[[],[["usize",15],["option",4]]],[[],[["bool",15],["option",4]]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"ThreadPoolBuilder"],[3,"Configuration"],[3,"FnContext"],[3,"ThreadBuilder"],[3,"Scope"],[3,"ScopeFifo"],[3,"ThreadPool"],[3,"ThreadPoolBuildError"]]},\
"read_color":{"doc":"A simple library for reading hex colors.","t":[5,5,5,5,5,5],"n":["char_to_hex","hex","hex_pair","rgb","rgba","rgb_maybe_a"],"q":["read_color","","","","",""],"d":["Converts a character into a u8 value.","Reads a hex value from an iterator of characters.","Reads a pair of hex values, joining them in value range …","Reads RGB colors from iterator of characters.","Reads RGBA colors from iterator of characters.","Reads RGB with optional alpha from iterator of characters."],"i":[0,0,0,0,0,0],"f":[[[["char",15]],[["option",4],["u8",15]]],[[["chars",3]],[["option",4],["u8",15]]],[[["chars",3]],[["option",4],["u8",15]]],[[["chars",3]],["option",4]],[[["chars",3]],["option",4]],[[["chars",3]],["option",4]]],"p":[]},\
"rustc_demangle":{"doc":"Demangle Rust compiler symbol names.","t":[3,5,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Demangle","demangle","TryDemangleError","try_demangle","as_str","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","fmt","fmt","fmt","clone"],"q":["rustc_demangle","","","","","","","","","","","","","","","","","","","","","",""],"d":["Representation of a demangled symbol name.","De-mangles a Rust symbol into a more readable version","Error returned from the <code>try_demangle</code> function below when …","The same as <code>demangle</code>, except return an <code>Err</code> if the string …","Returns the underlying string that’s being demangled.","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,1,1,2],"f":[null,[[["str",15]],["demangle",3]],null,[[["str",15]],[["trydemangleerror",3],["result",4],["demangle",3]]],[[],["str",15]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["trydemangleerror",3]]],"p":[[3,"Demangle"],[3,"TryDemangleError"]]},\
"scoped_threadpool":{"doc":"This crate provides a stable, safe and scoped threadpool.","t":[3,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Pool","new","scoped","thread_count","Scope","execute","join_all","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","drop","drop"],"q":["scoped_threadpool","","","","","","","","","","","","","","","","","","","","","",""],"d":["A threadpool that acts as a handle to a number of threads …","Construct a threadpool with the given number of threads. …","Borrows the pool and allows executing jobs on other …","Returns the number of threads inside this pool.","Handle to the scope during which the threadpool is …","Execute a job on the threadpool.","Blocks until all currently queued jobs have run to …","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,0,2,2,1,1,1,1,1,1,1,2,2,2,2,2,2,2,1,2],"f":[null,[[["u32",15]],["pool",3]],[[]],[[],["u32",15]],null,[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]]],"p":[[3,"Pool"],[3,"Scope"]]},\
"scopeguard":{"doc":"A scope guard will run a given closure when it goes out …","t":[8,10,4,3,11,11,5,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Strategy","should_run","Always","ScopeGuard","with_strategy","into_inner","guard","defer","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","should_run","deref","deref_mut","fmt","fmt","drop"],"q":["scopeguard","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Controls in which cases the associated code should be run","Return <code>true</code> if the guard’s associated code should run …","Always run on scope exit.","<code>ScopeGuard</code> is a scope guard that may own a protected …","Create a <code>ScopeGuard</code> that owns <code>v</code> (accessible through …","“Defuse” the guard and extract the value without …","Create a new <code>ScopeGuard</code> owning <code>v</code> and with deferred …","Macro to create a <code>ScopeGuard</code> (always run).","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,0,0,2,2,0,0,3,3,3,3,3,3,3,2,2,2,2,2,2,2,3,2,2,3,2,2],"f":[null,[[],["bool",15]],null,null,[[],["scopeguard",3]],[[]],[[],[["always",4],["scopeguard",3]]],null,[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]]],"p":[[8,"Strategy"],[3,"ScopeGuard"],[4,"Always"]]},\
"sdl2":{"doc":"","t":[0,3,11,11,11,0,17,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,12,13,12,13,12,13,12,13,12,13,12,13,12,13,12,12,12,13,12,12,12,12,12,12,13,12,12,12,12,12,12,13,12,12,12,12,12,13,12,12,12,13,12,12,12,12,12,12,12,12,13,12,12,12,12,12,12,12,13,12,12,12,12,12,12,12,13,12,12,12,12,12,12,13,12,12,12,12,13,12,12,12,12,12,13,12,12,12,12,13,12,12,12,13,12,12,12,13,12,12,13,12,12,13,12,12,12,12,13,12,12,12,13,12,12,12,13,12,12,13,12,12,13,12,12,13,12,12,12,12,12,12,12,12,13,12,12,12,12,12,12,12,12,13,12,12,12,12,12,12,12,12,13,12,12,12,12,12,12,12,13,12,12,12,12,12,12,12,13,12,12,12,12,12,12,12,13,12,13,12,12,13,12,12,12,12,12,12,13,12,12,11,11,3,3,3,0,5,4,13,13,13,5,0,0,6,6,5,5,5,5,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,4,13,13,13,13,13,13,13,13,13,11,11,0,4,13,13,13,4,13,13,13,13,13,13,11,11,11,11,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,4,13,13,3,11,11,11,11,11,11,11,0,3,11,11,11,0,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,17,17,17,17,17,17,17,17,17,17,17,17,17,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,3,3,3,11,11,11,3,11,11,11,11,11,11,0,3,4,13,13,13,13,13,13,13,13,13,13,13,13,3,11,11,11,11,4,13,13,13,11,11,4,13,13,13,13,13,13,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,0,5,5,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,0,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,11,11,11,11,11,3,12,12,12,12,11,11,11,11,11,11,3,12,12,12,12,12,3,11,11,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,3,11,11,11,11,11,11,3,11,11,11,4,13,13,13,13,3,12,12,12,12,11,11,11,4,13,13,13,11,4,13,13,13,3,11,3,11,4,13,13,13,3,11,4,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,5,0,6,3,11,0,3,4,13,13,4,13,13,13,3,12,12,12,12,12,4,13,13,13,13,13,11,3,11,11,11,8,16,3,6,11,11,11,11,11,6,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,12,12,3,4,13,13,13,13,13,13,13,4,13,12,12,13,12,12,12,12,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,5,0,3,11,11,11,11,11,11,11,11,0,4,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,5,5,0,4,13,13,13,13,13,13,13,13,13,13,11,11,11,11,4,13,13,13,3,5,3,12,12,12,11,11,11,8,16,10,8,10,10,3,12,12,12,3,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,0,3,12,12,12,11,5,5,5,0,3,17,17,17,11,11,11,11,11,11,11,11,11,11,11,11,3,17,17,17,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,12,12,12,3,12,12,12,4,13,13,4,13,13,13,13,5,5,0,4,13,13,13,5,5,5,5,5,5,4,13,13,13,13,13,3,3,3,3,3,3,3,3,3,5,5,5,5,5,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["clipboard","ClipboardUtil","set_clipboard_text","clipboard_text","has_clipboard_text","cpuinfo","CACHELINESIZE","cpu_count","cpu_cache_line_size","has_rdtsc","has_alti_vec","has_mmx","has_3d_now","has_sse","has_sse2","has_sse3","has_sse41","has_sse42","has_avx","system_ram","macros","event","EventType","First","Quit","AppTerminating","AppLowMemory","AppWillEnterBackground","AppDidEnterBackground","AppWillEnterForeground","AppDidEnterForeground","Window","KeyDown","KeyUp","TextEditing","TextInput","MouseMotion","MouseButtonDown","MouseButtonUp","MouseWheel","JoyAxisMotion","JoyBallMotion","JoyHatMotion","JoyButtonDown","JoyButtonUp","JoyDeviceAdded","JoyDeviceRemoved","ControllerAxisMotion","ControllerButtonDown","ControllerButtonUp","ControllerDeviceAdded","ControllerDeviceRemoved","ControllerDeviceRemapped","FingerDown","FingerUp","FingerMotion","DollarGesture","DollarRecord","MultiGesture","ClipboardUpdate","DropFile","User","Last","WindowEvent","None","Shown","Hidden","Exposed","Moved","Resized","SizeChanged","Minimized","Maximized","Restored","Enter","Leave","FocusGained","FocusLost","Close","TakeFocus","HitTest","Event","Quit","timestamp","AppTerminating","timestamp","AppLowMemory","timestamp","AppWillEnterBackground","timestamp","AppDidEnterBackground","timestamp","AppWillEnterForeground","timestamp","AppDidEnterForeground","timestamp","Window","timestamp","window_id","win_event","KeyDown","timestamp","window_id","keycode","scancode","keymod","repeat","KeyUp","timestamp","window_id","keycode","scancode","keymod","repeat","TextEditing","timestamp","window_id","text","start","length","TextInput","timestamp","window_id","text","MouseMotion","timestamp","window_id","which","mousestate","x","y","xrel","yrel","MouseButtonDown","timestamp","window_id","which","mouse_btn","clicks","x","y","MouseButtonUp","timestamp","window_id","which","mouse_btn","clicks","x","y","MouseWheel","timestamp","window_id","which","x","y","direction","JoyAxisMotion","timestamp","which","axis_idx","value","JoyBallMotion","timestamp","which","ball_idx","xrel","yrel","JoyHatMotion","timestamp","which","hat_idx","state","JoyButtonDown","timestamp","which","button_idx","JoyButtonUp","timestamp","which","button_idx","JoyDeviceAdded","timestamp","which","JoyDeviceRemoved","timestamp","which","ControllerAxisMotion","timestamp","which","axis","value","ControllerButtonDown","timestamp","which","button","ControllerButtonUp","timestamp","which","button","ControllerDeviceAdded","timestamp","which","ControllerDeviceRemoved","timestamp","which","ControllerDeviceRemapped","timestamp","which","FingerDown","timestamp","touch_id","finger_id","x","y","dx","dy","pressure","FingerUp","timestamp","touch_id","finger_id","x","y","dx","dy","pressure","FingerMotion","timestamp","touch_id","finger_id","x","y","dx","dy","pressure","DollarGesture","timestamp","touch_id","gesture_id","num_fingers","error","x","y","DollarRecord","timestamp","touch_id","gesture_id","num_fingers","error","x","y","MultiGesture","timestamp","touch_id","d_theta","d_dist","x","y","num_fingers","ClipboardUpdate","timestamp","DropFile","timestamp","filename","User","timestamp","window_id","type_","code","data1","data2","Unknown","timestamp","type_","is_user_event","as_user_event_type","EventPollIterator","EventWaitIterator","EventWaitTimeoutIterator","filesystem","base_path","PrefPathError","InvalidOrganizationName","InvalidApplicationName","SdlError","pref_path","gesture","touch","Finger","TouchDevice","num_touch_devices","touch_device","num_touch_fingers","touch_finger","joystick","Joystick","subsystem","name","attached","instance_id","guid","num_axes","axis","num_buttons","button","num_balls","ball","num_hats","hat","Guid","from_string","is_zero","string","raw","HatState","Centered","Up","Right","Down","Left","RightUp","RightDown","LeftUp","LeftDown","from_raw","to_raw","controller","AddMappingError","InvalidMapping","InvalidFilePath","SdlError","Axis","LeftX","LeftY","RightX","RightY","TriggerLeft","TriggerRight","from_string","string","from_ll","to_ll","Button","A","B","X","Y","Back","Guide","Start","LeftStick","RightStick","LeftShoulder","RightShoulder","DPadUp","DPadDown","DPadLeft","DPadRight","from_string","string","from_ll","to_ll","MappingStatus","Added","Updated","GameController","subsystem","name","mapping","attached","instance_id","axis","button","haptic","Haptic","subsystem","rumble_play","rumble_stop","keyboard","Keycode","Backspace","Tab","Return","Escape","Space","Exclaim","Quotedbl","Hash","Dollar","Percent","Ampersand","Quote","LeftParen","RightParen","Asterisk","Plus","Comma","Minus","Period","Slash","Num0","Num1","Num2","Num3","Num4","Num5","Num6","Num7","Num8","Num9","Colon","Semicolon","Less","Equals","Greater","Question","At","LeftBracket","Backslash","RightBracket","Caret","Underscore","Backquote","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","Delete","CapsLock","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","PrintScreen","ScrollLock","Pause","Insert","Home","PageUp","End","PageDown","Right","Left","Down","Up","NumLockClear","KpDivide","KpMultiply","KpMinus","KpPlus","KpEnter","Kp1","Kp2","Kp3","Kp4","Kp5","Kp6","Kp7","Kp8","Kp9","Kp0","KpPeriod","Application","Power","KpEquals","F13","F14","F15","F16","F17","F18","F19","F20","F21","F22","F23","F24","Execute","Help","Menu","Select","Stop","Again","Undo","Cut","Copy","Paste","Find","Mute","VolumeUp","VolumeDown","KpComma","KpEqualsAS400","AltErase","Sysreq","Cancel","Clear","Prior","Return2","Separator","Out","Oper","ClearAgain","CrSel","ExSel","Kp00","Kp000","ThousandsSeparator","DecimalSeparator","CurrencyUnit","CurrencySubUnit","KpLeftParen","KpRightParen","KpLeftBrace","KpRightBrace","KpTab","KpBackspace","KpA","KpB","KpC","KpD","KpE","KpF","KpXor","KpPower","KpPercent","KpLess","KpGreater","KpAmpersand","KpDblAmpersand","KpVerticalBar","KpDblVerticalBar","KpColon","KpHash","KpSpace","KpAt","KpExclam","KpMemStore","KpMemRecall","KpMemClear","KpMemAdd","KpMemSubtract","KpMemMultiply","KpMemDivide","KpPlusMinus","KpClear","KpClearEntry","KpBinary","KpOctal","KpDecimal","KpHexadecimal","LCtrl","LShift","LAlt","LGui","RCtrl","RShift","RAlt","RGui","Mode","AudioNext","AudioPrev","AudioStop","AudioPlay","AudioMute","MediaSelect","Www","Mail","Calculator","Computer","AcSearch","AcHome","AcBack","AcForward","AcStop","AcRefresh","AcBookmarks","BrightnessDown","BrightnessUp","DisplaySwitch","KbdIllumToggle","KbdIllumDown","KbdIllumUp","Eject","Sleep","Scancode","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","Num1","Num2","Num3","Num4","Num5","Num6","Num7","Num8","Num9","Num0","Return","Escape","Backspace","Tab","Space","Minus","Equals","LeftBracket","RightBracket","Backslash","NonUsHash","Semicolon","Apostrophe","Grave","Comma","Period","Slash","CapsLock","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","PrintScreen","ScrollLock","Pause","Insert","Home","PageUp","Delete","End","PageDown","Right","Left","Down","Up","NumLockClear","KpDivide","KpMultiply","KpMinus","KpPlus","KpEnter","Kp1","Kp2","Kp3","Kp4","Kp5","Kp6","Kp7","Kp8","Kp9","Kp0","KpPeriod","NonUsBackslash","Application","Power","KpEquals","F13","F14","F15","F16","F17","F18","F19","F20","F21","F22","F23","F24","Execute","Help","Menu","Select","Stop","Again","Undo","Cut","Copy","Paste","Find","Mute","VolumeUp","VolumeDown","KpComma","KpEqualsAS400","International1","International2","International3","International4","International5","International6","International7","International8","International9","Lang1","Lang2","Lang3","Lang4","Lang5","Lang6","Lang7","Lang8","Lang9","AltErase","SysReq","Cancel","Clear","Prior","Return2","Separator","Out","Oper","ClearAgain","CrSel","ExSel","Kp00","Kp000","ThousandsSeparator","DecimalSeparator","CurrencyUnit","CurrencySubUnit","KpLeftParen","KpRightParen","KpLeftBrace","KpRightBrace","KpTab","KpBackspace","KpA","KpB","KpC","KpD","KpE","KpF","KpXor","KpPower","KpPercent","KpLess","KpGreater","KpAmpersand","KpDblAmpersand","KpVerticalBar","KpDblVerticalBar","KpColon","KpHash","KpSpace","KpAt","KpExclam","KpMemStore","KpMemRecall","KpMemClear","KpMemAdd","KpMemSubtract","KpMemMultiply","KpMemDivide","KpPlusMinus","KpClear","KpClearEntry","KpBinary","KpOctal","KpDecimal","KpHexadecimal","LCtrl","LShift","LAlt","LGui","RCtrl","RShift","RAlt","RGui","Mode","AudioNext","AudioPrev","AudioStop","AudioPlay","AudioMute","MediaSelect","Www","Mail","Calculator","Computer","AcSearch","AcHome","AcBack","AcForward","AcStop","AcRefresh","AcBookmarks","BrightnessDown","BrightnessUp","DisplaySwitch","KbdIllumToggle","KbdIllumDown","KbdIllumUp","Eject","Sleep","App1","App2","Num","Mod","NOMOD","LSHIFTMOD","RSHIFTMOD","LCTRLMOD","RCTRLMOD","LALTMOD","RALTMOD","LGUIMOD","RGUIMOD","NUMMOD","CAPSMOD","MODEMOD","RESERVEDMOD","empty","all","bits","from_bits","from_bits_truncate","is_empty","is_all","intersects","contains","insert","remove","toggle","KeyboardState","new","is_scancode_pressed","scancodes","pressed_scancodes","ScancodeIterator","PressedScancodeIterator","KeyboardUtil","focused_window_id","mod_state","set_mod_state","TextInputUtil","start","is_active","stop","set_rect","has_screen_keyboard_support","is_screen_keyboard_shown","mouse","RelativeMouseState","SystemCursor","Arrow","IBeam","Wait","Crosshair","WaitArrow","SizeNWSE","SizeNESW","SizeWE","SizeNS","SizeAll","No","Hand","Cursor","new","from_surface","from_system","set","MouseWheelDirection","Normal","Flipped","Unknown","from_ll","to_ll","MouseButton","Unknown","Left","Middle","Right","X1","X2","from_ll","MouseState","new","from_sdl_state","to_sdl_state","left","middle","right","x1","x2","x","y","is_mouse_button_pressed","mouse_buttons","pressed_mouse_buttons","MouseButtonIterator","PressedMouseButtonIterator","MouseUtil","focused_window_id","warp_mouse_in_window","set_relative_mouse_mode","relative_mouse_mode","is_cursor_showing","show_cursor","capture","rect","max_int_value","min_int_value","Rect","new","from_center","x","y","width","height","size","set_x","set_y","set_width","set_height","left","right","top","bottom","center","top_left","top_right","bottom_left","bottom_right","set_right","set_bottom","center_on","offset","reposition","resize","contains","contains_point","contains_rect","raw","raw_mut","raw_slice","from_ll","from_enclose_points","has_intersection","intersection","union","intersect_line","Point","new","from_ll","raw_slice","raw","offset","scale","x","y","surface","SurfaceContext","Surface","SurfaceRef","from_ll","new","from_pixelmasks","from_data","from_data_pixelmasks","load_bmp_rw","load_bmp","into_canvas","context","from_ll","from_ll_mut","raw","width","height","pitch","size","rect","pixel_format","pixel_format_enum","with_lock","with_lock_mut","without_lock","without_lock_mut","must_lock","save_bmp_rw","save_bmp","set_palette","enable_RLE","disable_RLE","set_color_key","color_key","set_color_mod","color_mod","fill_rect","fill_rects","set_alpha_mod","alpha_mod","set_blend_mode","blend_mode","set_clip_rect","clip_rect","convert","blit","lower_blit","blit_scaled","lower_blit_scaled","pixels","Palette","new","with_colors","len","is_empty","raw","Color","r","g","b","a","RGB","RGBA","to_u32","from_u32","rgb","rgba","PixelMasks","bpp","rmask","gmask","bmask","amask","PixelFormat","raw","from_ll","PixelFormatEnum","Unknown","Index1LSB","Index1MSB","Index4LSB","Index4MSB","Index8","RGB332","RGB444","RGB555","BGR555","ARGB4444","RGBA4444","ABGR4444","BGRA4444","ARGB1555","RGBA5551","ABGR1555","BGRA5551","RGB565","BGR565","RGB24","BGR24","RGB888","RGBX8888","BGR888","BGRX8888","ARGB8888","RGBA8888","ABGR8888","BGRA8888","ARGB2101010","YV12","IYUV","YUY2","UYVY","YVYU","from_masks","into_masks","byte_size_from_pitch_and_height","byte_size_of_pixels","byte_size_per_pixel","supports_alpha","video","gl_attr","GLAttr","set_red_size","red_size","set_green_size","green_size","set_blue_size","blue_size","set_alpha_size","alpha_size","set_buffer_size","buffer_size","set_double_buffer","double_buffer","set_depth_size","depth_size","set_stencil_size","stencil_size","set_accum_red_size","accum_red_size","set_accum_green_size","accum_green_size","set_accum_blue_size","accum_blue_size","set_accum_alpha_size","accum_alpha_size","set_stereo","stereo","set_multisample_buffers","multisample_buffers","set_multisample_samples","multisample_samples","set_accelerated_visual","accelerated_visual","set_context_major_version","context_major_version","set_context_minor_version","context_minor_version","set_context_profile","context_profile","set_share_with_current_context","share_with_current_context","set_framebuffer_srgb_compatible","framebuffer_srgb_compatible","set_context_version","context_version","ContextFlagsBuilder","set","debug","forward_compatible","robust_access","reset_isolation","ContextFlags","has_debug","has_forward_compatible","has_robust_access","has_reset_isolation","set_context_flags","context_flags","WindowSurfaceRef","update_window","update_window_rects","finish","GLProfile","Core","Compatibility","GLES","Unknown","DisplayMode","format","w","h","refresh_rate","new","from_ll","to_ll","FullscreenType","Off","True","Desktop","from_window_flags","WindowPos","Undefined","Centered","Positioned","GLContext","is_current","WindowContext","from_ll","SwapInterval","Immediate","VSync","LateSwapTearing","Window","raw","WindowBuildError","HeightOverflows","WidthOverflows","InvalidTitle","SdlError","WindowBuilder","new","build","window_flags","set_window_flags","position","position_centered","fullscreen","fullscreen_desktop","opengl","vulkan","hidden","borderless","resizable","minimized","maximized","input_grabbed","allow_highdpi","raw","from_ll","from_ref","subsystem","into_canvas","context","id","gl_create_context","gl_set_context_to_current","gl_make_current","gl_swap_window","display_index","set_display_mode","display_mode","window_pixel_format","window_flags","set_title","title","set_icon","set_position","position","set_size","size","drawable_size","set_minimum_size","minimum_size","set_maximum_size","maximum_size","set_bordered","show","hide","raise","maximize","minimize","restore","fullscreen_state","set_fullscreen","surface","set_grab","grab","set_brightness","brightness","set_gamma_ramp","gamma_ramp","DriverIterator","drivers","timer","TimerCallback","Timer","into_inner","render","SdlError","TargetRenderError","SdlError","NotSupported","TextureAccess","Static","Streaming","Target","RendererInfo","name","flags","texture_formats","max_texture_width","max_texture_height","BlendMode","None","Blend","Add","Mod","Invalid","from_ll","RendererContext","info","raw","from_ll","RenderTarget","Context","Canvas","SurfaceCanvas","from_surface","surface","surface_mut","into_surface","texture_creator","WindowCanvas","window","window_mut","into_window","default_pixel_format","texture_creator","render_target_supported","with_texture_canvas","with_multiple_texture_canvas","TextureCreator","CanvasBuilder","new","build","index","software","accelerated","present_vsync","target_texture","TextureValueError","WidthOverflows","HeightOverflows","WidthMustBeMultipleOfTwoForFormat","SdlError","raw","default_pixel_format","create_texture","create_texture_static","create_texture_streaming","create_texture_target","create_texture_from_surface","raw_create_texture","raw","set_draw_color","draw_color","set_blend_mode","blend_mode","clear","present","output_size","set_logical_size","logical_size","set_viewport","viewport","set_clip_rect","clip_rect","set_scale","scale","draw_point","draw_points","draw_line","draw_lines","draw_rect","draw_rects","fill_rect","fill_rects","copy","copy_ex","read_pixels","TextureQuery","format","access","width","height","Texture","UpdateTextureError","PitchOverflows","PitchMustBeMultipleOfTwoForFormat","XMustBeMultipleOfTwoForFormat","YMustBeMultipleOfTwoForFormat","WidthMustBeMultipleOfTwoForFormat","HeightMustBeMultipleOfTwoForFormat","SdlError","UpdateTextureYUVError","PitchOverflows","plane","value","InvalidPlaneLength","plane","length","pitch","height","XMustBeMultipleOfTwoForFormat","YMustBeMultipleOfTwoForFormat","WidthMustBeMultipleOfTwoForFormat","HeightMustBeMultipleOfTwoForFormat","RectNotInsideTexture","SdlError","query","set_color_mod","color_mod","set_alpha_mod","alpha_mod","set_blend_mode","blend_mode","update","update_yuv","with_lock","gl_bind_texture","gl_unbind_texture","gl_with_bind","raw","DriverIterator","drivers","rwops","RWops","raw","from_ll","from_file","from_bytes","from_read","from_bytes_mut","len","is_empty","log","Category","Application","Error","Assert","System","Audio","Video","Render","Input","Test","Custom","Unknown","Priority","Verbose","Debug","Info","Warn","Error","Critical","set_output_function","log","audio","AudioFormat","U8","S8","U16LSB","U16MSB","S16LSB","S16MSB","S32LSB","S32MSB","F32LSB","F32MSB","u16_sys","s16_sys","s32_sys","f32_sys","AudioStatus","Stopped","Playing","Paused","DriverIterator","drivers","AudioSpecWAV","freq","format","channels","load_wav","load_wav_rw","buffer","AudioCallback","Channel","callback","AudioFormatNum","audio_format","zero","AudioSpecDesired","freq","channels","samples","AudioSpec","freq","format","channels","silence","samples","size","AudioQueue","open_queue","subsystem","spec","status","pause","resume","queue","size","clear","AudioDevice","open_playback","open_capture","subsystem","spec","status","pause","resume","lock","close_and_get_callback","AudioDeviceLockGuard","AudioCVT","new","convert","is_conversion_needed","capacity","version","Version","major","minor","patch","from_ll","version","revision","revision_number","messagebox","MessageBoxFlag","MESSAGEBOX_ERROR","MESSAGEBOX_WARNING","MESSAGEBOX_INFORMATION","empty","all","bits","from_bits","from_bits_truncate","is_empty","is_all","intersects","contains","insert","remove","toggle","MessageBoxButtonFlag","MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT","MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT","MESSAGEBOX_BUTTON_NOTHING","empty","all","bits","from_bits","from_bits_truncate","is_empty","is_all","intersects","contains","insert","remove","toggle","MessageBoxColorScheme","background","text","button_border","button_background","button_selected","ButtonData","flags","button_id","text","ClickedButton","CloseButton","CustomButton","ShowMessageError","InvalidTitle","InvalidMessage","InvalidButton","SdlError","show_simple_message_box","show_message_box","hint","Hint","Default","Normal","Override","set_video_minimize_on_focus_lost","set_video_minimize_on_focus_lost_with_priority","get_video_minimize_on_focus_lost","set","get","set_with_priority","Error","NoMemError","ReadError","WriteError","SeekError","UnsupportedError","Sdl","AudioSubsystem","GameControllerSubsystem","HapticSubsystem","JoystickSubsystem","VideoSubsystem","TimerSubsystem","EventSubsystem","EventPump","init","get_error","set_error","set_error_from_code","clear_error","IntegerOrSdlError","IntegerOverflows","SdlError","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","extend","extend","extend","next","next","next","next","next","next","next","next","size_hint","next","size_hint","next","size_hint","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","eq","eq","ne","eq","ne","eq","eq","eq","eq","eq","eq","eq","eq","ne","eq","ne","eq","eq","ne","eq","eq","ne","eq","eq","eq","ne","eq","eq","ne","eq","ne","eq","eq","ne","eq","eq","eq","ne","eq","eq","ne","eq","eq","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","partial_cmp","partial_cmp","partial_cmp","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","div","sub","sub","sub","sub","add","mul","neg","sub_assign","sub_assign","sub_assign","not","not","not","bitand","bitand","bitand","bitand","bitor","bitor","bitor","bitor","bitxor","bitxor","bitxor","bitand_assign","bitand_assign","bitand_assign","bitor_assign","bitor_assign","bitor_assign","bitxor_assign","bitxor_assign","bitxor_assign","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","from_iter","from_iter","from_iter","description","description","description","description","description","description","description","description","description","description","description","read","seek","write","flush","from_i64","from_u64","from_i64","from_u64","from_i64","from_u64","from_i64","from_u64","from_i64","from_u64","rand","clipboard","flush_event","flush_events","peek_events","push_event","register_event","register_events","register_custom_event","push_custom_event","is_event_enabled","enable_event","disable_event","poll_event","poll_iter","pump_events","wait_event","wait_event_timeout","wait_iter","wait_timeout_iter","keyboard_state","mouse_state","relative_mouse_state","num_joysticks","open","name_for_index","device_guid","set_event_state","event_state","update","num_joysticks","is_game_controller","open","name_for_index","set_event_state","event_state","add_mapping","load_mappings","mapping_for_guid","update","open_from_joystick_id","from_i32","from_scancode","from_name","name","from_i32","from_keycode","from_name","name","keyboard","text_input","new","from_sdl_state","to_sdl_state","left","middle","right","x1","x2","x","y","is_mouse_button_pressed","mouse_buttons","pressed_mouse_buttons","mouse","gl_attr","window","current_video_driver","num_video_displays","display_name","display_bounds","num_display_modes","display_mode","desktop_display_mode","current_display_mode","closest_display_mode","display_dpi","is_screen_saver_enabled","enable_screen_saver","disable_screen_saver","gl_load_library_default","gl_load_library","gl_unload_library","gl_get_proc_address","gl_extension_supported","gl_get_current_window_id","gl_release_current_context","gl_set_swap_interval","gl_get_swap_interval","add_timer","ticks","delay","performance_counter","performance_frequency","audio","event","joystick","haptic","game_controller","timer","video","event_pump","sdl","sdl","sdl","sdl","sdl","clone","sdl","clone","sdl","open_playback","open_capture","open_queue","current_audio_driver","num_audio_playback_devices","audio_playback_device_name"],"q":["sdl2","sdl2::clipboard","","","","sdl2","sdl2::cpuinfo","","","","","","","","","","","","","","sdl2","","sdl2::event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sdl2::event::Event","sdl2::event","sdl2::event::Event","sdl2::event","sdl2::event::Event","sdl2::event","sdl2::event::Event","sdl2::event","sdl2::event::Event","sdl2::event","sdl2::event::Event","sdl2::event","sdl2::event::Event","sdl2::event","sdl2::event::Event","","","sdl2::event","sdl2::event::Event","","","","","","sdl2::event","sdl2::event::Event","","","","","","sdl2::event","sdl2::event::Event","","","","","sdl2::event","sdl2::event::Event","","","sdl2::event","sdl2::event::Event","","","","","","","","sdl2::event","sdl2::event::Event","","","","","","","sdl2::event","sdl2::event::Event","","","","","","","sdl2::event","sdl2::event::Event","","","","","","sdl2::event","sdl2::event::Event","","","","sdl2::event","sdl2::event::Event","","","","","sdl2::event","sdl2::event::Event","","","","sdl2::event","sdl2::event::Event","","","sdl2::event","sdl2::event::Event","","","sdl2::event","sdl2::event::Event","","sdl2::event","sdl2::event::Event","","sdl2::event","sdl2::event::Event","","","","sdl2::event","sdl2::event::Event","","","sdl2::event","sdl2::event::Event","","","sdl2::event","sdl2::event::Event","","sdl2::event","sdl2::event::Event","","sdl2::event","sdl2::event::Event","","sdl2::event","sdl2::event::Event","","","","","","","","sdl2::event","sdl2::event::Event","","","","","","","","sdl2::event","sdl2::event::Event","","","","","","","","sdl2::event","sdl2::event::Event","","","","","","","sdl2::event","sdl2::event::Event","","","","","","","sdl2::event","sdl2::event::Event","","","","","","","sdl2::event","sdl2::event::Event","sdl2::event","sdl2::event::Event","","sdl2::event","sdl2::event::Event","","","","","","sdl2::event","sdl2::event::Event","","sdl2::event","","","","","sdl2","sdl2::filesystem","","","","","","sdl2","","sdl2::touch","","","","","","sdl2","sdl2::joystick","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sdl2","sdl2::controller","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sdl2","sdl2::haptic","","","","sdl2","sdl2::keyboardsdl2","sdl2::mouse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sdl2","sdl2::rect","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sdl2","sdl2::surface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sdl2","sdl2::pixels","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sdl2","sdl2::video","sdl2::video::gl_attr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sdl2::video","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sdl2","sdl2::timer","","","sdl2","sdl2::render","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sdl2::render::UpdateTextureYUVError","","sdl2::render","sdl2::render::UpdateTextureYUVError","","","","sdl2::render","","","","","","","","","","","","","","","","","","","","","","sdl2","sdl2::rwops","","","","","","","","","sdl2","sdl2::log","","","","","","","","","","","","","","","","","","","","","sdl2","sdl2::audio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sdl2","sdl2::version","","","","","","","","sdl2","sdl2::messagebox","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sdl2","sdl2::hint","","","","","","","","","","sdl2","","","","","","","","","","","","","","","","","","","","","","","sdl2::clipboard","","","","","","","sdl2::event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sdl2::filesystem","","","","","","","","sdl2::joystick","","","","","","","","","","","","","","","","","","","","","","","","","","sdl2::controller","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sdl2::haptic","","","","","","","sdl2::keyboard","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sdl2::mouse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sdl2::rect","","","","","","","","","","","","","","","","","","sdl2::surface","","","","","","","","","","","","","","","","","","","","","sdl2::pixels","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sdl2::video::gl_attr","","","","","","","","","","","","","","","","","","","","","sdl2::video","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sdl2::timer","","","","","","","sdl2::render","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sdl2::rwops","","","","","","","sdl2::log","","","","","","","","","","","","","","","","","","sdl2","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sdl2::audio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sdl2::version","","","","","","","","","","sdl2::messagebox","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sdl2::hint","","","","","","","sdl2","","","","","","","","sdl2::joystick","sdl2::controller","sdl2::haptic","sdl2::mouse","sdl2::surface","sdl2::pixels","sdl2::video","","sdl2::timer","sdl2::render","","sdl2::rwops","sdl2","sdl2::audio","","sdl2::rect","","sdl2::surface","sdl2::rect","","sdl2::surface","","sdl2::rect","","","","sdl2::pixels","","sdl2::video","","sdl2::render","sdl2::messagebox","sdl2::rect","","","","sdl2::pixels","","sdl2::messagebox","sdl2::keyboard","sdl2::messagebox","","sdl2::event","","","sdl2::keyboard","","sdl2::mouse","","sdl2::video","","sdl2::render","","sdl2::audio","","sdl2::event","","","sdl2::joystick","","sdl2::controller","","","sdl2::keyboard","","","sdl2::mouse","","","","","sdl2::rect","","sdl2::pixels","","sdl2::video","","","","","","sdl2::render","","","","","sdl2::log","","sdl2","","","","","","","sdl2::audio","","","","","","sdl2::version","sdl2::messagebox","","sdl2::keyboard","sdl2::messagebox","","sdl2::event","","","","","sdl2::joystick","","sdl2::controller","","","sdl2::keyboard","","","","sdl2::mouse","","","","","","","","sdl2::rect","","sdl2::pixels","","","sdl2::video","","","","","","","","sdl2::render","","","","","","sdl2::log","","sdl2","sdl2::audio","","","","sdl2::version","","sdl2::messagebox","","","","sdl2::keyboard","sdl2::messagebox","","sdl2::rect","","sdl2::surface","sdl2::video","sdl2::render","sdl2::audio","sdl2::rect","","sdl2::surface","sdl2::video","sdl2::audio","sdl2::event","","","sdl2::filesystem","sdl2::joystick","sdl2::controller","","","","sdl2::keyboard","","","sdl2::mouse","","","sdl2::rect","","sdl2::pixels","","sdl2::video","","","","","","","sdl2::render","","","","","","","","","sdl2::log","","sdl2","","","","","","sdl2::audio","","","sdl2::version","sdl2::messagebox","","","","","","sdl2","sdl2::filesystem","sdl2::joystick","sdl2::controller","sdl2::keyboard","","sdl2::video","sdl2::render","","","","","sdl2","sdl2::version","sdl2::messagebox","sdl2","sdl2::rect","sdl2::keyboard","sdl2::rect","sdl2::messagebox","","sdl2::rect","","","sdl2::keyboard","sdl2::messagebox","","sdl2::keyboard","sdl2::messagebox","","sdl2::keyboard","sdl2::rect","sdl2::messagebox","","sdl2::keyboard","sdl2::rect","sdl2::messagebox","","sdl2::keyboard","sdl2::messagebox","","sdl2::keyboard","sdl2::messagebox","","sdl2::keyboard","sdl2::messagebox","","sdl2::keyboard","sdl2::messagebox","","sdl2::event","","sdl2::joystick","sdl2::controller","","","sdl2::keyboard","","","sdl2::mouse","","","","","sdl2::pixels","","sdl2::video","","","","","sdl2::render","","","","sdl2::log","","sdl2","sdl2::audio","","","sdl2::version","sdl2::messagebox","","sdl2::keyboard","sdl2::messagebox","","sdl2::filesystem","sdl2::controller","sdl2::video","sdl2::render","","","","","sdl2","sdl2::messagebox","sdl2","sdl2::rwops","","","","sdl2::event","","sdl2::pixels","","sdl2::render","","","","sdl2::audio","","sdl2::pixels","sdl2","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sdl2::keyboard","","","","","","","","sdl2","","sdl2::mouse","","","","","","","","","","","","","sdl2","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Clipboard utility functions. Access with …","","","","","","","","","","","","","","","","","","","","Event Handling","Types of events that can be delivered.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An enum of window events.","","","","","","","","","","","","","","","","","","Different event types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The joystick’s <code>id</code>","","","","","The joystick’s <code>id</code>","","","","","","The joystick’s <code>id</code>","","","","","The joystick’s <code>id</code>","","","","The joystick’s <code>id</code>","","","","The newly added joystick’s <code>joystick_index</code>","","","The joystick’s <code>id</code>","","","The controller’s joystick <code>id</code>","","","","","The controller’s joystick <code>id</code>","","","","The controller’s joystick <code>id</code>","","","","The newly added controller’s <code>joystick_index</code>","","","The controller’s joystick <code>id</code>","","","The controller’s joystick <code>id</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator that calls <code>EventPump::poll_event()</code>.","An iterator that calls <code>EventPump::wait_event()</code>.","An iterator that calls <code>EventPump::wait_event_timeout()</code>.","","","","","","","Return the preferred directory for the application to …","","","","","","","","","","Wrapper around the <code>SDL_Joystick</code> object","","Return the name of the joystick or an empty string if no …","Return true if the joystick has been opened and currently …","","Retreive the joystick’s GUID","Retreive the number of axes for this joystick","Gets the position of the given <code>axis</code>.","Retreive the number of buttons for this joystick","Return <code>Ok(true)</code> if <code>button</code> is pressed.","Retreive the number of balls for this joystick","Return a pair <code>(dx, dy)</code> containing the difference in axis …","Retreive the number of balls for this joystick","Return the position of <code>hat</code> for this joystick","Wrapper around a <code>SDL_JoystickGUID</code>, a globally unique …","Create a GUID from a string representation.","Return <code>true</code> if GUID is full 0s","Return a String representation of GUID","Return a copy of the internal SDL_JoystickGUID","This is represented in SDL2 as a bitfield but obviously …","","","","","","","","","","","","","","","","","","","","","","","","Return the Axis from a string description in the same …","Return a string for a given axis in the same format using …","","","","","","","","","","","","","","","","","","","Return the Button from a string description in the same …","Return a string for a given button in the same format …","","","Possible return values for <code>add_mapping</code>","","","Wrapper around the <code>SDL_GameController</code> object","","Return the name of the controller or an empty string if no…","Return a String describing the controller’s button and …","Return true if the controller has been opened and …","Return the joystick instance id of this controller","Get the position of the given <code>axis</code>","Returns <code>true</code> if <code>button</code> is pressed.","Haptic Functions","Wrapper around the <code>SDL_Haptic</code> object","","Run a simple rumble effect on the haptic device.","Stop the simple rumble on the haptic deviceeturns an empty set of flags.","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","","","Returns true if the scancode is pressed.","Returns an iterator all scancodes with a boolean …","Returns an iterator of pressed scancodes.","","","Keyboard utility functions. Access with <code>Sdl::keyboard()</code>.","Gets the id of the window which currently has keyboard …","","","Text input utility functions. Access with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the left mouse button is pressed.","Tests if the middle mouse button was pressed.","Tests if the right mouse button was pressed.","Tests if the X1 mouse button was pressed.","Tests if the X2 mouse button was pressed.","Returns the x coordinate of the state","Returns the y coordinate of the state","Returns true if the mouse button is pressed.","Returns an iterator all mouse buttons with a boolean …","Returns an iterator of pressed mouse buttons.","","","Mouse utility functions. Access with <code>Sdl::mouse()</code>.","Gets the id of the window which currently has mouse focus.","","","","","","","Rectangles and points.","The maximal integer value that can be used for rectangles.","The minimal integer value that can be used for rectangle …","A (non-empty) rectangle.","Creates a new rectangle from the given values.","Creates a new rectangle centered on the given position.","The horizontal position of this rectangle.","The vertical position of this rectangle.","The width of this rectangle.","The height of this rectangle.","Returns the width and height of this rectangle.","Sets the horizontal position of this rectangle to the …","Sets the vertical position of this rectangle to the given …","Sets the width of this rectangle to the given value, …","Sets the height of this rectangle to the given value, …","Returns the x-position of the left side of this rectangle.","Returns the x-position of the right side of this …","Returns the y-position of the top side of this rectangle.","Returns the y-position of the bottom side of this …","Returns the center position of this rectangle.","Returns the top-left corner of this rectangle.","Returns the top-right corner of this rectangle.","Returns the bottom-left corner of this rectangle.","Returns the bottom-right corner of this rectangle.","Sets the position of the right side of this rectangle to …","Sets the position of the bottom side of this rectangle to …","Centers the rectangle on the given point.","Move this rect and clamp the positions to prevent …","Moves this rect to the given position after clamping the …","Resizes this rect to the given size after clamping the …","Checks whether this rect contains a given point, or …","Checks whether this rectangle contains a given point.","Checks whether this rectangle completely contains another …","Returns the underlying C Rect.","","","","Calculate a minimal rectangle enclosing a set of points. …","Determines whether two rectangles intersect.","Calculates the intersection of two rectangles.","Calculates the union of two rectangles (i.e. the smallest …","Calculates the intersection of a rectangle and a line …","Immutable point type, consisting of x and y.","Creates a new point from the given coordinates.","","","","Returns a new point by shifting this point’s …","Returns a new point by multiplying this point’s …","Returns the x-coordinate of this point.","Returns the y-coordinate of this point.","","Holds a <code>SDL_Surface</code>","Holds a <code>Rc<SurfaceContext></code>.","An unsized Surface reference.","","Creates a new surface using a pixel format.","Creates a new surface using pixel masks.","Creates a new surface from an existing buffer, using a …","Creates a new surface from an existing buffer, using …","","","Creates a Software Canvas to allow rendering in the …","","","","","","","","","","","","Locks a surface so that the pixels can be directly …","Locks a surface so that the pixels can be directly …","Returns the Surface’s pixel buffer if the Surface doesn…","Returns the Surface’s pixel buffer if the Surface doesn…","Returns true if the Surface needs to be locked before …","","","","","","","The function will fail if the surface doesn’t have …","","","","","","","The function will fail if the blend mode is not supported …","","Sets the clip rectangle for the surface.","Gets the clip rectangle for the surface.","Copies the surface into a new one that is optimized for …","Performs surface blitting (surface copying).","Performs low-level surface blitting.","Performs scaled surface bliting (surface copying).","Performs low-level scaled surface blitting.","","","Creates a new, uninitialized palette","Creates a palette from the provided colors","","","","","","","","","","","","","","","","Bits per pixel; usually 15, 16, or 32","The red mask","The green mask","The blue mask","The alpha mask","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calculates the total byte size of an image buffer, given …","","","","","OpenGL context getters and setters","OpenGL context getters and setters. Obtain with …","<strong>Sets</strong> the attribute:  the minimum number of bits for the …","<strong>Gets</strong> the attribute:  the minimum number of bits for the …","<strong>Sets</strong> the attribute:  the minimum number of bits for the …","<strong>Gets</strong> the attribute:  the minimum number of bits for the …","<strong>Sets</strong> the attribute:  the minimum number of bits for the …","<strong>Gets</strong> the attribute:  the minimum number of bits for the …","<strong>Sets</strong> the attribute:  the minimum number of bits for the …","<strong>Gets</strong> the attribute:  the minimum number of bits for the …","<strong>Sets</strong> the attribute:  the minimum number of bits for frame …","<strong>Gets</strong> the attribute:  the minimum number of bits for frame …","<strong>Sets</strong> the attribute:  whether the output is single or …","<strong>Gets</strong> the attribute:  whether the output is single or …","<strong>Sets</strong> the attribute:  the minimum number of bits in the …","<strong>Gets</strong> the attribute:  the minimum number of bits in the …","<strong>Sets</strong> the attribute:  the minimum number of bits in the …","<strong>Gets</strong> the attribute:  the minimum number of bits in the …","<strong>Sets</strong> the attribute:  the minimum number of bits for the …","<strong>Gets</strong> the attribute:  the minimum number of bits for the …","<strong>Sets</strong> the attribute:  the minimum number of bits for the …","<strong>Gets</strong> the attribute:  the minimum number of bits for the …","<strong>Sets</strong> the attribute:  the minimum number of bits for the …","<strong>Gets</strong> the attribute:  the minimum number of bits for the …","<strong>Sets</strong> the attribute:  the minimum number of bits for the …","<strong>Gets</strong> the attribute:  the minimum number of bits for the …","<strong>Sets</strong> the attribute:  whether the output is stereo 3D; …","<strong>Gets</strong> the attribute:  whether the output is stereo 3D; …","<strong>Sets</strong> the attribute:  the number of buffers used for …","<strong>Gets</strong> the attribute:  the number of buffers used for …","<strong>Sets</strong> the attribute:  the number of samples used around …","<strong>Gets</strong> the attribute:  the number of samples used around …","<strong>Sets</strong> the attribute:  whether to require hardware …","<strong>Gets</strong> the attribute:  whether to require hardware …","<strong>Sets</strong> the attribute:  OpenGL context major version","<strong>Gets</strong> the attribute:  OpenGL context major version","<strong>Sets</strong> the attribute:  OpenGL context minor version","<strong>Gets</strong> the attribute:  OpenGL context minor version","<strong>Sets</strong> the attribute:  type of GL context (Core, …","<strong>Gets</strong> the attribute:  type of GL context (Core, …","<strong>Sets</strong> the attribute:  OpenGL context sharing; defaults to …","<strong>Gets</strong> the attribute:  OpenGL context sharing; defaults to …","<strong>Sets</strong> the attribute:  requests sRGB capable visual; …","<strong>Gets</strong> the attribute:  requests sRGB capable visual; …","<strong>Sets</strong> the OpenGL context major and minor versions.","<strong>Gets</strong> the OpenGL context major and minor versions as a …","The type that allows you to build a OpenGL context …","Finishes the builder and applies the GL context flags to …","Sets the context into “debug” mode.","Sets the context into “forward compatible” mode.","","","","","","","","<strong>Sets</strong> any combination of OpenGL context configuration …","<strong>Gets</strong> the applied OpenGL context configuration flags.","","Updates the change made to the inner Surface to the …","Same as <code>update_window</code>, but only update the parts included …","Gives up this WindowSurfaceRef, allowing to use the …","","OpenGL core profile - deprecated functions are disabled","OpenGL compatibility profile - deprecated functions are …","OpenGL ES profile - only a subset of the base OpenGL …","Unknown profile - SDL will tend to return 0 if you ask …","","","","","","","","","","","","","","","","","","","Returns true if the OpenGL context is the current one in …","Holds a <code>SDL_Window</code>","Unsafe if the <code>*mut SDL_Window</code> is used after the …","Represents a setting for vsync/swap interval.","","","","Represents the “shell” of a <code>Window</code>.","","","","","","","The type that allows you to build windows.","Initializes a new <code>WindowBuilder</code>.","Builds the window.","Gets the underlying window flags.","Sets the underlying window flags. This will effectively …","Sets the window position.","Centers the window.","Sets the window to fullscreen.","Sets the window to fullscreen at the current desktop …","Sets the window to be usable with an OpenGL context","Sets the window to be usable with a Vulkan instance","Hides the window.","Removes the window decoration.","Sets the window to be resizable.","Minimizes the window.","Maximizes the window.","Sets the window to have grabbed input focus.","Creates the window in high-DPI mode if supported (>= SDL …","","","Create a new <code>Window</code> without taking ownership of the …","","Initializes a new <code>CanvasBuilder</code>; a convenience method …","","","","Set the window’s OpenGL context to the current context …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a WindowSurfaceRef, which can be used like a …","","","","","","","","Gets an iterator of all video drivers compiled into the …","","","","Returns the closure as a trait-object and cancels the …","2D accelerated rendering","Contains the description of an error returned by SDL","Possible errors returned by targeting a <code>Canvas</code> to render …","","","","","","","A structure that contains information on the capabilities …","","","","","","","","","","","","","Manages what keeps a <code>SDL_Renderer</code> alive","Gets information about the rendering context.","Gets the raw pointer to the SDL_Renderer","","Represents structs which can be the target of a …","","Manages and owns a target (<code>Surface</code> or <code>Window</code>) and allows …","Alias for a <code>Canvas</code> that was created out of a <code>Surface</code>","Creates a 2D software rendering context for a surface.","Gets a reference to the associated surface of the Canvas","Gets a mutable reference to the associated surface of the …","Gets the associated surface of the Canvas and destroys …","Returns a <code>TextureCreator</code> that can create Textures to be …","","Gets a reference to the associated window of the Canvas","Gets a mutable reference to the associated window of the …","Gets the associated window of the Canvas and destroys the …","","Returns a <code>TextureCreator</code> that can create Textures to be …","Determine whether a window supports the use of render …","Temporarily sets the target of <code>Canvas</code> to a <code>Texture</code>. This …","Same as <code>with_texture_canvas</code>, but allows to change …","Creates Textures that cannot outlive the creator","The type that allows you to build Window-based renderers.","Initializes a new <code>CanvasBuilder</code>.","Builds the renderer.","Sets the index of the rendering driver to initialize. If …","Set the renderer to a software fallback. This flag is …","Set the renderer to use hardware acceleration. This flag …","Synchronize renderer <code>present</code> method calls with the …","Set the renderer to support rendering to a texture. This …","","","","","","","","Creates a texture for a rendering context.","Shorthand for …","Shorthand for …","Shorthand for …","Creates a texture from an existing surface.","Create a texture from its raw <code>SDL_Texture</code>.","","Sets the color used for drawing operations (Rect, Line …","Gets the color used for drawing operations (Rect, Line …","Sets the blend mode used for drawing operations (Fill and …","Gets the blend mode used for drawing operations.","Clears the current rendering target with the drawing …","Updates the screen with any rendering performed since the …","Gets the output size of a rendering context.","Sets a device independent resolution for rendering.","Gets device independent resolution for rendering.","Sets the drawing area for rendering on the current target.","Gets the drawing area for the current target.","Sets the clip rectangle for rendering on the specified …","Gets the clip rectangle for the current target.","Sets the drawing scale for rendering on the current …","Gets the drawing scale for the current target.","Draws a point on the current rendering target. Errors if …","Draws multiple points on the current rendering target. …","Draws a line on the current rendering target. Errors if …","Draws a series of connected lines on the current …","Draws a rectangle on the current rendering target. Errors …","Draws some number of rectangles on the current rendering …","Fills a rectangle on the current rendering target with …","Fills some number of rectangles on the current rendering …","Copies a portion of the texture to the current rendering …","Copies a portion of the texture to the current rendering …","Reads pixels from the current rendering target.","","","","","","A texture for a rendering context.","","","","","","","","","","","","","","","","","","","","","","","","Queries the attributes of the texture.","Sets an additional color value multiplied into render …","Gets the additional color value multiplied into render …","Sets an additional alpha value multiplied into render …","Gets the additional alpha value multiplied into render …","Sets the blend mode used for drawing operations (Fill and …","Gets the blend mode used for texture copy operations.","Updates the given texture rectangle with new pixel data.","Updates a rectangle within a planar YV12 or IYUV texture …","Locks the texture for <strong>write-only</strong> pixel access. The …","Binds an OpenGL/ES/ES2 texture to the current context for …","Unbinds an OpenGL/ES/ES2 texture from the current context.","Binds and unbinds an OpenGL/ES/ES2 texture from the …","","","Gets an iterator of all render drivers compiled into the …","","A structure that provides an abstract interface to stream …","","","Creates an SDL file stream.","Prepares a read-only memory buffer for use with <code>RWops</code>.","Reads a <code>Read</code> object into a buffer and then passes it to …","Prepares a read-write memory buffer for use with <code>RWops</code>.","Gets the stream’s total size in bytes.","","","","","","","","","","","","","","","","","","","","","","","Standard log function which takes as priority INFO and as …","Audio Functions","","Unsigned 8-bit samples","Signed 8-bit samples","Unsigned 16-bit samples, little-endian","Unsigned 16-bit samples, big-endian","Signed 16-bit samples, little-endian","Signed 16-bit samples, big-endian","Signed 32-bit samples, little-endian","Signed 32-bit samples, big-endian","32-bit floating point samples, little-endian","32-bit floating point samples, big-endian","Unsigned 16-bit samples, native endian","Signed 16-bit samples, native endian","Signed 32-bit samples, native endian","32-bit floating point samples, native endian","","","","","","Gets an iterator of all audio drivers compiled into the …","","","","","Loads a WAVE from the file path.","Loads a WAVE from the data source.","","","","","A phantom type for retreiving the <code>SDL_AudioFormat</code> of a …","","","","DSP frequency (samples per second). Set to None for the …","Number of separate audio channels. Set to None for the …","Audio buffer size in samples (power of 2). Set to None …","","","","","","","","Wraps <code>SDL_AudioDeviceID</code> and owns the callback data used …","Opens a new audio device given the desired parameters and …","","","","Pauses playback of the audio device.","Starts playback of the audio device.","Adds data to the audio queue.","","Clears all data from the current audio queue.","Wraps <code>SDL_AudioDeviceID</code> and owns the callback data used …","Opens a new audio device for playback (given the desired …","Opens a new audio device for capture (given the desired …","","","","Pauses playback of the audio device.","Starts playback of the audio device.","Locks the audio device using <code>SDL_LockAudioDevice</code>.","Closes the audio device and saves the callback data from …","Similar to <code>std::sync::MutexGuard</code>, but for use with …","","","Convert audio data to a desired audio format.","Checks if any conversion is needed. i.e. if the buffer …","Gets the buffer capacity that can contain both the …","Querying SDL Version","A structure that contains information about the version …","major version","minor version","update version (patchlevel)","Convert a raw *SDL_version to Version.","Get the version of SDL that is linked against your …","Get the code revision of SDL that is linked against your …","Get the revision number of SDL that is linked against …","","","","","","Returns an empty set of flags.","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","","","","","Returns an empty set of flags.","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","<code>button_id</code> is the integer that will be returned by …","","","","","","","","","","Second argument of the tuple (i32) corresponds to the …","","Show a simple message box, meant to be informative only.","Show a customizable message box.","","","","","","A hint that specifies whether a fullscreen Window will be …","A hint that specifies whether a fullscreen Window will be …","A hint that specifies whether a fullscreen Window will be …","","","","","","","","","","The SDL context type. Initialize with <code>sdl2::init()</code>.","","","","","","","","A thread-safe type that encapsulates SDL event-pumping …","Initializes the SDL library. This must be called before …","","","","","A given integer was so big that its representation as a C …xample","Example","","","","","Example","Example","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set difference of the two sets of flags.","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","","","","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the intersection between the two sets of flags.","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the union of the two sets of flags.","","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes all events in the event queue that match the …","Removes all events in the event queue that match the …","Reads the events at the front of the event queue, until …","Pushes an event to the event queue.","Register a custom SDL event.","Registers custom SDL events.","Register a custom event","Push a custom event","Query if an event type is enabled.","Enable an event type. Returns if the event type was …","Disable an event type. Returns if the event type was …","Polls for currently pending events.","Returns a polling iterator that calls <code>poll_event()</code>. The …","Pumps the event loop, gathering events from the input …","Waits indefinitely for the next available event.","Waits until the specified timeout (in milliseconds) for …","Returns a waiting iterator that calls <code>wait_event()</code>.","Returns a waiting iterator that calls <code>wait_event_timeout()</code>…","","","","Retreive the total number of attached joysticks <em>and</em> …","Attempt to open the joystick at index <code>joystick_index</code> and …","Return the name of the joystick at index <code>joystick_index</code>.","Get the GUID for the joystick at index <code>joystick_index</code>","If state is <code>true</code> joystick events are processed, otherwise …","Return <code>true</code> if joystick events are processed.","Force joystick update when not using the event loop","Retreive the total number of attached joysticks <em>and</em> …","Return true if the joystick at index <code>joystick_index</code> is a …","Attempt to open the controller ad index <code>joystick_index</code> …","Return the name of the controller at index <code>joystick_index</code>.","If state is <code>true</code> controller events are processed, …","Return <code>true</code> if controller events are processed.","Add a new mapping from a mapping string","Load mappings from a file","","Force controller update when not using the event loop","Attempt to open the joystick at index <code>joystick_index</code> and …","","Gets the virtual key from a scancode. Returns None if …","","","","Gets the scancode from a virtual key. Returns None if …","","","","","","","","Returns true if the left mouse button is pressed.","Tests if the middle mouse button was pressed.","Tests if the right mouse button was pressed.","Tests if the X1 mouse button was pressed.","Tests if the X2 mouse button was pressed.","Returns the x coordinate of the state","Returns the y coordinate of the state","Returns true if the mouse button is pressed.","Returns an iterator all mouse buttons with a boolean …","Returns an iterator of pressed mouse buttons.","","Obtains access to the OpenGL window attributes.","Initializes a new <code>WindowBuilder</code>; a convenience method …","","","Get the name of the display at the index <code>display_name</code>.","","","","","","","Return a triplet <code>(ddpi, hdpi, vdpi)</code> containing the …","","","","Loads the default OpenGL library.","Loads the OpenGL library using a platform-dependent …","Unloads the current OpenGL library.","Gets the pointer to the named OpenGL function.","","","Releases the thread’s current OpenGL context, i.e. sets …","","","Constructs a new timer using the boxed closure <code>callback</code>.","Gets the number of milliseconds elapsed since the timer …","Sleeps the current thread for the specified amount of …","","","Initializes the audio subsystem.","Initializes the event subsystem.","Initializes the joystick subsystem.","Initializes the haptic subsystem.","Initializes the game controller subsystem.","Initializes the timer subsystem.","Initializes the video subsystem.","Obtains the SDL event pump.","Obtain an SDL context.","Obtain an SDL context.","Obtain an SDL context.","Obtain an SDL context.","Obtain an SDL context.","","Obtain an SDL context.","","Obtain an SDL context.","Opens a new audio device given the desired parameters and …","Opens a new audio device for capture (given the desired …","Opens a new audio device which uses queueing rather than …","","",""],"i":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,4,5,4,6,4,7,4,8,4,9,4,10,4,11,4,12,12,12,4,13,13,13,13,13,13,4,14,14,14,14,14,14,4,15,15,15,15,15,4,16,16,16,4,17,17,17,17,17,17,17,17,4,18,18,18,18,18,18,18,4,19,19,19,19,19,19,19,4,20,20,20,20,20,20,4,21,21,21,21,4,22,22,22,22,22,4,23,23,23,23,4,24,24,24,4,25,25,25,4,26,26,4,27,27,4,28,28,28,28,4,29,29,29,4,30,30,30,4,31,31,4,32,32,4,33,33,4,34,34,34,34,34,34,34,34,4,35,35,35,35,35,35,35,35,4,36,36,36,36,36,36,36,36,4,37,37,37,37,37,37,37,4,38,38,38,38,38,38,38,4,39,39,39,39,39,39,39,4,40,4,41,41,4,42,42,42,42,42,42,4,43,43,4,4,0,0,0,0,0,0,44,44,44,0,0,0,0,0,0,0,0,0,0,0,45,45,45,45,45,45,45,45,45,45,45,45,45,0,46,46,46,46,0,47,47,47,47,47,47,47,47,47,47,47,0,0,48,48,48,0,49,49,49,49,49,49,49,49,49,49,0,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,0,51,51,0,52,52,52,52,52,52,52,0,0,53,53,53,0,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,56,56,56,56,56,56,56,56,56,56,56,0,57,57,57,57,0,0,0,58,58,58,0,59,59,59,59,59,59,0,0,0,60,60,60,60,60,60,60,60,60,60,60,60,0,61,61,61,61,0,62,62,62,62,62,0,63,63,63,63,63,63,63,0,64,64,64,64,64,64,64,64,64,64,64,64,64,0,0,0,65,65,65,65,65,65,65,0,0,0,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,0,67,67,67,67,67,67,67,67,0,0,0,0,68,68,68,68,68,68,68,68,68,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,0,0,70,70,70,70,70,0,71,71,71,71,71,71,71,71,71,71,0,72,72,72,72,72,0,73,73,0,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,0,0,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,0,76,76,76,76,76,0,77,77,77,77,75,75,0,78,78,78,0,79,79,79,79,0,80,80,80,80,80,80,80,0,81,81,81,81,0,82,82,82,0,83,0,84,0,85,85,85,0,83,0,86,86,86,86,0,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,0,0,0,0,0,89,0,0,0,90,90,0,91,91,91,0,92,92,92,92,92,0,93,93,93,93,93,92,0,94,94,94,0,95,0,0,96,96,96,96,96,0,96,96,96,96,96,96,96,96,0,0,97,97,97,97,97,97,97,0,98,98,98,98,99,99,99,99,99,99,99,99,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,0,100,100,100,100,0,0,101,101,101,101,101,101,101,0,102,103,103,102,104,104,104,104,102,102,102,102,102,102,105,105,105,105,105,105,105,105,105,105,105,105,105,105,0,0,0,0,106,106,106,106,106,106,106,106,0,0,107,107,107,107,107,107,107,107,107,107,107,0,108,108,108,108,108,108,0,0,0,0,109,109,109,109,109,109,109,109,109,109,109,109,109,109,0,110,110,110,0,0,0,111,111,111,111,111,111,0,112,112,0,113,113,0,114,114,114,0,115,115,115,115,115,115,0,116,116,116,116,116,116,116,116,116,0,117,117,117,117,117,117,117,117,117,0,0,118,118,118,118,0,0,119,119,119,119,0,0,0,0,0,0,0,0,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,121,121,121,121,121,121,121,121,121,121,121,121,0,122,122,122,122,122,0,123,123,123,0,124,124,0,125,125,125,125,0,0,0,0,126,126,126,0,0,0,0,0,0,0,127,127,127,127,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,129,129,129,129,129,129,129,129,130,130,130,130,130,130,130,130,131,131,131,131,131,131,131,131,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,50,51,51,51,51,51,51,51,51,51,52,52,52,52,52,52,52,53,53,53,53,53,53,53,54,54,54,54,54,54,54,54,54,54,55,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,57,57,57,57,57,57,57,132,132,132,132,132,132,132,132,133,133,133,133,133,133,133,133,58,58,58,58,58,58,58,59,59,59,59,59,59,59,134,134,134,134,134,134,134,134,134,60,60,60,60,60,60,60,60,60,61,61,61,61,61,61,61,62,62,62,62,62,62,62,62,62,63,63,63,63,63,63,63,63,63,64,64,64,64,64,64,64,64,64,135,135,135,135,135,135,135,135,136,136,136,136,136,136,136,136,65,65,65,65,65,65,65,66,66,66,66,66,66,66,66,66,67,67,67,67,67,67,67,67,67,137,137,137,137,137,137,137,68,68,68,68,68,68,68,69,69,69,69,69,69,69,70,70,70,70,70,70,70,71,71,71,71,71,71,71,71,71,72,72,72,72,72,72,72,73,73,73,73,73,73,73,74,74,74,74,74,74,74,74,74,75,75,75,75,75,75,75,76,76,76,76,76,76,76,77,77,77,77,77,77,77,78,78,78,78,78,78,78,79,79,79,79,79,79,79,79,79,80,80,80,80,80,80,80,80,80,81,81,81,81,81,81,81,81,81,82,82,82,82,82,82,82,82,82,83,83,83,83,83,83,83,84,84,84,84,84,84,84,85,85,85,85,85,85,85,85,85,88,88,88,88,88,88,88,86,86,86,86,86,86,86,86,87,87,87,87,87,87,87,138,138,138,138,138,138,138,138,138,138,89,89,89,89,89,89,89,139,139,139,139,139,139,139,139,90,90,90,90,90,90,90,90,91,91,91,91,91,91,91,91,91,92,92,92,92,92,92,92,92,92,93,93,93,93,93,93,93,93,93,94,94,94,94,94,94,94,96,96,96,96,96,96,96,99,99,99,99,99,99,99,97,97,97,97,97,97,97,98,98,98,98,98,98,98,98,100,100,100,100,100,100,100,100,100,105,105,105,105,105,105,105,101,101,101,101,101,101,101,101,102,102,102,102,102,102,102,102,140,140,140,140,140,140,140,140,140,140,106,106,106,106,106,106,106,107,107,107,107,107,107,107,107,107,108,108,108,108,108,108,108,108,108,127,127,127,127,127,127,127,127,127,127,141,141,141,141,141,141,141,141,141,142,142,142,142,142,142,142,142,142,143,143,143,143,143,143,143,143,143,144,144,144,144,144,144,144,144,144,145,145,145,145,145,145,145,145,145,146,146,146,146,146,146,146,146,146,147,147,147,147,147,147,147,148,148,148,148,148,148,148,149,149,149,149,149,149,149,109,109,109,109,109,109,109,109,109,110,110,110,110,110,110,110,110,110,150,150,150,150,150,150,150,150,150,150,111,111,111,111,111,111,111,114,114,114,114,114,114,114,114,114,115,115,115,115,115,115,115,115,115,116,116,116,116,116,116,116,117,117,117,117,117,117,117,151,151,151,151,151,151,151,118,118,118,118,118,118,118,118,118,119,119,119,119,119,119,119,119,119,119,120,120,120,120,120,120,120,120,120,121,121,121,121,121,121,121,121,121,122,122,122,122,122,122,122,123,123,123,123,123,123,123,124,124,124,124,124,124,124,125,125,125,125,125,125,125,125,126,126,126,126,126,126,126,128,128,128,128,128,128,128,128,45,52,53,61,137,70,83,84,89,94,105,106,149,111,151,66,67,68,66,67,69,68,66,66,67,67,71,74,85,88,97,122,66,66,67,67,71,74,122,56,120,121,129,130,131,132,133,135,136,138,138,140,140,150,150,2,3,4,46,47,49,50,51,54,55,56,134,60,62,63,64,66,67,71,74,79,80,81,82,85,138,91,92,93,100,140,107,108,127,141,142,143,144,145,146,109,110,150,114,115,118,119,120,121,56,120,121,2,3,3,4,4,46,47,49,50,51,54,55,56,56,134,134,60,62,62,63,64,64,66,67,71,71,74,79,79,80,80,81,82,82,85,91,92,92,93,100,100,107,108,127,109,110,115,115,119,119,120,120,121,121,56,120,121,66,67,68,78,96,151,66,67,68,78,151,2,3,4,44,47,48,49,50,51,54,55,56,60,62,63,66,67,71,74,79,80,81,82,85,86,87,139,90,91,92,93,98,100,101,102,107,108,127,142,143,144,145,146,109,110,115,119,120,121,122,123,124,125,128,44,46,48,54,55,86,139,90,98,101,102,127,119,125,128,67,56,67,120,121,67,67,67,56,120,121,56,120,121,56,66,120,121,56,66,120,121,56,120,121,56,120,121,56,120,121,56,120,121,2,3,47,49,50,51,54,55,56,134,60,62,63,64,71,74,79,80,81,82,85,91,92,93,100,107,108,127,109,110,115,119,120,121,56,120,121,44,48,86,139,90,98,101,102,127,125,128,106,106,106,106,2,2,74,74,91,91,93,93,110,110,71,146,148,148,148,148,148,148,148,148,149,149,149,149,149,149,149,149,149,149,149,149,149,145,145,145,145,145,145,145,143,143,143,143,143,143,143,143,143,143,144,54,54,54,54,55,55,55,55,141,146,134,134,134,134,134,134,134,134,134,134,134,134,134,141,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,147,147,147,147,147,141,141,141,141,141,141,141,141,142,143,144,145,146,147,147,148,148,142,142,142,142,142,142],"f":[null,null,[[["str",15]],[["string",3],["result",4]]],[[],[["string",3],["result",4]]],[[],["bool",15]],null,null,[[],["i32",15]],[[],["i32",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["i32",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],[["option",4],["any",8]]],null,null,null,null,[[],[["string",3],["result",4]]],null,null,null,null,[[["str",15]],[["result",4],["string",3],["prefpatherror",4]]],null,null,null,null,[[],["i32",15]],[[["i32",15]],["touchdevice",6]],[[["touchdevice",6]],["i32",15]],[[["touchdevice",6],["i32",15]],[["finger",6],["option",4]]],null,null,[[],["joysticksubsystem",3]],[[],["string",3]],[[],["bool",15]],[[],["i32",15]],[[],["guid",3]],[[],["u32",15]],[[["u32",15]],[["result",4],["i16",15],["integerorsdlerror",4]]],[[],["u32",15]],[[["u32",15]],[["bool",15],["result",4],["integerorsdlerror",4]]],[[],["u32",15]],[[["u32",15]],[["integerorsdlerror",4],["result",4]]],[[],["u32",15]],[[["u32",15]],[["hatstate",4],["integerorsdlerror",4],["result",4]]],null,[[["str",15]],[["nulerror",3],["guid",3],["result",4]]],[[],["bool",15]],[[],["string",3]],[[],["sdl_joystickguid",3]],null,null,null,null,null,null,null,null,null,null,[[["u8",15]],["hatstate",4]],[[],["u8",15]],null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]],[["option",4],["axis",4]]],[[],["string",3]],[[["sdl_gamecontrolleraxis",4]],[["option",4],["axis",4]]],[[],["sdl_gamecontrolleraxis",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]],[["button",4],["option",4]]],[[],["string",3]],[[["sdl_gamecontrollerbutton",4]],[["button",4],["option",4]]],[[],["sdl_gamecontrollerbutton",4]],null,null,null,null,[[],["gamecontrollersubsystem",3]],[[],["string",3]],[[],["string",3]],[[],["bool",15]],[[],["i32",15]],[[["axis",4]],["i16",15]],[[["button",4]],["bool",15]],null,null,[[],["hapticsubsystem",3]],[[["u32",15],["f32",15]]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["mod",3]],[[],["mod",3]],[[],["u16",15]],[[["u16",15]],[["mod",3],["option",4]]],[[["u16",15]],["mod",3]],[[],["bool",15]],[[],["bool",15]],[[["mod",3]],["bool",15]],[[["mod",3]],["bool",15]],[[["mod",3]]],[[["mod",3]]],[[["mod",3]]],null,[[["eventpump",3]],["keyboardstate",3]],[[["scancode",4]],["bool",15]],[[],["scancodeiterator",3]],[[],["pressedscancodeiterator",3]],null,null,null,[[],[["u32",15],["option",4]]],[[],["mod",3]],[[["mod",3]]],null,[[]],[[],["bool",15]],[[]],[[["rect",3]]],[[],["bool",15]],[[["window",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["i32",15]],[["result",4],["cursor",3],["string",3]]],[[["i32",15],["surfaceref",3],["asref",8]],[["result",4],["cursor",3],["string",3]]],[[["systemcursor",4]],[["result",4],["cursor",3],["string",3]]],[[]],null,null,null,null,[[["u32",15]],["mousewheeldirection",4]],[[],["u32",15]],null,null,null,null,null,null,null,[[["u8",15]],["mousebutton",4]],null,[[["eventpump",3]],["mousestate",3]],[[["u32",15]],["mousestate",3]],[[],["u32",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["i32",15]],[[],["i32",15]],[[["mousebutton",4]],["bool",15]],[[],["mousebuttoniterator",3]],[[],["pressedmousebuttoniterator",3]],null,null,null,[[],[["u32",15],["option",4]]],[[["window",3],["i32",15]]],[[["bool",15]]],[[],["bool",15]],[[],["bool",15]],[[["bool",15]]],[[["bool",15]]],null,[[],["u32",15]],[[],["i32",15]],null,[[["u32",15],["i32",15]],["rect",3]],[[["u32",15]],["rect",3]],[[],["i32",15]],[[],["i32",15]],[[],["u32",15]],[[],["u32",15]],[[]],[[["i32",15]]],[[["i32",15]]],[[["u32",15]]],[[["u32",15]]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["point",3]],[[],["point",3]],[[],["point",3]],[[],["point",3]],[[],["point",3]],[[["i32",15]]],[[["i32",15]]],[[]],[[["i32",15]]],[[]],[[["u32",15]]],[[],["bool",15]],[[],["bool",15]],[[["rect",3]],["bool",15]],[[]],[[]],[[]],[[["sdl_rect",3]],["rect",3]],[[["into",8],["option",4]],[["option",4],["rect",3]]],[[["rect",3]],["bool",15]],[[["rect",3]],[["option",4],["rect",3]]],[[["rect",3]],["rect",3]],[[["point",3]],["option",4]],null,[[["i32",15]],["point",3]],[[["sdl_point",3]],["point",3]],[[]],[[]],[[["i32",15]],["point",3]],[[["i32",15]],["point",3]],[[],["i32",15]],[[],["i32",15]],null,null,null,null,[[],["surface",3]],[[["u32",15],["pixelformatenum",4]],[["surface",3],["string",3],["result",4]]],[[["u32",15],["pixelmasks",3]],[["surface",3],["string",3],["result",4]]],[[["u32",15],["pixelformatenum",4]],[["string",3],["surface",3],["result",4]]],[[["u32",15],["pixelmasks",3]],[["string",3],["surface",3],["result",4]]],[[["rwops",3]],[["surface",3],["string",3],["result",4]]],[[["asref",8],["path",3]],[["surface",3],["string",3],["result",4]]],[[],[["result",4],["string",3],["canvas",3]]],[[],[["rc",3],["surfacecontext",3]]],[[],["surfaceref",3]],[[],["surfaceref",3]],[[]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[]],[[],["rect",3]],[[],["pixelformat",3]],[[],["pixelformatenum",4]],[[["fnonce",8]]],[[["fnonce",8]]],[[],["option",4]],[[],["option",4]],[[],["bool",15]],[[["rwops",3]],[["string",3],["result",4]]],[[["asref",8],["path",3]],[["string",3],["result",4]]],[[["palette",3]],[["string",3],["result",4]]],[[]],[[]],[[["bool",15],["color",3]],[["string",3],["result",4]]],[[],[["string",3],["result",4],["color",3]]],[[["color",3]]],[[],["color",3]],[[["color",3]],[["string",3],["result",4]]],[[["color",3]],[["string",3],["result",4]]],[[["u8",15]]],[[],["u8",15]],[[["blendmode",4]],[["string",3],["result",4]]],[[],["blendmode",4]],[[],["bool",15]],[[],[["option",4],["rect",3]]],[[["pixelformat",3]],[["surface",3],["string",3],["result",4]]],[[["surfaceref",3]],[["string",3],["option",4],["result",4]]],[[["surfaceref",3]],[["string",3],["result",4]]],[[["surfaceref",3]],[["string",3],["option",4],["result",4]]],[[["surfaceref",3]],[["string",3],["result",4]]],null,null,[[["usize",15]],[["result",4],["string",3]]],[[],[["result",4],["string",3]]],[[],["usize",15]],[[],["bool",15]],[[]],null,null,null,null,null,[[["u8",15]],["color",3]],[[["u8",15]],["color",3]],[[["pixelformat",3]],["u32",15]],[[["u32",15],["pixelformat",3]],["color",3]],[[]],[[]],null,null,null,null,null,null,null,[[]],[[],["pixelformat",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["pixelmasks",3]],["pixelformatenum",4]],[[],[["pixelmasks",3],["string",3],["result",4]]],[[["usize",15]],["usize",15]],[[["usize",15]],["usize",15]],[[],["usize",15]],[[],["bool",15]],null,null,null,[[["u8",15]]],[[],["u8",15]],[[["u8",15]]],[[],["u8",15]],[[["u8",15]]],[[],["u8",15]],[[["u8",15]]],[[],["u8",15]],[[["u8",15]]],[[],["u8",15]],[[["bool",15]]],[[],["bool",15]],[[["u8",15]]],[[],["u8",15]],[[["u8",15]]],[[],["u8",15]],[[["u8",15]]],[[],["u8",15]],[[["u8",15]]],[[],["u8",15]],[[["u8",15]]],[[],["u8",15]],[[["u8",15]]],[[],["u8",15]],[[["bool",15]]],[[],["bool",15]],[[["u8",15]]],[[],["u8",15]],[[["u8",15]]],[[],["u8",15]],[[["bool",15]]],[[],["bool",15]],[[["u8",15]]],[[],["u8",15]],[[["u8",15]]],[[],["u8",15]],[[["glprofile",4]]],[[],["glprofile",4]],[[["bool",15]]],[[],["bool",15]],[[["bool",15]]],[[],["bool",15]],[[["u8",15]]],[[]],null,[[]],[[],["contextflagsbuilder",3]],[[],["contextflagsbuilder",3]],[[],["contextflagsbuilder",3]],[[],["contextflagsbuilder",3]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["contextflagsbuilder",3]],[[],["contextflags",3]],null,[[],[["string",3],["result",4]]],[[],[["string",3],["result",4]]],[[],[["string",3],["result",4]]],null,null,null,null,null,null,null,null,null,null,[[["pixelformatenum",4],["i32",15]],["displaymode",3]],[[["sdl_displaymode",3]],["displaymode",3]],[[],["sdl_displaymode",3]],null,null,null,null,[[["u32",15]],["fullscreentype",4]],null,null,null,null,null,[[],["bool",15]],null,[[["videosubsystem",3]],["windowcontext",3]],null,null,null,null,null,[[],["sdl_glcontext",6]],null,null,null,null,null,null,[[["u32",15],["videosubsystem",3],["str",15]],["windowbuilder",3]],[[],[["result",4],["window",3],["windowbuilderror",4]]],[[],["u32",15]],[[["u32",15]],["windowbuilder",3]],[[["i32",15]],["windowbuilder",3]],[[],["windowbuilder",3]],[[],["windowbuilder",3]],[[],["windowbuilder",3]],[[],["windowbuilder",3]],[[],["windowbuilder",3]],[[],["windowbuilder",3]],[[],["windowbuilder",3]],[[],["windowbuilder",3]],[[],["windowbuilder",3]],[[],["windowbuilder",3]],[[],["windowbuilder",3]],[[],["windowbuilder",3]],[[]],[[["videosubsystem",3]],["window",3]],[[["rc",3],["windowcontext",3]],["window",3]],[[],["videosubsystem",3]],[[],["canvasbuilder",3]],[[],[["rc",3],["windowcontext",3]]],[[],["u32",15]],[[],[["string",3],["result",4],["glcontext",3]]],[[],[["string",3],["result",4]]],[[["glcontext",3]],[["string",3],["result",4]]],[[]],[[],[["result",4],["string",3],["i32",15]]],[[],[["string",3],["result",4]]],[[],[["result",4],["string",3],["displaymode",3]]],[[],["pixelformatenum",4]],[[],["u32",15]],[[["str",15]],[["nulerror",3],["result",4]]],[[],["str",15]],[[["surfaceref",3],["asref",8]]],[[["windowpos",4]]],[[]],[[["u32",15]],[["integerorsdlerror",4],["result",4]]],[[]],[[]],[[["u32",15]],[["integerorsdlerror",4],["result",4]]],[[]],[[["u32",15]],[["integerorsdlerror",4],["result",4]]],[[]],[[["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["fullscreentype",4]],[[["fullscreentype",4]],[["string",3],["result",4]]],[[["eventpump",3]],[["string",3],["windowsurfaceref",3],["result",4]]],[[["bool",15]]],[[],["bool",15]],[[["f64",15]],[["string",3],["result",4]]],[[],["f64",15]],[[],[["string",3],["result",4]]],[[],[["string",3],["result",4]]],null,[[],["driveriterator",3]],null,null,null,[[],["timercallback",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["sdl_rendererinfo",3]],["rendererinfo",3]],null,[[],["rendererinfo",3]],[[]],[[["rc",3]]],null,null,null,null,[[["surface",3]],[["result",4],["string",3]]],[[],["surfaceref",3]],[[],["surfaceref",3]],[[],["surface",3]],[[],[["texturecreator",3],["surfacecontext",3]]],null,[[],["window",3]],[[],["window",3]],[[],["window",3]],[[],["pixelformatenum",4]],[[],[["windowcontext",3],["texturecreator",3]]],[[],["bool",15]],[[["texture",3]],[["result",4],["targetrendererror",4]]],[[],[["result",4],["targetrendererror",4]]],null,null,[[["window",3]],["canvasbuilder",3]],[[],[["result",4],["windowcanvas",6],["integerorsdlerror",4]]],[[["u32",15]],["canvasbuilder",3]],[[],["canvasbuilder",3]],[[],["canvasbuilder",3]],[[],["canvasbuilder",3]],[[],["canvasbuilder",3]],null,null,null,null,null,[[]],[[],["pixelformatenum",4]],[[["u32",15],["textureaccess",4]],[["result",4],["texture",3],["texturevalueerror",4]]],[[["u32",15]],[["result",4],["texture",3],["texturevalueerror",4]]],[[["u32",15]],[["result",4],["texture",3],["texturevalueerror",4]]],[[["u32",15]],[["result",4],["texture",3],["texturevalueerror",4]]],[[["surfaceref",3],["asref",8]],[["result",4],["texture",3],["texturevalueerror",4]]],[[],["texture",3]],[[]],[[["color",3]]],[[],["color",3]],[[["blendmode",4]]],[[],["blendmode",4]],[[]],[[]],[[],[["string",3],["result",4]]],[[["u32",15]],[["integerorsdlerror",4],["result",4]]],[[]],[[["into",8],["option",4]]],[[],["rect",3]],[[["into",8],["option",4]]],[[],[["option",4],["rect",3]]],[[["f32",15]],[["string",3],["result",4]]],[[]],[[["into",8],["point",3]],[["string",3],["result",4]]],[[["into",8]],[["string",3],["result",4]]],[[["into",8],["point",3]],[["string",3],["result",4]]],[[["into",8]],[["string",3],["result",4]]],[[["rect",3]],[["string",3],["result",4]]],[[],[["string",3],["result",4]]],[[["into",8],["option",4]],[["string",3],["result",4]]],[[],[["string",3],["result",4]]],[[["texture",3]],[["string",3],["result",4]]],[[["f64",15],["bool",15],["texture",3]],[["string",3],["result",4]]],[[["into",8],["option",4],["pixelformatenum",4]],[["string",3],["vec",3],["result",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["texturequery",3]],[[["u8",15]]],[[]],[[["u8",15]]],[[],["u8",15]],[[["blendmode",4]]],[[],["blendmode",4]],[[["usize",15]],[["result",4],["updatetextureerror",4]]],[[["usize",15]],[["updatetextureyuverror",4],["result",4]]],[[],[["result",4],["string",3]]],[[]],[[]],[[["fnonce",8]]],[[]],null,[[],["driveriterator",3]],null,null,[[]],[[],["rwops",3]],[[["str",15],["asref",8],["path",3]],[["result",4],["rwops",3],["string",3]]],[[],[["string",3],["rwops",3],["result",4]]],[[["vec",3]],[["string",3],["rwops",3],["result",4]]],[[],[["string",3],["rwops",3],["result",4]]],[[],[["usize",15],["option",4]]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["str",15]]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["audioformat",4]],[[],["audioformat",4]],[[],["audioformat",4]],[[],["audioformat",4]],null,null,null,null,null,[[],["driveriterator",3]],null,null,null,null,[[["asref",8],["path",3]],[["audiospecwav",3],["string",3],["result",4]]],[[["rwops",3]],[["audiospecwav",3],["string",3],["result",4]]],[[]],null,null,[[]],null,[[],["audioformat",4]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[["audiospecdesired",3],["into",8],["option",4],["audiosubsystem",3]],[["string",3],["audioqueue",3],["result",4]]],[[],["audiosubsystem",3]],[[],["audiospec",3]],[[],["audiostatus",4]],[[]],[[]],[[],["bool",15]],[[],["u32",15]],[[]],null,[[["audiospecdesired",3],["audiosubsystem",3]],[["audiodevice",3],["string",3],["result",4]]],[[["audiospecdesired",3],["audiosubsystem",3]],[["audiodevice",3],["string",3],["result",4]]],[[],["audiosubsystem",3]],[[],["audiospec",3]],[[],["audiostatus",4]],[[]],[[]],[[],["audiodevicelockguard",3]],[[]],null,null,[[["audioformat",4],["i32",15],["u8",15]],[["audiocvt",3],["string",3],["result",4]]],[[["vec",3],["u8",15]],[["vec",3],["u8",15]]],[[],["bool",15]],[[["usize",15]],["usize",15]],null,null,null,null,null,[[["sdl_version",3]],["version",3]],[[],["version",3]],[[],["string",3]],[[],["i32",15]],null,null,null,null,null,[[],["messageboxflag",3]],[[],["messageboxflag",3]],[[],["u32",15]],[[["u32",15]],[["option",4],["messageboxflag",3]]],[[["u32",15]],["messageboxflag",3]],[[],["bool",15]],[[],["bool",15]],[[["messageboxflag",3]],["bool",15]],[[["messageboxflag",3]],["bool",15]],[[["messageboxflag",3]]],[[["messageboxflag",3]]],[[["messageboxflag",3]]],null,null,null,null,[[],["messageboxbuttonflag",3]],[[],["messageboxbuttonflag",3]],[[],["u32",15]],[[["u32",15]],[["messageboxbuttonflag",3],["option",4]]],[[["u32",15]],["messageboxbuttonflag",3]],[[],["bool",15]],[[],["bool",15]],[[["messageboxbuttonflag",3]],["bool",15]],[[["messageboxbuttonflag",3]],["bool",15]],[[["messageboxbuttonflag",3]]],[[["messageboxbuttonflag",3]]],[[["messageboxbuttonflag",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15],["messageboxflag",3]],[["result",4],["showmessageerror",4]]],[[["str",15],["messageboxflag",3]],[["clickedbutton",4],["result",4],["showmessageerror",4]]],null,null,null,null,null,[[["bool",15]],["bool",15]],[[["bool",15],["hint",4]],["bool",15]],[[],["bool",15]],[[["str",15]],["bool",15]],[[["str",15]],[["string",3],["option",4]]],[[["hint",4],["str",15]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["sdl",3],["result",4],["string",3]]],[[],["string",3]],[[["str",15]],[["nulerror",3],["result",4]]],[[["error",4]]],[[]],null,null,null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["sdl_rect",3]],[[],["sdl_point",3]],[[],["surfaceref",3]],[[],["sdl_rect",3]],[[],["sdl_point",3]],[[],["surfaceref",3]],[[],["surfaceref",3]],[[["sdl_rect",3]],["rect",3]],[[],["rect",3]],[[["sdl_point",3]],["point",3]],[[],["point",3]],[[["sdl_color",3]],["color",3]],[[["pixelformat",3]],["pixelformatenum",4]],[[["i32",15]]],[[["windowcontext",3]],["window",3]],[[["window",3]],["canvasbuilder",3]],[[["sdl_messageboxcolorscheme",3]],["messageboxcolorscheme",3]],[[],["sdl_rect",3]],[[]],[[],["sdl_point",3]],[[]],[[],["sdl_color",3]],[[],["uint32_t",6]],[[],["sdl_messageboxcolorscheme",3]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[],[["option",4],["event",4]]],[[],[["option",4],["event",4]]],[[],[["option",4],["event",4]]],[[],["option",4]],[[],[["option",4],["scancode",4]]],[[],["option",4]],[[],[["option",4],["mousebutton",4]]],[[],[["str",15],["option",4]]],[[]],[[],[["option",4],["rendererinfo",3]]],[[]],[[],[["str",15],["option",4]]],[[]],[[],["eventtype",4]],[[],["windowevent",4]],[[],["event",4]],[[],["guid",3]],[[],["hatstate",4]],[[],["axis",4]],[[],["button",4]],[[],["mappingstatus",4]],[[],["keycode",4]],[[],["scancode",4]],[[],["mod",3]],[[],["relativemousestate",3]],[[],["systemcursor",4]],[[],["mousewheeldirection",4]],[[],["mousebutton",4]],[[],["mousestate",3]],[[],["rect",3]],[[],["point",3]],[[],["color",3]],[[],["pixelformatenum",4]],[[],["glprofile",4]],[[],["displaymode",3]],[[],["fullscreentype",4]],[[],["windowpos",4]],[[],["swapinterval",4]],[[],["driveriterator",3]],[[],["textureaccess",4]],[[],["rendererinfo",3]],[[],["blendmode",4]],[[],["texturequery",3]],[[],["driveriterator",3]],[[],["category",4]],[[],["priority",4]],[[],["error",4]],[[],["sdl",3]],[[],["audiosubsystem",3]],[[],["gamecontrollersubsystem",3]],[[],["hapticsubsystem",3]],[[],["joysticksubsystem",3]],[[],["videosubsystem",3]],[[],["audioformat",4]],[[],["audiostatus",4]],[[],["driveriterator",3]],[[],["audiospecdesired",3]],[[],["audiospec",3]],[[],["audiocvt",3]],[[],["version",3]],[[],["messageboxflag",3]],[[],["messageboxbuttonflag",3]],[[["mod",3]],["ordering",4]],[[["messageboxflag",3]],["ordering",4]],[[["messageboxbuttonflag",3]],["ordering",4]],[[["eventtype",4]],["bool",15]],[[["windowevent",4]],["bool",15]],[[["windowevent",4]],["bool",15]],[[["event",4]],["bool",15]],[[["event",4]],["bool",15]],[[["guid",3]],["bool",15]],[[["hatstate",4]],["bool",15]],[[["axis",4]],["bool",15]],[[["button",4]],["bool",15]],[[["mappingstatus",4]],["bool",15]],[[["keycode",4]],["bool",15]],[[["scancode",4]],["bool",15]],[[["mod",3]],["bool",15]],[[["mod",3]],["bool",15]],[[["relativemousestate",3]],["bool",15]],[[["relativemousestate",3]],["bool",15]],[[["systemcursor",4]],["bool",15]],[[["mousewheeldirection",4]],["bool",15]],[[["mousewheeldirection",4]],["bool",15]],[[["mousebutton",4]],["bool",15]],[[["mousestate",3]],["bool",15]],[[["mousestate",3]],["bool",15]],[[["rect",3]],["bool",15]],[[["point",3]],["bool",15]],[[["color",3]],["bool",15]],[[["color",3]],["bool",15]],[[["pixelformatenum",4]],["bool",15]],[[["glprofile",4]],["bool",15]],[[["glprofile",4]],["bool",15]],[[["displaymode",3]],["bool",15]],[[["displaymode",3]],["bool",15]],[[["fullscreentype",4]],["bool",15]],[[["windowpos",4]],["bool",15]],[[["windowpos",4]],["bool",15]],[[["swapinterval",4]],["bool",15]],[[["textureaccess",4]],["bool",15]],[[["rendererinfo",3]],["bool",15]],[[["rendererinfo",3]],["bool",15]],[[["blendmode",4]],["bool",15]],[[["texturequery",3]],["bool",15]],[[["texturequery",3]],["bool",15]],[[["category",4]],["bool",15]],[[["priority",4]],["bool",15]],[[["error",4]],["bool",15]],[[["audioformat",4]],["bool",15]],[[["audiostatus",4]],["bool",15]],[[["audiospec",3]],["bool",15]],[[["audiospec",3]],["bool",15]],[[["version",3]],["bool",15]],[[["version",3]],["bool",15]],[[["messageboxflag",3]],["bool",15]],[[["messageboxflag",3]],["bool",15]],[[["messageboxbuttonflag",3]],["bool",15]],[[["messageboxbuttonflag",3]],["bool",15]],[[["mod",3]],[["ordering",4],["option",4]]],[[["messageboxflag",3]],[["ordering",4],["option",4]]],[[["messageboxbuttonflag",3]],[["ordering",4],["option",4]]],[[],["sdl_rect",3]],[[],["sdl_point",3]],[[],["surfaceref",3]],[[],["surfaceref",3]],[[],["renderercontext",3]],[[]],[[],["sdl_rect",3]],[[],["sdl_point",3]],[[],["surfaceref",3]],[[],["surfaceref",3]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["i32",15]],["point",3]],[[["mod",3]],["mod",3]],[[["point",3]],["point",3]],[[["messageboxflag",3]],["messageboxflag",3]],[[["messageboxbuttonflag",3]],["messageboxbuttonflag",3]],[[["point",3]],["point",3]],[[["i32",15]],["point",3]],[[],["point",3]],[[["mod",3]]],[[["messageboxflag",3]]],[[["messageboxbuttonflag",3]]],[[],["mod",3]],[[],["messageboxflag",3]],[[],["messageboxbuttonflag",3]],[[["mod",3]],["mod",3]],[[["rect",3]],[["option",4],["rect",3]]],[[["messageboxflag",3]],["messageboxflag",3]],[[["messageboxbuttonflag",3]],["messageboxbuttonflag",3]],[[["mod",3]],["mod",3]],[[["rect",3]],["rect",3]],[[["messageboxflag",3]],["messageboxflag",3]],[[["messageboxbuttonflag",3]],["messageboxbuttonflag",3]],[[["mod",3]],["mod",3]],[[["messageboxflag",3]],["messageboxflag",3]],[[["messageboxbuttonflag",3]],["messageboxbuttonflag",3]],[[["mod",3]]],[[["messageboxflag",3]]],[[["messageboxbuttonflag",3]]],[[["mod",3]]],[[["messageboxflag",3]]],[[["messageboxbuttonflag",3]]],[[["mod",3]]],[[["messageboxflag",3]]],[[["messageboxbuttonflag",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intoiterator",8]],["mod",3]],[[["intoiterator",8]],["messageboxflag",3]],[[["intoiterator",8]],["messageboxbuttonflag",3]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],[["usize",15],["result",6]]],[[["seekfrom",4]],[["result",6],["u64",15]]],[[],[["usize",15],["result",6]]],[[],["result",6]],[[["i64",15]],[["option",4],["eventtype",4]]],[[["u64",15]],[["option",4],["eventtype",4]]],[[["i64",15]],[["pixelformatenum",4],["option",4]]],[[["u64",15]],[["pixelformatenum",4],["option",4]]],[[["i64",15]],[["option",4],["textureaccess",4]]],[[["u64",15]],[["option",4],["textureaccess",4]]],[[["i64",15]],[["option",4],["blendmode",4]]],[[["u64",15]],[["option",4],["blendmode",4]]],[[["i64",15]],[["audiostatus",4],["option",4]]],[[["u64",15]],[["audiostatus",4],["option",4]]],[[],["color",3]],[[],["clipboardutil",3]],[[["eventtype",4]]],[[["u32",15]]],[[["u32",15]]],[[["event",4]],[["string",3],["result",4]]],[[],[["u32",15],["string",3],["result",4]]],[[["u32",15]],[["result",4],["vec",3],["string",3]]],[[],[["string",3],["result",4]]],[[["any",8]],[["string",3],["result",4]]],[[["eventtype",4]],["bool",15]],[[["eventtype",4]],["bool",15]],[[["eventtype",4]],["bool",15]],[[],[["option",4],["event",4]]],[[],["eventpolliterator",3]],[[]],[[],["event",4]],[[["u32",15]],[["option",4],["event",4]]],[[],["eventwaititerator",3]],[[["u32",15]],["eventwaittimeoutiterator",3]],[[],["keyboardstate",3]],[[],["mousestate",3]],[[],["relativemousestate",3]],[[],[["u32",15],["string",3],["result",4]]],[[["u32",15]],[["joystick",3],["result",4],["integerorsdlerror",4]]],[[["u32",15]],[["string",3],["integerorsdlerror",4],["result",4]]],[[["u32",15]],[["result",4],["guid",3],["integerorsdlerror",4]]],[[["bool",15]]],[[],["bool",15]],[[]],[[],[["u32",15],["string",3],["result",4]]],[[["u32",15]],["bool",15]],[[["u32",15]],[["result",4],["gamecontroller",3],["integerorsdlerror",4]]],[[["u32",15]],[["string",3],["integerorsdlerror",4],["result",4]]],[[["bool",15]]],[[],["bool",15]],[[["str",15]],[["result",4],["addmappingerror",4],["mappingstatus",4]]],[[["asref",8],["path",3]],[["i32",15],["addmappingerror",4],["result",4]]],[[["guid",3]],[["string",3],["result",4]]],[[]],[[["u32",15]],[["integerorsdlerror",4],["haptic",3],["result",4]]],[[["i32",15]],[["option",4],["keycode",4]]],[[["scancode",4]],[["option",4],["keycode",4]]],[[["str",15]],[["option",4],["keycode",4]]],[[],["string",3]],[[["i32",15]],[["option",4],["scancode",4]]],[[["keycode",4]],[["option",4],["scancode",4]]],[[["str",15]],[["option",4],["scancode",4]]],[[],["str",15]],[[],["keyboardutil",3]],[[],["textinpututil",3]],[[["eventpump",3]],["relativemousestate",3]],[[["u32",15]],["relativemousestate",3]],[[],["u32",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["i32",15]],[[],["i32",15]],[[["mousebutton",4]],["bool",15]],[[],["mousebuttoniterator",3]],[[],["pressedmousebuttoniterator",3]],[[],["mouseutil",3]],[[],["glattr",3]],[[["u32",15],["str",15]],["windowbuilder",3]],[[],["str",15]],[[],[["result",4],["string",3],["i32",15]]],[[["i32",15]],[["string",3],["result",4]]],[[["i32",15]],[["string",3],["rect",3],["result",4]]],[[["i32",15]],[["result",4],["string",3],["i32",15]]],[[["i32",15]],[["result",4],["string",3],["displaymode",3]]],[[["i32",15]],[["result",4],["string",3],["displaymode",3]]],[[["i32",15]],[["result",4],["string",3],["displaymode",3]]],[[["displaymode",3],["i32",15]],[["result",4],["string",3],["displaymode",3]]],[[["i32",15]],[["result",4],["string",3]]],[[],["bool",15]],[[]],[[]],[[],[["string",3],["result",4]]],[[["asref",8],["path",3]],[["string",3],["result",4]]],[[]],[[["str",15]]],[[["str",15]],["bool",15]],[[],[["u32",15],["string",3],["result",4]]],[[],[["string",3],["result",4]]],[[["swapinterval",4],["into",8]],["bool",15]],[[],["swapinterval",4]],[[["u32",15],["timercallback",6]],["timer",3]],[[],["u32",15]],[[["u32",15]]],[[],["u64",15]],[[],["u64",15]],[[],[["result",4],["string",3],["audiosubsystem",3]]],[[],[["string",3],["result",4],["eventsubsystem",3]]],[[],[["string",3],["result",4],["joysticksubsystem",3]]],[[],[["result",4],["string",3],["hapticsubsystem",3]]],[[],[["result",4],["gamecontrollersubsystem",3],["string",3]]],[[],[["string",3],["result",4],["timersubsystem",3]]],[[],[["videosubsystem",3],["result",4],["string",3]]],[[],[["string",3],["result",4],["eventpump",3]]],[[],["sdl",3]],[[],["sdl",3]],[[],["sdl",3]],[[],["sdl",3]],[[],["sdl",3]],[[],["timersubsystem",3]],[[],["sdl",3]],[[],["eventsubsystem",3]],[[],["sdl",3]],[[["audiospecdesired",3]],[["audiodevice",3],["string",3],["result",4]]],[[["audiospecdesired",3]],[["audiodevice",3],["string",3],["result",4]]],[[["audiospecdesired",3]],[["string",3],["audioqueue",3],["result",4]]],[[],["str",15]],[[],[["u32",15],["option",4]]],[[["u32",15]],[["string",3],["result",4]]]],"p":[[3,"ClipboardUtil"],[4,"EventType"],[4,"WindowEvent"],[4,"Event"],[13,"Quit"],[13,"AppTerminating"],[13,"AppLowMemory"],[13,"AppWillEnterBackground"],[13,"AppDidEnterBackground"],[13,"AppWillEnterForeground"],[13,"AppDidEnterForeground"],[13,"Window"],[13,"KeyDown"],[13,"KeyUp"],[13,"TextEditing"],[13,"TextInput"],[13,"MouseMotion"],[13,"MouseButtonDown"],[13,"MouseButtonUp"],[13,"MouseWheel"],[13,"JoyAxisMotion"],[13,"JoyBallMotion"],[13,"JoyHatMotion"],[13,"JoyButtonDown"],[13,"JoyButtonUp"],[13,"JoyDeviceAdded"],[13,"JoyDeviceRemoved"],[13,"ControllerAxisMotion"],[13,"ControllerButtonDown"],[13,"ControllerButtonUp"],[13,"ControllerDeviceAdded"],[13,"ControllerDeviceRemoved"],[13,"ControllerDeviceRemapped"],[13,"FingerDown"],[13,"FingerUp"],[13,"FingerMotion"],[13,"DollarGesture"],[13,"DollarRecord"],[13,"MultiGesture"],[13,"ClipboardUpdate"],[13,"DropFile"],[13,"User"],[13,"Unknown"],[4,"PrefPathError"],[3,"Joystick"],[3,"Guid"],[4,"HatState"],[4,"AddMappingError"],[4,"Axis"],[4,"Button"],[4,"MappingStatus"],[3,"GameController"],[3,"Haptic"],[4,"Keycode"],[4,"Scancode"],[3,"Mod"],[3,"KeyboardState"],[3,"KeyboardUtil"],[3,"TextInputUtil"],[4,"SystemCursor"],[3,"Cursor"],[4,"MouseWheelDirection"],[4,"MouseButton"],[3,"MouseState"],[3,"MouseUtil"],[3,"Rect"],[3,"Point"],[3,"Surface"],[3,"SurfaceRef"],[3,"Palette"],[3,"Color"],[3,"PixelMasks"],[3,"PixelFormat"],[4,"PixelFormatEnum"],[3,"GLAttr"],[3,"ContextFlagsBuilder"],[3,"ContextFlags"],[3,"WindowSurfaceRef"],[4,"GLProfile"],[3,"DisplayMode"],[4,"FullscreenType"],[4,"WindowPos"],[3,"GLContext"],[3,"WindowContext"],[4,"SwapInterval"],[4,"WindowBuildError"],[3,"WindowBuilder"],[3,"Window"],[3,"Timer"],[4,"TargetRenderError"],[4,"TextureAccess"],[3,"RendererInfo"],[4,"BlendMode"],[3,"RendererContext"],[8,"RenderTarget"],[3,"Canvas"],[3,"CanvasBuilder"],[4,"TextureValueError"],[3,"TextureCreator"],[3,"TextureQuery"],[4,"UpdateTextureError"],[4,"UpdateTextureYUVError"],[13,"PitchOverflows"],[13,"InvalidPlaneLength"],[3,"Texture"],[3,"RWops"],[4,"Category"],[4,"Priority"],[4,"AudioFormat"],[4,"AudioStatus"],[3,"AudioSpecWAV"],[8,"AudioCallback"],[8,"AudioFormatNum"],[3,"AudioSpecDesired"],[3,"AudioSpec"],[3,"AudioQueue"],[3,"AudioDevice"],[3,"AudioCVT"],[3,"Version"],[3,"MessageBoxFlag"],[3,"MessageBoxButtonFlag"],[3,"MessageBoxColorScheme"],[3,"ButtonData"],[4,"ClickedButton"],[4,"ShowMessageError"],[4,"Hint"],[4,"Error"],[4,"IntegerOrSdlError"],[3,"EventPollIterator"],[3,"EventWaitIterator"],[3,"EventWaitTimeoutIterator"],[3,"ScancodeIterator"],[3,"PressedScancodeIterator"],[3,"RelativeMouseState"],[3,"MouseButtonIterator"],[3,"PressedMouseButtonIterator"],[3,"SurfaceContext"],[3,"DriverIterator"],[3,"SdlError"],[3,"DriverIterator"],[3,"Sdl"],[3,"AudioSubsystem"],[3,"GameControllerSubsystem"],[3,"HapticSubsystem"],[3,"JoystickSubsystem"],[3,"VideoSubsystem"],[3,"TimerSubsystem"],[3,"EventSubsystem"],[3,"EventPump"],[3,"DriverIterator"],[3,"AudioDeviceLockGuard"]]},\
"sdl2_sys":{"doc":"","tn":["SDL_GetPlatform","SDL_malloc","SDL_calloc","SDL_realloc","SDL_free","SDL_getenv","SDL_setenv","SDL_qsort","SDL_abs","SDL_isdigit","SDL_isspace","SDL_toupper","SDL_tolower","SDL_memset","SDL_memcpy","SDL_memmove","SDL_memcmp","SDL_wcslen","SDL_wcslcpy","SDL_wcslcat","SDL_wcscmp","SDL_strlen","SDL_strlcpy","SDL_utf8strlcpy","SDL_strlcat","SDL_strdup","SDL_strrev","SDL_strupr","SDL_strlwr","SDL_strchr","SDL_strrchr","SDL_strstr","SDL_utf8strlen","SDL_itoa","SDL_uitoa","SDL_ltoa","SDL_ultoa","SDL_lltoa","SDL_ulltoa","SDL_atoi","SDL_atof","SDL_strtol","SDL_strtoul","SDL_strtoll","SDL_strtoull","SDL_strtod","SDL_strcmp","SDL_strncmp","SDL_strcasecmp","SDL_strncasecmp","SDL_sscanf","SDL_vsscanf","SDL_snprintf","SDL_vsnprintf","SDL_acos","SDL_asin","SDL_atan","SDL_atan2","SDL_ceil","SDL_copysign","SDL_cos","SDL_cosf","SDL_fabs","SDL_floor","SDL_log","SDL_pow","SDL_scalbn","SDL_sin","SDL_sinf","SDL_sqrt","SDL_sqrtf","SDL_tan","SDL_tanf","SDL_iconv_open","SDL_iconv_close","SDL_iconv","SDL_iconv_string","SDL_main","SDL_SetMainReady","SDL_ReportAssertion","SDL_SetAssertionHandler","SDL_GetDefaultAssertionHandler","SDL_GetAssertionHandler","SDL_GetAssertionReport","SDL_ResetAssertionReport","SDL_AtomicTryLock","SDL_AtomicLock","SDL_AtomicUnlock","SDL_MemoryBarrierReleaseFunction","SDL_MemoryBarrierAcquireFunction","SDL_AtomicCAS","SDL_AtomicSet","SDL_AtomicGet","SDL_AtomicAdd","SDL_AtomicCASPtr","SDL_AtomicSetPtr","SDL_AtomicGetPtr","SDL_SetError","SDL_GetError","SDL_ClearError","SDL_Error","SDL_CreateMutex","SDL_LockMutex","SDL_TryLockMutex","SDL_UnlockMutex","SDL_DestroyMutex","SDL_CreateSemaphore","SDL_DestroySemaphore","SDL_SemWait","SDL_SemTryWait","SDL_SemWaitTimeout","SDL_SemPost","SDL_SemValue","SDL_CreateCond","SDL_DestroyCond","SDL_CondSignal","SDL_CondBroadcast","SDL_CondWait","SDL_CondWaitTimeout","SDL_CreateThread","SDL_GetThreadName","SDL_ThreadID","SDL_GetThreadID","SDL_SetThreadPriority","SDL_WaitThread","SDL_DetachThread","SDL_TLSCreate","SDL_TLSGet","SDL_TLSSet","SDL_RWFromFile","SDL_RWFromFP","SDL_RWFromMem","SDL_RWFromConstMem","SDL_AllocRW","SDL_FreeRW","SDL_LoadFile_RW","SDL_ReadU8","SDL_ReadLE16","SDL_ReadBE16","SDL_ReadLE32","SDL_ReadBE32","SDL_ReadLE64","SDL_ReadBE64","SDL_WriteU8","SDL_WriteLE16","SDL_WriteBE16","SDL_WriteLE32","SDL_WriteBE32","SDL_WriteLE64","SDL_WriteBE64","SDL_GetNumAudioDrivers","SDL_GetAudioDriver","SDL_AudioInit","SDL_AudioQuit","SDL_GetCurrentAudioDriver","SDL_OpenAudio","SDL_GetNumAudioDevices","SDL_GetAudioDeviceName","SDL_OpenAudioDevice","SDL_GetAudioStatus","SDL_GetAudioDeviceStatus","SDL_PauseAudio","SDL_PauseAudioDevice","SDL_LoadWAV_RW","SDL_FreeWAV","SDL_BuildAudioCVT","SDL_ConvertAudio","SDL_MixAudio","SDL_MixAudioFormat","SDL_QueueAudio","SDL_DequeueAudio","SDL_GetQueuedAudioSize","SDL_ClearQueuedAudio","SDL_LockAudio","SDL_LockAudioDevice","SDL_UnlockAudio","SDL_UnlockAudioDevice","SDL_CloseAudio","SDL_CloseAudioDevice","SDL_SetClipboardText","SDL_GetClipboardText","SDL_HasClipboardText","__ctype_get_mb_cur_max","atof","atoi","atol","atoll","strtod","strtof","strtold","strtol","strtoul","strtoq","strtouq","strtoll","strtoull","l64a","a64l","select","pselect","gnu_dev_major","gnu_dev_minor","gnu_dev_makedev","random","srandom","initstate","setstate","random_r","srandom_r","initstate_r","setstate_r","rand","srand","rand_r","drand48","erand48","lrand48","nrand48","mrand48","jrand48","srand48","seed48","lcong48","drand48_r","erand48_r","lrand48_r","nrand48_r","mrand48_r","jrand48_r","srand48_r","seed48_r","lcong48_r","malloc","calloc","realloc","free","alloca","valloc","posix_memalign","aligned_alloc","abort","atexit","at_quick_exit","on_exit","exit","quick_exit","_Exit","getenv","putenv","setenv","unsetenv","clearenv","mktemp","mkstemp","mkstemps","mkdtemp","system","realpath","bsearch","qsort","abs","labs","llabs","div","ldiv","lldiv","ecvt","fcvt","gcvt","qecvt","qfcvt","qgcvt","ecvt_r","fcvt_r","qecvt_r","qfcvt_r","mblen","mbtowc","wctomb","mbstowcs","wcstombs","rpmatch","getsubopt","getloadavg","_mm_sfence","_mm_getcsr","_mm_setcsr","_mm_clflush","_mm_lfence","_mm_mfence","_mm_pause","SDL_GetCPUCount","SDL_GetCPUCacheLineSize","SDL_HasRDTSC","SDL_HasAltiVec","SDL_HasMMX","SDL_Has3DNow","SDL_HasSSE","SDL_HasSSE2","SDL_HasSSE3","SDL_HasSSE41","SDL_HasSSE42","SDL_HasAVX","SDL_HasAVX2","SDL_HasNEON","SDL_GetSystemRAM","SDL_GetPixelFormatName","SDL_PixelFormatEnumToMasks","SDL_MasksToPixelFormatEnum","SDL_AllocFormat","SDL_FreeFormat","SDL_AllocPalette","SDL_SetPixelFormatPalette","SDL_SetPaletteColors","SDL_FreePalette","SDL_MapRGB","SDL_MapRGBA","SDL_GetRGB","SDL_GetRGBA","SDL_CalculateGammaRamp","SDL_HasIntersection","SDL_IntersectRect","SDL_UnionRect","SDL_EnclosePoints","SDL_IntersectRectAndLine","SDL_ComposeCustomBlendMode","SDL_CreateRGBSurface","SDL_CreateRGBSurfaceWithFormat","SDL_CreateRGBSurfaceFrom","SDL_CreateRGBSurfaceWithFormatFrom","SDL_FreeSurface","SDL_SetSurfacePalette","SDL_LockSurface","SDL_UnlockSurface","SDL_LoadBMP_RW","SDL_SaveBMP_RW","SDL_SetSurfaceRLE","SDL_SetColorKey","SDL_GetColorKey","SDL_SetSurfaceColorMod","SDL_GetSurfaceColorMod","SDL_SetSurfaceAlphaMod","SDL_GetSurfaceAlphaMod","SDL_SetSurfaceBlendMode","SDL_GetSurfaceBlendMode","SDL_SetClipRect","SDL_GetClipRect","SDL_DuplicateSurface","SDL_ConvertSurface","SDL_ConvertSurfaceFormat","SDL_ConvertPixels","SDL_FillRect","SDL_FillRects","SDL_UpperBlit","SDL_LowerBlit","SDL_SoftStretch","SDL_UpperBlitScaled","SDL_LowerBlitScaled","SDL_GetNumVideoDrivers","SDL_GetVideoDriver","SDL_VideoInit","SDL_VideoQuit","SDL_GetCurrentVideoDriver","SDL_GetNumVideoDisplays","SDL_GetDisplayName","SDL_GetDisplayBounds","SDL_GetDisplayDPI","SDL_GetDisplayUsableBounds","SDL_GetNumDisplayModes","SDL_GetDisplayMode","SDL_GetDesktopDisplayMode","SDL_GetCurrentDisplayMode","SDL_GetClosestDisplayMode","SDL_GetWindowDisplayIndex","SDL_SetWindowDisplayMode","SDL_GetWindowDisplayMode","SDL_GetWindowPixelFormat","SDL_CreateWindow","SDL_CreateWindowFrom","SDL_GetWindowID","SDL_GetWindowFromID","SDL_GetWindowFlags","SDL_SetWindowTitle","SDL_GetWindowTitle","SDL_SetWindowIcon","SDL_SetWindowData","SDL_GetWindowData","SDL_SetWindowPosition","SDL_GetWindowPosition","SDL_SetWindowSize","SDL_GetWindowSize","SDL_GetWindowBordersSize","SDL_SetWindowMinimumSize","SDL_GetWindowMinimumSize","SDL_SetWindowMaximumSize","SDL_GetWindowMaximumSize","SDL_SetWindowBordered","SDL_SetWindowResizable","SDL_ShowWindow","SDL_HideWindow","SDL_RaiseWindow","SDL_MaximizeWindow","SDL_MinimizeWindow","SDL_RestoreWindow","SDL_SetWindowFullscreen","SDL_GetWindowSurface","SDL_UpdateWindowSurface","SDL_UpdateWindowSurfaceRects","SDL_SetWindowGrab","SDL_GetWindowGrab","SDL_GetGrabbedWindow","SDL_SetWindowBrightness","SDL_GetWindowBrightness","SDL_SetWindowOpacity","SDL_GetWindowOpacity","SDL_SetWindowModalFor","SDL_SetWindowInputFocus","SDL_SetWindowGammaRamp","SDL_GetWindowGammaRamp","SDL_SetWindowHitTest","SDL_DestroyWindow","SDL_IsScreenSaverEnabled","SDL_EnableScreenSaver","SDL_DisableScreenSaver","SDL_GL_LoadLibrary","SDL_GL_GetProcAddress","SDL_GL_UnloadLibrary","SDL_GL_ExtensionSupported","SDL_GL_ResetAttributes","SDL_GL_SetAttribute","SDL_GL_GetAttribute","SDL_GL_CreateContext","SDL_GL_MakeCurrent","SDL_GL_GetCurrentWindow","SDL_GL_GetCurrentContext","SDL_GL_GetDrawableSize","SDL_GL_SetSwapInterval","SDL_GL_GetSwapInterval","SDL_GL_SwapWindow","SDL_GL_DeleteContext","SDL_GetKeyboardFocus","SDL_GetKeyboardState","SDL_GetModState","SDL_SetModState","SDL_GetKeyFromScancode","SDL_GetScancodeFromKey","SDL_GetScancodeName","SDL_GetScancodeFromName","SDL_GetKeyName","SDL_GetKeyFromName","SDL_StartTextInput","SDL_IsTextInputActive","SDL_StopTextInput","SDL_SetTextInputRect","SDL_HasScreenKeyboardSupport","SDL_IsScreenKeyboardShown","SDL_GetMouseFocus","SDL_GetMouseState","SDL_GetGlobalMouseState","SDL_GetRelativeMouseState","SDL_WarpMouseInWindow","SDL_WarpMouseGlobal","SDL_SetRelativeMouseMode","SDL_CaptureMouse","SDL_GetRelativeMouseMode","SDL_CreateCursor","SDL_CreateColorCursor","SDL_CreateSystemCursor","SDL_SetCursor","SDL_GetCursor","SDL_GetDefaultCursor","SDL_FreeCursor","SDL_ShowCursor","SDL_NumJoysticks","SDL_JoystickNameForIndex","SDL_JoystickGetDeviceGUID","SDL_JoystickGetDeviceVendor","SDL_JoystickGetDeviceProduct","SDL_JoystickGetDeviceProductVersion","SDL_JoystickGetDeviceType","SDL_JoystickGetDeviceInstanceID","SDL_JoystickOpen","SDL_JoystickFromInstanceID","SDL_JoystickName","SDL_JoystickGetGUID","SDL_JoystickGetVendor","SDL_JoystickGetProduct","SDL_JoystickGetProductVersion","SDL_JoystickGetType","SDL_JoystickGetGUIDString","SDL_JoystickGetGUIDFromString","SDL_JoystickGetAttached","SDL_JoystickInstanceID","SDL_JoystickNumAxes","SDL_JoystickNumBalls","SDL_JoystickNumHats","SDL_JoystickNumButtons","SDL_JoystickUpdate","SDL_JoystickEventState","SDL_JoystickGetAxis","SDL_JoystickGetAxisInitialState","SDL_JoystickGetHat","SDL_JoystickGetBall","SDL_JoystickGetButton","SDL_JoystickClose","SDL_JoystickCurrentPowerLevel","SDL_GameControllerAddMappingsFromRW","SDL_GameControllerAddMapping","SDL_GameControllerNumMappings","SDL_GameControllerMappingForIndex","SDL_GameControllerMappingForGUID","SDL_GameControllerMapping","SDL_IsGameController","SDL_GameControllerNameForIndex","SDL_GameControllerOpen","SDL_GameControllerFromInstanceID","SDL_GameControllerName","SDL_GameControllerGetVendor","SDL_GameControllerGetProduct","SDL_GameControllerGetProductVersion","SDL_GameControllerGetAttached","SDL_GameControllerGetJoystick","SDL_GameControllerEventState","SDL_GameControllerUpdate","SDL_GameControllerGetAxisFromString","SDL_GameControllerGetStringForAxis","SDL_GameControllerGetBindForAxis","SDL_GameControllerGetAxis","SDL_GameControllerGetButtonFromString","SDL_GameControllerGetStringForButton","SDL_GameControllerGetBindForButton","SDL_GameControllerGetButton","SDL_GameControllerClose","SDL_GetNumTouchDevices","SDL_GetTouchDevice","SDL_GetNumTouchFingers","SDL_GetTouchFinger","SDL_RecordGesture","SDL_SaveAllDollarTemplates","SDL_SaveDollarTemplate","SDL_LoadDollarTemplates","SDL_PumpEvents","SDL_PeepEvents","SDL_HasEvent","SDL_HasEvents","SDL_FlushEvent","SDL_FlushEvents","SDL_PollEvent","SDL_WaitEvent","SDL_WaitEventTimeout","SDL_PushEvent","SDL_SetEventFilter","SDL_GetEventFilter","SDL_AddEventWatch","SDL_DelEventWatch","SDL_FilterEvents","SDL_EventState","SDL_RegisterEvents","SDL_GetBasePath","SDL_GetPrefPath","SDL_NumHaptics","SDL_HapticName","SDL_HapticOpen","SDL_HapticOpened","SDL_HapticIndex","SDL_MouseIsHaptic","SDL_HapticOpenFromMouse","SDL_JoystickIsHaptic","SDL_HapticOpenFromJoystick","SDL_HapticClose","SDL_HapticNumEffects","SDL_HapticNumEffectsPlaying","SDL_HapticQuery","SDL_HapticNumAxes","SDL_HapticEffectSupported","SDL_HapticNewEffect","SDL_HapticUpdateEffect","SDL_HapticRunEffect","SDL_HapticStopEffect","SDL_HapticDestroyEffect","SDL_HapticGetEffectStatus","SDL_HapticSetGain","SDL_HapticSetAutocenter","SDL_HapticPause","SDL_HapticUnpause","SDL_HapticStopAll","SDL_HapticRumbleSupported","SDL_HapticRumbleInit","SDL_HapticRumblePlay","SDL_HapticRumbleStop","SDL_SetHintWithPriority","SDL_SetHint","SDL_GetHint","SDL_GetHintBoolean","SDL_AddHintCallback","SDL_DelHintCallback","SDL_ClearHints","SDL_LoadObject","SDL_LoadFunction","SDL_UnloadObject","SDL_LogSetAllPriority","SDL_LogSetPriority","SDL_LogGetPriority","SDL_LogResetPriorities","SDL_Log","SDL_LogVerbose","SDL_LogDebug","SDL_LogInfo","SDL_LogWarn","SDL_LogError","SDL_LogCritical","SDL_LogMessage","SDL_LogMessageV","SDL_LogGetOutputFunction","SDL_LogSetOutputFunction","SDL_ShowMessageBox","SDL_ShowSimpleMessageBox","SDL_GetPowerInfo","SDL_GetNumRenderDrivers","SDL_GetRenderDriverInfo","SDL_CreateWindowAndRenderer","SDL_CreateRenderer","SDL_CreateSoftwareRenderer","SDL_GetRenderer","SDL_GetRendererInfo","SDL_GetRendererOutputSize","SDL_CreateTexture","SDL_CreateTextureFromSurface","SDL_QueryTexture","SDL_SetTextureColorMod","SDL_GetTextureColorMod","SDL_SetTextureAlphaMod","SDL_GetTextureAlphaMod","SDL_SetTextureBlendMode","SDL_GetTextureBlendMode","SDL_UpdateTexture","SDL_UpdateYUVTexture","SDL_LockTexture","SDL_UnlockTexture","SDL_RenderTargetSupported","SDL_SetRenderTarget","SDL_GetRenderTarget","SDL_RenderSetLogicalSize","SDL_RenderGetLogicalSize","SDL_RenderSetIntegerScale","SDL_RenderGetIntegerScale","SDL_RenderSetViewport","SDL_RenderGetViewport","SDL_RenderSetClipRect","SDL_RenderGetClipRect","SDL_RenderIsClipEnabled","SDL_RenderSetScale","SDL_RenderGetScale","SDL_SetRenderDrawColor","SDL_GetRenderDrawColor","SDL_SetRenderDrawBlendMode","SDL_GetRenderDrawBlendMode","SDL_RenderClear","SDL_RenderDrawPoint","SDL_RenderDrawPoints","SDL_RenderDrawLine","SDL_RenderDrawLines","SDL_RenderDrawRect","SDL_RenderDrawRects","SDL_RenderFillRect","SDL_RenderFillRects","SDL_RenderCopy","SDL_RenderCopyEx","SDL_RenderReadPixels","SDL_RenderPresent","SDL_DestroyTexture","SDL_DestroyRenderer","SDL_GL_BindTexture","SDL_GL_UnbindTexture","SDL_CreateShapedWindow","SDL_IsShapedWindow","SDL_SetWindowShape","SDL_GetShapedWindowMode","SDL_GetTicks","SDL_GetPerformanceCounter","SDL_GetPerformanceFrequency","SDL_Delay","SDL_AddTimer","SDL_RemoveTimer","SDL_GetVersion","SDL_GetRevision","SDL_GetRevisionNumber","SDL_Init","SDL_InitSubSystem","SDL_QuitSubSystem","SDL_WasInit","SDL_Quit","__LINUX__","HAVE_STDARG_H","HAVE_STDDEF_H","HAVE_STDINT_H","HAVE_GCC_SYNC_LOCK_TEST_AND_SET","SDL_AUDIO_DRIVER_DUMMY","SDL_JOYSTICK_DISABLED","SDL_HAPTIC_DISABLED","SDL_LOADSO_DISABLED","SDL_THREADS_DISABLED","SDL_TIMERS_DISABLED","SDL_VIDEO_DRIVER_DUMMY","SDL_FILESYSTEM_DUMMY","__GNUC_VA_LIST","_STDINT_H","_FEATURES_H","_DEFAULT_SOURCE","__USE_ISOC11","__USE_ISOC99","__USE_ISOC95","__USE_POSIX_IMPLICITLY","_POSIX_SOURCE","_POSIX_C_SOURCE","__USE_POSIX","__USE_POSIX2","__USE_POSIX199309","__USE_POSIX199506","__USE_XOPEN2K","__USE_XOPEN2K8","_ATFILE_SOURCE","__USE_MISC","__USE_ATFILE","__USE_FORTIFY_LEVEL","__GLIBC_USE_DEPRECATED_GETS","_STDC_PREDEF_H","__STDC_IEC_559__","__STDC_IEC_559_COMPLEX__","__STDC_ISO_10646__","__STDC_NO_THREADS__","__GNU_LIBRARY__","__GLIBC__","__GLIBC_MINOR__","_SYS_CDEFS_H","__glibc_c99_flexarr_available","__WORDSIZE","__WORDSIZE_TIME64_COMPAT32","__SYSCALL_WORDSIZE","__HAVE_GENERIC_SELECTION","__GLIBC_USE_LIB_EXT2","__GLIBC_USE_IEC_60559_BFP_EXT","__GLIBC_USE_IEC_60559_FUNCS_EXT","__GLIBC_USE_IEC_60559_TYPES_EXT","_BITS_TYPES_H","_BITS_TYPESIZES_H","__OFF_T_MATCHES_OFF64_T","__INO_T_MATCHES_INO64_T","__RLIM_T_MATCHES_RLIM64_T","__FD_SETSIZE","_BITS_WCHAR_H","_BITS_STDINT_INTN_H","_BITS_STDINT_UINTN_H","INT8_MIN","INT16_MIN","INT32_MIN","INT8_MAX","INT16_MAX","INT32_MAX","UINT8_MAX","UINT16_MAX","UINT32_MAX","INT_LEAST8_MIN","INT_LEAST16_MIN","INT_LEAST32_MIN","INT_LEAST8_MAX","INT_LEAST16_MAX","INT_LEAST32_MAX","UINT_LEAST8_MAX","UINT_LEAST16_MAX","UINT_LEAST32_MAX","INT_FAST8_MIN","INT_FAST16_MIN","INT_FAST32_MIN","INT_FAST8_MAX","INT_FAST16_MAX","INT_FAST32_MAX","UINT_FAST8_MAX","UINT_FAST16_MAX","UINT_FAST32_MAX","INTPTR_MIN","INTPTR_MAX","UINTPTR_MAX","PTRDIFF_MIN","PTRDIFF_MAX","SIG_ATOMIC_MIN","SIG_ATOMIC_MAX","SIZE_MAX","WINT_MIN","WINT_MAX","SDL_PRIs64","SDL_PRIu64","SDL_PRIx64","SDL_PRIX64","M_PI","SDL_ASSERT_LEVEL","SDL_NULL_WHILE_LOOP_CONDITION","SDL_LIL_ENDIAN","SDL_BIG_ENDIAN","_ENDIAN_H","__LITTLE_ENDIAN","__BIG_ENDIAN","__PDP_ENDIAN","__BYTE_ORDER","__FLOAT_WORD_ORDER","LITTLE_ENDIAN","BIG_ENDIAN","PDP_ENDIAN","BYTE_ORDER","_BITS_BYTESWAP_H","_BITS_UINTN_IDENTITY_H","SDL_BYTEORDER","SDL_MUTEX_TIMEDOUT","SDL_RWOPS_UNKNOWN","SDL_RWOPS_WINFILE","SDL_RWOPS_STDFILE","SDL_RWOPS_JNIFILE","SDL_RWOPS_MEMORY","SDL_RWOPS_MEMORY_RO","RW_SEEK_SET","RW_SEEK_CUR","RW_SEEK_END","SDL_AUDIO_MASK_BITSIZE","SDL_AUDIO_MASK_DATATYPE","SDL_AUDIO_MASK_ENDIAN","SDL_AUDIO_MASK_SIGNED","AUDIO_U8","AUDIO_S8","AUDIO_U16LSB","AUDIO_S16LSB","AUDIO_U16MSB","AUDIO_S16MSB","AUDIO_U16","AUDIO_S16","AUDIO_S32LSB","AUDIO_S32MSB","AUDIO_S32","AUDIO_F32LSB","AUDIO_F32MSB","AUDIO_F32","AUDIO_U16SYS","AUDIO_S16SYS","AUDIO_S32SYS","AUDIO_F32SYS","SDL_AUDIO_ALLOW_FREQUENCY_CHANGE","SDL_AUDIO_ALLOW_FORMAT_CHANGE","SDL_AUDIO_ALLOW_CHANNELS_CHANGE","SDL_AUDIO_ALLOW_ANY_CHANGE","SDL_AUDIOCVT_MAX_FILTERS","SDL_MIX_MAXVOLUME","_STDLIB_H","WNOHANG","WUNTRACED","WSTOPPED","WEXITED","WCONTINUED","WNOWAIT","__WNOTHREAD","__WALL","__WCLONE","__W_CONTINUED","__WCOREFLAG","__HAVE_FLOAT128","__HAVE_DISTINCT_FLOAT128","__ldiv_t_defined","__lldiv_t_defined","RAND_MAX","EXIT_FAILURE","EXIT_SUCCESS","_SYS_TYPES_H","__clock_t_defined","__clockid_t_defined","__time_t_defined","__timer_t_defined","__BIT_TYPES_DEFINED__","_SYS_SELECT_H","__FD_ZERO_STOS","__sigset_t_defined","__timeval_defined","__timespec_defined","FD_SETSIZE","_SYS_SYSMACROS_H","_BITS_SYSMACROS_H","_BITS_PTHREADTYPES_COMMON_H","_THREAD_SHARED_TYPES_H","_BITS_PTHREADTYPES_ARCH_H","__SIZEOF_PTHREAD_MUTEX_T","__SIZEOF_PTHREAD_ATTR_T","__SIZEOF_PTHREAD_RWLOCK_T","__SIZEOF_PTHREAD_BARRIER_T","__SIZEOF_PTHREAD_MUTEXATTR_T","__SIZEOF_PTHREAD_COND_T","__SIZEOF_PTHREAD_CONDATTR_T","__SIZEOF_PTHREAD_RWLOCKATTR_T","__SIZEOF_PTHREAD_BARRIERATTR_T","__PTHREAD_MUTEX_LOCK_ELISION","__PTHREAD_RWLOCK_INT_FLAGS_SHARED","__PTHREAD_MUTEX_HAVE_PREV","__have_pthread_attr_t","_ALLOCA_H","_MM_HINT_T0","_MM_HINT_T1","_MM_HINT_T2","_MM_HINT_NTA","_MM_EXCEPT_INVALID","_MM_EXCEPT_DENORM","_MM_EXCEPT_DIV_ZERO","_MM_EXCEPT_OVERFLOW","_MM_EXCEPT_UNDERFLOW","_MM_EXCEPT_INEXACT","_MM_EXCEPT_MASK","_MM_MASK_INVALID","_MM_MASK_DENORM","_MM_MASK_DIV_ZERO","_MM_MASK_OVERFLOW","_MM_MASK_UNDERFLOW","_MM_MASK_INEXACT","_MM_MASK_MASK","_MM_ROUND_NEAREST","_MM_ROUND_DOWN","_MM_ROUND_UP","_MM_ROUND_TOWARD_ZERO","_MM_ROUND_MASK","_MM_FLUSH_ZERO_MASK","_MM_FLUSH_ZERO_ON","_MM_FLUSH_ZERO_OFF","_MM_DENORMALS_ZERO_ON","_MM_DENORMALS_ZERO_OFF","_MM_DENORMALS_ZERO_MASK","SDL_CACHELINE_SIZE","SDL_ALPHA_OPAQUE","SDL_ALPHA_TRANSPARENT","SDL_SWSURFACE","SDL_PREALLOC","SDL_RLEACCEL","SDL_DONTFREE","SDL_WINDOWPOS_UNDEFINED_MASK","SDL_WINDOWPOS_CENTERED_MASK","SDLK_SCANCODE_MASK","SDL_BUTTON_LEFT","SDL_BUTTON_MIDDLE","SDL_BUTTON_RIGHT","SDL_BUTTON_X1","SDL_BUTTON_X2","SDL_JOYSTICK_AXIS_MAX","SDL_JOYSTICK_AXIS_MIN","SDL_HAT_CENTERED","SDL_HAT_UP","SDL_HAT_RIGHT","SDL_HAT_DOWN","SDL_HAT_LEFT","SDL_HAT_RIGHTUP","SDL_HAT_RIGHTDOWN","SDL_HAT_LEFTUP","SDL_HAT_LEFTDOWN","SDL_RELEASED","SDL_PRESSED","SDL_TEXTEDITINGEVENT_TEXT_SIZE","SDL_TEXTINPUTEVENT_TEXT_SIZE","SDL_QUERY","SDL_IGNORE","SDL_DISABLE","SDL_ENABLE","SDL_HAPTIC_CONSTANT","SDL_HAPTIC_SINE","SDL_HAPTIC_LEFTRIGHT","SDL_HAPTIC_TRIANGLE","SDL_HAPTIC_SAWTOOTHUP","SDL_HAPTIC_SAWTOOTHDOWN","SDL_HAPTIC_RAMP","SDL_HAPTIC_SPRING","SDL_HAPTIC_DAMPER","SDL_HAPTIC_INERTIA","SDL_HAPTIC_FRICTION","SDL_HAPTIC_CUSTOM","SDL_HAPTIC_GAIN","SDL_HAPTIC_AUTOCENTER","SDL_HAPTIC_STATUS","SDL_HAPTIC_PAUSE","SDL_HAPTIC_POLAR","SDL_HAPTIC_CARTESIAN","SDL_HAPTIC_SPHERICAL","SDL_HAPTIC_INFINITY","SDL_HINT_FRAMEBUFFER_ACCELERATION","SDL_HINT_RENDER_DRIVER","SDL_HINT_RENDER_OPENGL_SHADERS","SDL_HINT_RENDER_DIRECT3D_THREADSAFE","SDL_HINT_RENDER_DIRECT3D11_DEBUG","SDL_HINT_RENDER_LOGICAL_SIZE_MODE","SDL_HINT_RENDER_SCALE_QUALITY","SDL_HINT_RENDER_VSYNC","SDL_HINT_VIDEO_ALLOW_SCREENSAVER","SDL_HINT_VIDEO_X11_XVIDMODE","SDL_HINT_VIDEO_X11_XINERAMA","SDL_HINT_VIDEO_X11_XRANDR","SDL_HINT_VIDEO_X11_NET_WM_PING","SDL_HINT_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN","SDL_HINT_WINDOWS_INTRESOURCE_ICON","SDL_HINT_WINDOWS_INTRESOURCE_ICON_SMALL","SDL_HINT_WINDOWS_ENABLE_MESSAGELOOP","SDL_HINT_GRAB_KEYBOARD","SDL_HINT_MOUSE_NORMAL_SPEED_SCALE","SDL_HINT_MOUSE_RELATIVE_SPEED_SCALE","SDL_HINT_MOUSE_RELATIVE_MODE_WARP","SDL_HINT_MOUSE_FOCUS_CLICKTHROUGH","SDL_HINT_TOUCH_MOUSE_EVENTS","SDL_HINT_VIDEO_MINIMIZE_ON_FOCUS_LOSS","SDL_HINT_IDLE_TIMER_DISABLED","SDL_HINT_ORIENTATIONS","SDL_HINT_APPLE_TV_CONTROLLER_UI_EVENTS","SDL_HINT_APPLE_TV_REMOTE_ALLOW_ROTATION","SDL_HINT_ACCELEROMETER_AS_JOYSTICK","SDL_HINT_XINPUT_ENABLED","SDL_HINT_XINPUT_USE_OLD_JOYSTICK_MAPPING","SDL_HINT_GAMECONTROLLERCONFIG","SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES","SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT","SDL_HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS","SDL_HINT_ALLOW_TOPMOST","SDL_HINT_TIMER_RESOLUTION","SDL_HINT_QTWAYLAND_CONTENT_ORIENTATION","SDL_HINT_QTWAYLAND_WINDOW_FLAGS","SDL_HINT_THREAD_STACK_SIZE","SDL_HINT_VIDEO_HIGHDPI_DISABLED","SDL_HINT_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK","SDL_HINT_VIDEO_WIN_D3DCOMPILER","SDL_HINT_VIDEO_WINDOW_SHARE_PIXEL_FORMAT","SDL_HINT_WINRT_PRIVACY_POLICY_URL","SDL_HINT_WINRT_PRIVACY_POLICY_LABEL","SDL_HINT_WINRT_HANDLE_BACK_BUTTON","SDL_HINT_VIDEO_MAC_FULLSCREEN_SPACES","SDL_HINT_MAC_BACKGROUND_APP","SDL_HINT_ANDROID_APK_EXPANSION_MAIN_FILE_VERSION","SDL_HINT_ANDROID_APK_EXPANSION_PATCH_FILE_VERSION","SDL_HINT_IME_INTERNAL_EDITING","SDL_HINT_ANDROID_SEPARATE_MOUSE_AND_TOUCH","SDL_HINT_EMSCRIPTEN_KEYBOARD_ELEMENT","SDL_HINT_NO_SIGNAL_HANDLERS","SDL_HINT_WINDOWS_NO_CLOSE_ON_ALT_F4","SDL_HINT_BMP_SAVE_LEGACY_FORMAT","SDL_HINT_WINDOWS_DISABLE_THREAD_NAMING","SDL_HINT_RPI_VIDEO_LAYER","SDL_HINT_OPENGL_ES_DRIVER","SDL_HINT_AUDIO_RESAMPLING_MODE","SDL_HINT_AUDIO_CATEGORY","SDL_MAX_LOG_MESSAGE","SDL_NONSHAPEABLE_WINDOW","SDL_INVALID_SHAPE_ARGUMENT","SDL_WINDOW_LACKS_SHAPE","SDL_MAJOR_VERSION","SDL_MINOR_VERSION","SDL_PATCHLEVEL","SDL_INIT_TIMER","SDL_INIT_AUDIO","SDL_INIT_VIDEO","SDL_INIT_JOYSTICK","SDL_INIT_HAPTIC","SDL_INIT_GAMECONTROLLER","SDL_INIT_EVENTS","SDL_INIT_NOPARACHUTE","SDL_INIT_EVERYTHING","wchar_t","va_list","__gnuc_va_list","__u_char","__u_short","__u_int","__u_long","__int8_t","__uint8_t","__int16_t","__uint16_t","__int32_t","__uint32_t","__int64_t","__uint64_t","__quad_t","__u_quad_t","__intmax_t","__uintmax_t","__dev_t","__uid_t","__gid_t","__ino_t","__ino64_t","__mode_t","__nlink_t","__off_t","__off64_t","__pid_t","__fsid_t","__val","__clock_t","__rlim_t","__rlim64_t","__id_t","__time_t","__useconds_t","__suseconds_t","__daddr_t","__key_t","__clockid_t","__timer_t","__blksize_t","__blkcnt_t","__blkcnt64_t","__fsblkcnt_t","__fsblkcnt64_t","__fsfilcnt_t","__fsfilcnt64_t","__fsword_t","__ssize_t","__syscall_slong_t","__syscall_ulong_t","__loff_t","__qaddr_t","__caddr_t","__intptr_t","__socklen_t","__sig_atomic_t","int_least8_t","int_least16_t","int_least32_t","int_least64_t","uint_least8_t","uint_least16_t","uint_least32_t","uint_least64_t","int_fast8_t","int_fast16_t","int_fast32_t","int_fast64_t","uint_fast8_t","uint_fast16_t","uint_fast32_t","uint_fast64_t","intmax_t","uintmax_t","SDL_bool","SDL_FALSE","SDL_TRUE","Sint8","Uint8","Sint16","Uint16","Sint32","Uint32","Sint64","Uint64","SDL_compile_time_assert_uint8","SDL_compile_time_assert_sint8","SDL_compile_time_assert_uint16","SDL_compile_time_assert_sint16","SDL_compile_time_assert_uint32","SDL_compile_time_assert_sint32","SDL_compile_time_assert_uint64","SDL_compile_time_assert_sint64","SDL_DUMMY_ENUM","DUMMY_ENUM_VALUE","SDL_compile_time_assert_enum","_SDL_iconv_t","SDL_iconv_t","SDL_AssertState","SDL_ASSERTION_RETRY","SDL_ASSERTION_BREAK","SDL_ASSERTION_ABORT","SDL_ASSERTION_IGNORE","SDL_ASSERTION_ALWAYS_IGNORE","SDL_AssertData","always_ignore","trigger_count","condition","filename","linenum","function","next","SDL_AssertionHandler","SDL_SpinLock","SDL_atomic_t","value","SDL_errorcode","SDL_ENOMEM","SDL_EFREAD","SDL_EFWRITE","SDL_EFSEEK","SDL_UNSUPPORTED","SDL_LASTERROR","SDL_mutex","SDL_semaphore","SDL_sem","SDL_cond","SDL_Thread","SDL_threadID","SDL_TLSID","SDL_ThreadPriority","SDL_THREAD_PRIORITY_LOW","SDL_THREAD_PRIORITY_NORMAL","SDL_THREAD_PRIORITY_HIGH","SDL_ThreadFunction","SDL_RWops","size","seek","read","write","close","type_","hidden","SDL_RWops__bindgen_ty_1","mem","unknown","SDL_RWops__bindgen_ty_1__bindgen_ty_1","base","here","stop","SDL_RWops__bindgen_ty_1__bindgen_ty_2","data1","data2","SDL_AudioFormat","SDL_AudioCallback","SDL_AudioSpec","freq","format","channels","silence","samples","padding","size","callback","userdata","SDL_AudioCVT","needed","src_format","dst_format","rate_incr","buf","len","len_cvt","len_mult","len_ratio","filters","filter_index","SDL_AudioFilter","SDL_AudioDeviceID","SDL_AudioStatus","SDL_AUDIO_STOPPED","SDL_AUDIO_PLAYING","SDL_AUDIO_PAUSED","__m64","__v1di","__v2si","__v4hi","__v8qi","__v4si","__v4sf","__m128","__v4su","div_t","quot","rem","ldiv_t","quot","rem","lldiv_t","quot","rem","u_char","u_short","u_int","u_long","quad_t","u_quad_t","fsid_t","loff_t","ino_t","dev_t","gid_t","mode_t","nlink_t","uid_t","off_t","pid_t","id_t","daddr_t","caddr_t","key_t","clock_t","clockid_t","time_t","timer_t","ulong","ushort","uint","u_int8_t","u_int16_t","u_int32_t","u_int64_t","register_t","__sigset_t","__val","sigset_t","timeval","tv_sec","tv_usec","timespec","tv_sec","tv_nsec","suseconds_t","__fd_mask","fd_set","__fds_bits","fd_mask","blksize_t","blkcnt_t","fsblkcnt_t","fsfilcnt_t","__pthread_rwlock_arch_t","__readers","__writers","__wrphase_futex","__writers_futex","__pad3","__pad4","__cur_writer","__shared","__rwelision","__pad1","__pad2","__flags","__pthread_internal_list","__prev","__next","__pthread_list_t","__pthread_mutex_s","__lock","__count","__owner","__nusers","__kind","__spins","__elision","__list","__pthread_cond_s","__bindgen_anon_1","__bindgen_anon_2","__g_refs","__g_size","__g1_orig_size","__wrefs","__g_signals","__pthread_cond_s__bindgen_ty_1","__wseq","__wseq32","__pthread_cond_s__bindgen_ty_1__bindgen_ty_1","__low","__high","__pthread_cond_s__bindgen_ty_2","__g1_start","__g1_start32","__pthread_cond_s__bindgen_ty_2__bindgen_ty_1","__low","__high","pthread_t","pthread_mutexattr_t","__size","__align","pthread_condattr_t","__size","__align","pthread_key_t","pthread_once_t","pthread_attr_t","__size","__align","pthread_mutex_t","__data","__size","__align","pthread_cond_t","__data","__size","__align","pthread_rwlock_t","__data","__size","__align","pthread_rwlockattr_t","__size","__align","pthread_spinlock_t","pthread_barrier_t","__size","__align","pthread_barrierattr_t","__size","__align","random_data","fptr","rptr","state","rand_type","rand_deg","rand_sep","end_ptr","drand48_data","__x","__old_x","__c","__init","__a","__compar_fn_t","__m128d","__m128i","__v2df","__v2di","__v8hi","__v16qi","__v2du","__v8hu","__v16qu","__v16qs","SDL_PIXELTYPE_UNKNOWN","SDL_PIXELTYPE_INDEX1","SDL_PIXELTYPE_INDEX4","SDL_PIXELTYPE_INDEX8","SDL_PIXELTYPE_PACKED8","SDL_PIXELTYPE_PACKED16","SDL_PIXELTYPE_PACKED32","SDL_PIXELTYPE_ARRAYU8","SDL_PIXELTYPE_ARRAYU16","SDL_PIXELTYPE_ARRAYU32","SDL_PIXELTYPE_ARRAYF16","SDL_PIXELTYPE_ARRAYF32","_bindgen_ty_1","SDL_PIXELTYPE_UNKNOWN","SDL_PIXELTYPE_INDEX1","SDL_PIXELTYPE_INDEX4","SDL_PIXELTYPE_INDEX8","SDL_PIXELTYPE_PACKED8","SDL_PIXELTYPE_PACKED16","SDL_PIXELTYPE_PACKED32","SDL_PIXELTYPE_ARRAYU8","SDL_PIXELTYPE_ARRAYU16","SDL_PIXELTYPE_ARRAYU32","SDL_PIXELTYPE_ARRAYF16","SDL_PIXELTYPE_ARRAYF32","SDL_BITMAPORDER_NONE","SDL_BITMAPORDER_4321","SDL_BITMAPORDER_1234","_bindgen_ty_2","SDL_BITMAPORDER_NONE","SDL_BITMAPORDER_4321","SDL_BITMAPORDER_1234","SDL_PACKEDORDER_NONE","SDL_PACKEDORDER_XRGB","SDL_PACKEDORDER_RGBX","SDL_PACKEDORDER_ARGB","SDL_PACKEDORDER_RGBA","SDL_PACKEDORDER_XBGR","SDL_PACKEDORDER_BGRX","SDL_PACKEDORDER_ABGR","SDL_PACKEDORDER_BGRA","_bindgen_ty_3","SDL_PACKEDORDER_NONE","SDL_PACKEDORDER_XRGB","SDL_PACKEDORDER_RGBX","SDL_PACKEDORDER_ARGB","SDL_PACKEDORDER_RGBA","SDL_PACKEDORDER_XBGR","SDL_PACKEDORDER_BGRX","SDL_PACKEDORDER_ABGR","SDL_PACKEDORDER_BGRA","SDL_ARRAYORDER_NONE","SDL_ARRAYORDER_RGB","SDL_ARRAYORDER_RGBA","SDL_ARRAYORDER_ARGB","SDL_ARRAYORDER_BGR","SDL_ARRAYORDER_BGRA","SDL_ARRAYORDER_ABGR","_bindgen_ty_4","SDL_ARRAYORDER_NONE","SDL_ARRAYORDER_RGB","SDL_ARRAYORDER_RGBA","SDL_ARRAYORDER_ARGB","SDL_ARRAYORDER_BGR","SDL_ARRAYORDER_BGRA","SDL_ARRAYORDER_ABGR","SDL_PACKEDLAYOUT_NONE","SDL_PACKEDLAYOUT_332","SDL_PACKEDLAYOUT_4444","SDL_PACKEDLAYOUT_1555","SDL_PACKEDLAYOUT_5551","SDL_PACKEDLAYOUT_565","SDL_PACKEDLAYOUT_8888","SDL_PACKEDLAYOUT_2101010","SDL_PACKEDLAYOUT_1010102","_bindgen_ty_5","SDL_PACKEDLAYOUT_NONE","SDL_PACKEDLAYOUT_332","SDL_PACKEDLAYOUT_4444","SDL_PACKEDLAYOUT_1555","SDL_PACKEDLAYOUT_5551","SDL_PACKEDLAYOUT_565","SDL_PACKEDLAYOUT_8888","SDL_PACKEDLAYOUT_2101010","SDL_PACKEDLAYOUT_1010102","SDL_PIXELFORMAT_UNKNOWN","SDL_PIXELFORMAT_INDEX1LSB","SDL_PIXELFORMAT_INDEX1MSB","SDL_PIXELFORMAT_INDEX4LSB","SDL_PIXELFORMAT_INDEX4MSB","SDL_PIXELFORMAT_INDEX8","SDL_PIXELFORMAT_RGB332","SDL_PIXELFORMAT_RGB444","SDL_PIXELFORMAT_RGB555","SDL_PIXELFORMAT_BGR555","SDL_PIXELFORMAT_ARGB4444","SDL_PIXELFORMAT_RGBA4444","SDL_PIXELFORMAT_ABGR4444","SDL_PIXELFORMAT_BGRA4444","SDL_PIXELFORMAT_ARGB1555","SDL_PIXELFORMAT_RGBA5551","SDL_PIXELFORMAT_ABGR1555","SDL_PIXELFORMAT_BGRA5551","SDL_PIXELFORMAT_RGB565","SDL_PIXELFORMAT_BGR565","SDL_PIXELFORMAT_RGB24","SDL_PIXELFORMAT_BGR24","SDL_PIXELFORMAT_RGB888","SDL_PIXELFORMAT_RGBX8888","SDL_PIXELFORMAT_BGR888","SDL_PIXELFORMAT_BGRX8888","SDL_PIXELFORMAT_ARGB8888","SDL_PIXELFORMAT_RGBA8888","SDL_PIXELFORMAT_ABGR8888","SDL_PIXELFORMAT_BGRA8888","SDL_PIXELFORMAT_ARGB2101010","SDL_PIXELFORMAT_RGBA32","SDL_PIXELFORMAT_ARGB32","SDL_PIXELFORMAT_BGRA32","SDL_PIXELFORMAT_ABGR32","SDL_PIXELFORMAT_YV12","SDL_PIXELFORMAT_IYUV","SDL_PIXELFORMAT_YUY2","SDL_PIXELFORMAT_UYVY","SDL_PIXELFORMAT_YVYU","SDL_PIXELFORMAT_NV12","SDL_PIXELFORMAT_NV21","_bindgen_ty_6","SDL_PIXELFORMAT_UNKNOWN","SDL_PIXELFORMAT_INDEX1LSB","SDL_PIXELFORMAT_INDEX1MSB","SDL_PIXELFORMAT_INDEX4LSB","SDL_PIXELFORMAT_INDEX4MSB","SDL_PIXELFORMAT_INDEX8","SDL_PIXELFORMAT_RGB332","SDL_PIXELFORMAT_RGB444","SDL_PIXELFORMAT_RGB555","SDL_PIXELFORMAT_BGR555","SDL_PIXELFORMAT_ARGB4444","SDL_PIXELFORMAT_RGBA4444","SDL_PIXELFORMAT_ABGR4444","SDL_PIXELFORMAT_BGRA4444","SDL_PIXELFORMAT_ARGB1555","SDL_PIXELFORMAT_RGBA5551","SDL_PIXELFORMAT_ABGR1555","SDL_PIXELFORMAT_BGRA5551","SDL_PIXELFORMAT_RGB565","SDL_PIXELFORMAT_BGR565","SDL_PIXELFORMAT_RGB24","SDL_PIXELFORMAT_BGR24","SDL_PIXELFORMAT_RGB888","SDL_PIXELFORMAT_RGBX8888","SDL_PIXELFORMAT_BGR888","SDL_PIXELFORMAT_BGRX8888","SDL_PIXELFORMAT_ARGB8888","SDL_PIXELFORMAT_RGBA8888","SDL_PIXELFORMAT_ABGR8888","SDL_PIXELFORMAT_BGRA8888","SDL_PIXELFORMAT_ARGB2101010","SDL_PIXELFORMAT_YV12","SDL_PIXELFORMAT_IYUV","SDL_PIXELFORMAT_YUY2","SDL_PIXELFORMAT_UYVY","SDL_PIXELFORMAT_YVYU","SDL_PIXELFORMAT_NV12","SDL_PIXELFORMAT_NV21","SDL_Color","r","g","b","a","SDL_Palette","ncolors","colors","version","refcount","SDL_PixelFormat","format","palette","BitsPerPixel","BytesPerPixel","padding","Rmask","Gmask","Bmask","Amask","Rloss","Gloss","Bloss","Aloss","Rshift","Gshift","Bshift","Ashift","refcount","next","SDL_Point","x","y","SDL_Rect","x","y","w","h","SDL_BlendMode","SDL_BLENDMODE_NONE","SDL_BLENDMODE_BLEND","SDL_BLENDMODE_ADD","SDL_BLENDMODE_MOD","SDL_BLENDMODE_INVALID","SDL_BlendOperation","SDL_BLENDOPERATION_ADD","SDL_BLENDOPERATION_SUBTRACT","SDL_BLENDOPERATION_REV_SUBTRACT","SDL_BLENDOPERATION_MINIMUM","SDL_BLENDOPERATION_MAXIMUM","SDL_BlendFactor","SDL_BLENDFACTOR_ZERO","SDL_BLENDFACTOR_ONE","SDL_BLENDFACTOR_SRC_COLOR","SDL_BLENDFACTOR_ONE_MINUS_SRC_COLOR","SDL_BLENDFACTOR_SRC_ALPHA","SDL_BLENDFACTOR_ONE_MINUS_SRC_ALPHA","SDL_BLENDFACTOR_DST_COLOR","SDL_BLENDFACTOR_ONE_MINUS_DST_COLOR","SDL_BLENDFACTOR_DST_ALPHA","SDL_BLENDFACTOR_ONE_MINUS_DST_ALPHA","SDL_Surface","flags","format","w","h","pitch","pixels","userdata","locked","lock_data","clip_rect","map","refcount","SDL_blit","SDL_DisplayMode","format","w","h","refresh_rate","driverdata","SDL_Window","SDL_WindowFlags","SDL_WINDOW_FULLSCREEN","SDL_WINDOW_OPENGL","SDL_WINDOW_SHOWN","SDL_WINDOW_HIDDEN","SDL_WINDOW_BORDERLESS","SDL_WINDOW_RESIZABLE","SDL_WINDOW_MINIMIZED","SDL_WINDOW_MAXIMIZED","SDL_WINDOW_INPUT_GRABBED","SDL_WINDOW_INPUT_FOCUS","SDL_WINDOW_MOUSE_FOCUS","SDL_WINDOW_FULLSCREEN_DESKTOP","SDL_WINDOW_FOREIGN","SDL_WINDOW_ALLOW_HIGHDPI","SDL_WINDOW_MOUSE_CAPTURE","SDL_WINDOW_ALWAYS_ON_TOP","SDL_WINDOW_SKIP_TASKBAR","SDL_WINDOW_UTILITY","SDL_WINDOW_TOOLTIP","SDL_WINDOW_POPUP_MENU","SDL_WINDOW_VULKAN","SDL_WindowEventID","SDL_WINDOWEVENT_NONE","SDL_WINDOWEVENT_SHOWN","SDL_WINDOWEVENT_HIDDEN","SDL_WINDOWEVENT_EXPOSED","SDL_WINDOWEVENT_MOVED","SDL_WINDOWEVENT_RESIZED","SDL_WINDOWEVENT_SIZE_CHANGED","SDL_WINDOWEVENT_MINIMIZED","SDL_WINDOWEVENT_MAXIMIZED","SDL_WINDOWEVENT_RESTORED","SDL_WINDOWEVENT_ENTER","SDL_WINDOWEVENT_LEAVE","SDL_WINDOWEVENT_FOCUS_GAINED","SDL_WINDOWEVENT_FOCUS_LOST","SDL_WINDOWEVENT_CLOSE","SDL_WINDOWEVENT_TAKE_FOCUS","SDL_WINDOWEVENT_HIT_TEST","SDL_GLContext","SDL_GLattr","SDL_GL_RED_SIZE","SDL_GL_GREEN_SIZE","SDL_GL_BLUE_SIZE","SDL_GL_ALPHA_SIZE","SDL_GL_BUFFER_SIZE","SDL_GL_DOUBLEBUFFER","SDL_GL_DEPTH_SIZE","SDL_GL_STENCIL_SIZE","SDL_GL_ACCUM_RED_SIZE","SDL_GL_ACCUM_GREEN_SIZE","SDL_GL_ACCUM_BLUE_SIZE","SDL_GL_ACCUM_ALPHA_SIZE","SDL_GL_STEREO","SDL_GL_MULTISAMPLEBUFFERS","SDL_GL_MULTISAMPLESAMPLES","SDL_GL_ACCELERATED_VISUAL","SDL_GL_RETAINED_BACKING","SDL_GL_CONTEXT_MAJOR_VERSION","SDL_GL_CONTEXT_MINOR_VERSION","SDL_GL_CONTEXT_EGL","SDL_GL_CONTEXT_FLAGS","SDL_GL_CONTEXT_PROFILE_MASK","SDL_GL_SHARE_WITH_CURRENT_CONTEXT","SDL_GL_FRAMEBUFFER_SRGB_CAPABLE","SDL_GL_CONTEXT_RELEASE_BEHAVIOR","SDL_GL_CONTEXT_RESET_NOTIFICATION","SDL_GL_CONTEXT_NO_ERROR","SDL_GLprofile","SDL_GL_CONTEXT_PROFILE_CORE","SDL_GL_CONTEXT_PROFILE_COMPATIBILITY","SDL_GL_CONTEXT_PROFILE_ES","SDL_GLcontextFlag","SDL_GL_CONTEXT_DEBUG_FLAG","SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG","SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG","SDL_GL_CONTEXT_RESET_ISOLATION_FLAG","SDL_GLcontextReleaseFlag","SDL_GL_CONTEXT_RELEASE_BEHAVIOR_NONE","SDL_GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH","SDL_GLContextResetNotification","SDL_GL_CONTEXT_RESET_NO_NOTIFICATION","SDL_GL_CONTEXT_RESET_LOSE_CONTEXT","SDL_HitTestResult","SDL_HITTEST_NORMAL","SDL_HITTEST_DRAGGABLE","SDL_HITTEST_RESIZE_TOPLEFT","SDL_HITTEST_RESIZE_TOP","SDL_HITTEST_RESIZE_TOPRIGHT","SDL_HITTEST_RESIZE_RIGHT","SDL_HITTEST_RESIZE_BOTTOMRIGHT","SDL_HITTEST_RESIZE_BOTTOM","SDL_HITTEST_RESIZE_BOTTOMLEFT","SDL_HITTEST_RESIZE_LEFT","SDL_HitTest","SDL_Scancode","SDL_SCANCODE_UNKNOWN","SDL_SCANCODE_A","SDL_SCANCODE_B","SDL_SCANCODE_C","SDL_SCANCODE_D","SDL_SCANCODE_E","SDL_SCANCODE_F","SDL_SCANCODE_G","SDL_SCANCODE_H","SDL_SCANCODE_I","SDL_SCANCODE_J","SDL_SCANCODE_K","SDL_SCANCODE_L","SDL_SCANCODE_M","SDL_SCANCODE_N","SDL_SCANCODE_O","SDL_SCANCODE_P","SDL_SCANCODE_Q","SDL_SCANCODE_R","SDL_SCANCODE_S","SDL_SCANCODE_T","SDL_SCANCODE_U","SDL_SCANCODE_V","SDL_SCANCODE_W","SDL_SCANCODE_X","SDL_SCANCODE_Y","SDL_SCANCODE_Z","SDL_SCANCODE_1","SDL_SCANCODE_2","SDL_SCANCODE_3","SDL_SCANCODE_4","SDL_SCANCODE_5","SDL_SCANCODE_6","SDL_SCANCODE_7","SDL_SCANCODE_8","SDL_SCANCODE_9","SDL_SCANCODE_0","SDL_SCANCODE_RETURN","SDL_SCANCODE_ESCAPE","SDL_SCANCODE_BACKSPACE","SDL_SCANCODE_TAB","SDL_SCANCODE_SPACE","SDL_SCANCODE_MINUS","SDL_SCANCODE_EQUALS","SDL_SCANCODE_LEFTBRACKET","SDL_SCANCODE_RIGHTBRACKET","SDL_SCANCODE_BACKSLASH","SDL_SCANCODE_NONUSHASH","SDL_SCANCODE_SEMICOLON","SDL_SCANCODE_APOSTROPHE","SDL_SCANCODE_GRAVE","SDL_SCANCODE_COMMA","SDL_SCANCODE_PERIOD","SDL_SCANCODE_SLASH","SDL_SCANCODE_CAPSLOCK","SDL_SCANCODE_F1","SDL_SCANCODE_F2","SDL_SCANCODE_F3","SDL_SCANCODE_F4","SDL_SCANCODE_F5","SDL_SCANCODE_F6","SDL_SCANCODE_F7","SDL_SCANCODE_F8","SDL_SCANCODE_F9","SDL_SCANCODE_F10","SDL_SCANCODE_F11","SDL_SCANCODE_F12","SDL_SCANCODE_PRINTSCREEN","SDL_SCANCODE_SCROLLLOCK","SDL_SCANCODE_PAUSE","SDL_SCANCODE_INSERT","SDL_SCANCODE_HOME","SDL_SCANCODE_PAGEUP","SDL_SCANCODE_DELETE","SDL_SCANCODE_END","SDL_SCANCODE_PAGEDOWN","SDL_SCANCODE_RIGHT","SDL_SCANCODE_LEFT","SDL_SCANCODE_DOWN","SDL_SCANCODE_UP","SDL_SCANCODE_NUMLOCKCLEAR","SDL_SCANCODE_KP_DIVIDE","SDL_SCANCODE_KP_MULTIPLY","SDL_SCANCODE_KP_MINUS","SDL_SCANCODE_KP_PLUS","SDL_SCANCODE_KP_ENTER","SDL_SCANCODE_KP_1","SDL_SCANCODE_KP_2","SDL_SCANCODE_KP_3","SDL_SCANCODE_KP_4","SDL_SCANCODE_KP_5","SDL_SCANCODE_KP_6","SDL_SCANCODE_KP_7","SDL_SCANCODE_KP_8","SDL_SCANCODE_KP_9","SDL_SCANCODE_KP_0","SDL_SCANCODE_KP_PERIOD","SDL_SCANCODE_NONUSBACKSLASH","SDL_SCANCODE_APPLICATION","SDL_SCANCODE_POWER","SDL_SCANCODE_KP_EQUALS","SDL_SCANCODE_F13","SDL_SCANCODE_F14","SDL_SCANCODE_F15","SDL_SCANCODE_F16","SDL_SCANCODE_F17","SDL_SCANCODE_F18","SDL_SCANCODE_F19","SDL_SCANCODE_F20","SDL_SCANCODE_F21","SDL_SCANCODE_F22","SDL_SCANCODE_F23","SDL_SCANCODE_F24","SDL_SCANCODE_EXECUTE","SDL_SCANCODE_HELP","SDL_SCANCODE_MENU","SDL_SCANCODE_SELECT","SDL_SCANCODE_STOP","SDL_SCANCODE_AGAIN","SDL_SCANCODE_UNDO","SDL_SCANCODE_CUT","SDL_SCANCODE_COPY","SDL_SCANCODE_PASTE","SDL_SCANCODE_FIND","SDL_SCANCODE_MUTE","SDL_SCANCODE_VOLUMEUP","SDL_SCANCODE_VOLUMEDOWN","SDL_SCANCODE_KP_COMMA","SDL_SCANCODE_KP_EQUALSAS400","SDL_SCANCODE_INTERNATIONAL1","SDL_SCANCODE_INTERNATIONAL2","SDL_SCANCODE_INTERNATIONAL3","SDL_SCANCODE_INTERNATIONAL4","SDL_SCANCODE_INTERNATIONAL5","SDL_SCANCODE_INTERNATIONAL6","SDL_SCANCODE_INTERNATIONAL7","SDL_SCANCODE_INTERNATIONAL8","SDL_SCANCODE_INTERNATIONAL9","SDL_SCANCODE_LANG1","SDL_SCANCODE_LANG2","SDL_SCANCODE_LANG3","SDL_SCANCODE_LANG4","SDL_SCANCODE_LANG5","SDL_SCANCODE_LANG6","SDL_SCANCODE_LANG7","SDL_SCANCODE_LANG8","SDL_SCANCODE_LANG9","SDL_SCANCODE_ALTERASE","SDL_SCANCODE_SYSREQ","SDL_SCANCODE_CANCEL","SDL_SCANCODE_CLEAR","SDL_SCANCODE_PRIOR","SDL_SCANCODE_RETURN2","SDL_SCANCODE_SEPARATOR","SDL_SCANCODE_OUT","SDL_SCANCODE_OPER","SDL_SCANCODE_CLEARAGAIN","SDL_SCANCODE_CRSEL","SDL_SCANCODE_EXSEL","SDL_SCANCODE_KP_00","SDL_SCANCODE_KP_000","SDL_SCANCODE_THOUSANDSSEPARATOR","SDL_SCANCODE_DECIMALSEPARATOR","SDL_SCANCODE_CURRENCYUNIT","SDL_SCANCODE_CURRENCYSUBUNIT","SDL_SCANCODE_KP_LEFTPAREN","SDL_SCANCODE_KP_RIGHTPAREN","SDL_SCANCODE_KP_LEFTBRACE","SDL_SCANCODE_KP_RIGHTBRACE","SDL_SCANCODE_KP_TAB","SDL_SCANCODE_KP_BACKSPACE","SDL_SCANCODE_KP_A","SDL_SCANCODE_KP_B","SDL_SCANCODE_KP_C","SDL_SCANCODE_KP_D","SDL_SCANCODE_KP_E","SDL_SCANCODE_KP_F","SDL_SCANCODE_KP_XOR","SDL_SCANCODE_KP_POWER","SDL_SCANCODE_KP_PERCENT","SDL_SCANCODE_KP_LESS","SDL_SCANCODE_KP_GREATER","SDL_SCANCODE_KP_AMPERSAND","SDL_SCANCODE_KP_DBLAMPERSAND","SDL_SCANCODE_KP_VERTICALBAR","SDL_SCANCODE_KP_DBLVERTICALBAR","SDL_SCANCODE_KP_COLON","SDL_SCANCODE_KP_HASH","SDL_SCANCODE_KP_SPACE","SDL_SCANCODE_KP_AT","SDL_SCANCODE_KP_EXCLAM","SDL_SCANCODE_KP_MEMSTORE","SDL_SCANCODE_KP_MEMRECALL","SDL_SCANCODE_KP_MEMCLEAR","SDL_SCANCODE_KP_MEMADD","SDL_SCANCODE_KP_MEMSUBTRACT","SDL_SCANCODE_KP_MEMMULTIPLY","SDL_SCANCODE_KP_MEMDIVIDE","SDL_SCANCODE_KP_PLUSMINUS","SDL_SCANCODE_KP_CLEAR","SDL_SCANCODE_KP_CLEARENTRY","SDL_SCANCODE_KP_BINARY","SDL_SCANCODE_KP_OCTAL","SDL_SCANCODE_KP_DECIMAL","SDL_SCANCODE_KP_HEXADECIMAL","SDL_SCANCODE_LCTRL","SDL_SCANCODE_LSHIFT","SDL_SCANCODE_LALT","SDL_SCANCODE_LGUI","SDL_SCANCODE_RCTRL","SDL_SCANCODE_RSHIFT","SDL_SCANCODE_RALT","SDL_SCANCODE_RGUI","SDL_SCANCODE_MODE","SDL_SCANCODE_AUDIONEXT","SDL_SCANCODE_AUDIOPREV","SDL_SCANCODE_AUDIOSTOP","SDL_SCANCODE_AUDIOPLAY","SDL_SCANCODE_AUDIOMUTE","SDL_SCANCODE_MEDIASELECT","SDL_SCANCODE_WWW","SDL_SCANCODE_MAIL","SDL_SCANCODE_CALCULATOR","SDL_SCANCODE_COMPUTER","SDL_SCANCODE_AC_SEARCH","SDL_SCANCODE_AC_HOME","SDL_SCANCODE_AC_BACK","SDL_SCANCODE_AC_FORWARD","SDL_SCANCODE_AC_STOP","SDL_SCANCODE_AC_REFRESH","SDL_SCANCODE_AC_BOOKMARKS","SDL_SCANCODE_BRIGHTNESSDOWN","SDL_SCANCODE_BRIGHTNESSUP","SDL_SCANCODE_DISPLAYSWITCH","SDL_SCANCODE_KBDILLUMTOGGLE","SDL_SCANCODE_KBDILLUMDOWN","SDL_SCANCODE_KBDILLUMUP","SDL_SCANCODE_EJECT","SDL_SCANCODE_SLEEP","SDL_SCANCODE_APP1","SDL_SCANCODE_APP2","SDL_SCANCODE_AUDIOREWIND","SDL_SCANCODE_AUDIOFASTFORWARD","SDL_NUM_SCANCODES","SDL_Keycode","SDLK_UNKNOWN","SDLK_RETURN","SDLK_ESCAPE","SDLK_BACKSPACE","SDLK_TAB","SDLK_SPACE","SDLK_EXCLAIM","SDLK_QUOTEDBL","SDLK_HASH","SDLK_PERCENT","SDLK_DOLLAR","SDLK_AMPERSAND","SDLK_QUOTE","SDLK_LEFTPAREN","SDLK_RIGHTPAREN","SDLK_ASTERISK","SDLK_PLUS","SDLK_COMMA","SDLK_MINUS","SDLK_PERIOD","SDLK_SLASH","SDLK_0","SDLK_1","SDLK_2","SDLK_3","SDLK_4","SDLK_5","SDLK_6","SDLK_7","SDLK_8","SDLK_9","SDLK_COLON","SDLK_SEMICOLON","SDLK_LESS","SDLK_EQUALS","SDLK_GREATER","SDLK_QUESTION","SDLK_AT","SDLK_LEFTBRACKET","SDLK_BACKSLASH","SDLK_RIGHTBRACKET","SDLK_CARET","SDLK_UNDERSCORE","SDLK_BACKQUOTE","SDLK_a","SDLK_b","SDLK_c","SDLK_d","SDLK_e","SDLK_f","SDLK_g","SDLK_h","SDLK_i","SDLK_j","SDLK_k","SDLK_l","SDLK_m","SDLK_n","SDLK_o","SDLK_p","SDLK_q","SDLK_r","SDLK_s","SDLK_t","SDLK_u","SDLK_v","SDLK_w","SDLK_x","SDLK_y","SDLK_z","SDLK_CAPSLOCK","SDLK_F1","SDLK_F2","SDLK_F3","SDLK_F4","SDLK_F5","SDLK_F6","SDLK_F7","SDLK_F8","SDLK_F9","SDLK_F10","SDLK_F11","SDLK_F12","SDLK_PRINTSCREEN","SDLK_SCROLLLOCK","SDLK_PAUSE","SDLK_INSERT","SDLK_HOME","SDLK_PAGEUP","SDLK_DELETE","SDLK_END","SDLK_PAGEDOWN","SDLK_RIGHT","SDLK_LEFT","SDLK_DOWN","SDLK_UP","SDLK_NUMLOCKCLEAR","SDLK_KP_DIVIDE","SDLK_KP_MULTIPLY","SDLK_KP_MINUS","SDLK_KP_PLUS","SDLK_KP_ENTER","SDLK_KP_1","SDLK_KP_2","SDLK_KP_3","SDLK_KP_4","SDLK_KP_5","SDLK_KP_6","SDLK_KP_7","SDLK_KP_8","SDLK_KP_9","SDLK_KP_0","SDLK_KP_PERIOD","SDLK_APPLICATION","SDLK_POWER","SDLK_KP_EQUALS","SDLK_F13","SDLK_F14","SDLK_F15","SDLK_F16","SDLK_F17","SDLK_F18","SDLK_F19","SDLK_F20","SDLK_F21","SDLK_F22","SDLK_F23","SDLK_F24","SDLK_EXECUTE","SDLK_HELP","SDLK_MENU","SDLK_SELECT","SDLK_STOP","SDLK_AGAIN","SDLK_UNDO","SDLK_CUT","SDLK_COPY","SDLK_PASTE","SDLK_FIND","SDLK_MUTE","SDLK_VOLUMEUP","SDLK_VOLUMEDOWN","SDLK_KP_COMMA","SDLK_KP_EQUALSAS400","SDLK_ALTERASE","SDLK_SYSREQ","SDLK_CANCEL","SDLK_CLEAR","SDLK_PRIOR","SDLK_RETURN2","SDLK_SEPARATOR","SDLK_OUT","SDLK_OPER","SDLK_CLEARAGAIN","SDLK_CRSEL","SDLK_EXSEL","SDLK_KP_00","SDLK_KP_000","SDLK_THOUSANDSSEPARATOR","SDLK_DECIMALSEPARATOR","SDLK_CURRENCYUNIT","SDLK_CURRENCYSUBUNIT","SDLK_KP_LEFTPAREN","SDLK_KP_RIGHTPAREN","SDLK_KP_LEFTBRACE","SDLK_KP_RIGHTBRACE","SDLK_KP_TAB","SDLK_KP_BACKSPACE","SDLK_KP_A","SDLK_KP_B","SDLK_KP_C","SDLK_KP_D","SDLK_KP_E","SDLK_KP_F","SDLK_KP_XOR","SDLK_KP_POWER","SDLK_KP_PERCENT","SDLK_KP_LESS","SDLK_KP_GREATER","SDLK_KP_AMPERSAND","SDLK_KP_DBLAMPERSAND","SDLK_KP_VERTICALBAR","SDLK_KP_DBLVERTICALBAR","SDLK_KP_COLON","SDLK_KP_HASH","SDLK_KP_SPACE","SDLK_KP_AT","SDLK_KP_EXCLAM","SDLK_KP_MEMSTORE","SDLK_KP_MEMRECALL","SDLK_KP_MEMCLEAR","SDLK_KP_MEMADD","SDLK_KP_MEMSUBTRACT","SDLK_KP_MEMMULTIPLY","SDLK_KP_MEMDIVIDE","SDLK_KP_PLUSMINUS","SDLK_KP_CLEAR","SDLK_KP_CLEARENTRY","SDLK_KP_BINARY","SDLK_KP_OCTAL","SDLK_KP_DECIMAL","SDLK_KP_HEXADECIMAL","SDLK_LCTRL","SDLK_LSHIFT","SDLK_LALT","SDLK_LGUI","SDLK_RCTRL","SDLK_RSHIFT","SDLK_RALT","SDLK_RGUI","SDLK_MODE","SDLK_AUDIONEXT","SDLK_AUDIOPREV","SDLK_AUDIOSTOP","SDLK_AUDIOPLAY","SDLK_AUDIOMUTE","SDLK_MEDIASELECT","SDLK_WWW","SDLK_MAIL","SDLK_CALCULATOR","SDLK_COMPUTER","SDLK_AC_SEARCH","SDLK_AC_HOME","SDLK_AC_BACK","SDLK_AC_FORWARD","SDLK_AC_STOP","SDLK_AC_REFRESH","SDLK_AC_BOOKMARKS","SDLK_BRIGHTNESSDOWN","SDLK_BRIGHTNESSUP","SDLK_DISPLAYSWITCH","SDLK_KBDILLUMTOGGLE","SDLK_KBDILLUMDOWN","SDLK_KBDILLUMUP","SDLK_EJECT","SDLK_SLEEP","SDLK_APP1","SDLK_APP2","SDLK_AUDIOREWIND","SDLK_AUDIOFASTFORWARD","_bindgen_ty_7","SDLK_UNKNOWN","SDLK_RETURN","SDLK_ESCAPE","SDLK_BACKSPACE","SDLK_TAB","SDLK_SPACE","SDLK_EXCLAIM","SDLK_QUOTEDBL","SDLK_HASH","SDLK_PERCENT","SDLK_DOLLAR","SDLK_AMPERSAND","SDLK_QUOTE","SDLK_LEFTPAREN","SDLK_RIGHTPAREN","SDLK_ASTERISK","SDLK_PLUS","SDLK_COMMA","SDLK_MINUS","SDLK_PERIOD","SDLK_SLASH","SDLK_0","SDLK_1","SDLK_2","SDLK_3","SDLK_4","SDLK_5","SDLK_6","SDLK_7","SDLK_8","SDLK_9","SDLK_COLON","SDLK_SEMICOLON","SDLK_LESS","SDLK_EQUALS","SDLK_GREATER","SDLK_QUESTION","SDLK_AT","SDLK_LEFTBRACKET","SDLK_BACKSLASH","SDLK_RIGHTBRACKET","SDLK_CARET","SDLK_UNDERSCORE","SDLK_BACKQUOTE","SDLK_a","SDLK_b","SDLK_c","SDLK_d","SDLK_e","SDLK_f","SDLK_g","SDLK_h","SDLK_i","SDLK_j","SDLK_k","SDLK_l","SDLK_m","SDLK_n","SDLK_o","SDLK_p","SDLK_q","SDLK_r","SDLK_s","SDLK_t","SDLK_u","SDLK_v","SDLK_w","SDLK_x","SDLK_y","SDLK_z","SDLK_CAPSLOCK","SDLK_F1","SDLK_F2","SDLK_F3","SDLK_F4","SDLK_F5","SDLK_F6","SDLK_F7","SDLK_F8","SDLK_F9","SDLK_F10","SDLK_F11","SDLK_F12","SDLK_PRINTSCREEN","SDLK_SCROLLLOCK","SDLK_PAUSE","SDLK_INSERT","SDLK_HOME","SDLK_PAGEUP","SDLK_DELETE","SDLK_END","SDLK_PAGEDOWN","SDLK_RIGHT","SDLK_LEFT","SDLK_DOWN","SDLK_UP","SDLK_NUMLOCKCLEAR","SDLK_KP_DIVIDE","SDLK_KP_MULTIPLY","SDLK_KP_MINUS","SDLK_KP_PLUS","SDLK_KP_ENTER","SDLK_KP_1","SDLK_KP_2","SDLK_KP_3","SDLK_KP_4","SDLK_KP_5","SDLK_KP_6","SDLK_KP_7","SDLK_KP_8","SDLK_KP_9","SDLK_KP_0","SDLK_KP_PERIOD","SDLK_APPLICATION","SDLK_POWER","SDLK_KP_EQUALS","SDLK_F13","SDLK_F14","SDLK_F15","SDLK_F16","SDLK_F17","SDLK_F18","SDLK_F19","SDLK_F20","SDLK_F21","SDLK_F22","SDLK_F23","SDLK_F24","SDLK_EXECUTE","SDLK_HELP","SDLK_MENU","SDLK_SELECT","SDLK_STOP","SDLK_AGAIN","SDLK_UNDO","SDLK_CUT","SDLK_COPY","SDLK_PASTE","SDLK_FIND","SDLK_MUTE","SDLK_VOLUMEUP","SDLK_VOLUMEDOWN","SDLK_KP_COMMA","SDLK_KP_EQUALSAS400","SDLK_ALTERASE","SDLK_SYSREQ","SDLK_CANCEL","SDLK_CLEAR","SDLK_PRIOR","SDLK_RETURN2","SDLK_SEPARATOR","SDLK_OUT","SDLK_OPER","SDLK_CLEARAGAIN","SDLK_CRSEL","SDLK_EXSEL","SDLK_KP_00","SDLK_KP_000","SDLK_THOUSANDSSEPARATOR","SDLK_DECIMALSEPARATOR","SDLK_CURRENCYUNIT","SDLK_CURRENCYSUBUNIT","SDLK_KP_LEFTPAREN","SDLK_KP_RIGHTPAREN","SDLK_KP_LEFTBRACE","SDLK_KP_RIGHTBRACE","SDLK_KP_TAB","SDLK_KP_BACKSPACE","SDLK_KP_A","SDLK_KP_B","SDLK_KP_C","SDLK_KP_D","SDLK_KP_E","SDLK_KP_F","SDLK_KP_XOR","SDLK_KP_POWER","SDLK_KP_PERCENT","SDLK_KP_LESS","SDLK_KP_GREATER","SDLK_KP_AMPERSAND","SDLK_KP_DBLAMPERSAND","SDLK_KP_VERTICALBAR","SDLK_KP_DBLVERTICALBAR","SDLK_KP_COLON","SDLK_KP_HASH","SDLK_KP_SPACE","SDLK_KP_AT","SDLK_KP_EXCLAM","SDLK_KP_MEMSTORE","SDLK_KP_MEMRECALL","SDLK_KP_MEMCLEAR","SDLK_KP_MEMADD","SDLK_KP_MEMSUBTRACT","SDLK_KP_MEMMULTIPLY","SDLK_KP_MEMDIVIDE","SDLK_KP_PLUSMINUS","SDLK_KP_CLEAR","SDLK_KP_CLEARENTRY","SDLK_KP_BINARY","SDLK_KP_OCTAL","SDLK_KP_DECIMAL","SDLK_KP_HEXADECIMAL","SDLK_LCTRL","SDLK_LSHIFT","SDLK_LALT","SDLK_LGUI","SDLK_RCTRL","SDLK_RSHIFT","SDLK_RALT","SDLK_RGUI","SDLK_MODE","SDLK_AUDIONEXT","SDLK_AUDIOPREV","SDLK_AUDIOSTOP","SDLK_AUDIOPLAY","SDLK_AUDIOMUTE","SDLK_MEDIASELECT","SDLK_WWW","SDLK_MAIL","SDLK_CALCULATOR","SDLK_COMPUTER","SDLK_AC_SEARCH","SDLK_AC_HOME","SDLK_AC_BACK","SDLK_AC_FORWARD","SDLK_AC_STOP","SDLK_AC_REFRESH","SDLK_AC_BOOKMARKS","SDLK_BRIGHTNESSDOWN","SDLK_BRIGHTNESSUP","SDLK_DISPLAYSWITCH","SDLK_KBDILLUMTOGGLE","SDLK_KBDILLUMDOWN","SDLK_KBDILLUMUP","SDLK_EJECT","SDLK_SLEEP","SDLK_APP1","SDLK_APP2","SDLK_AUDIOREWIND","SDLK_AUDIOFASTFORWARD","SDL_Keymod","KMOD_NONE","KMOD_LSHIFT","KMOD_RSHIFT","KMOD_LCTRL","KMOD_RCTRL","KMOD_LALT","KMOD_RALT","KMOD_LGUI","KMOD_RGUI","KMOD_NUM","KMOD_CAPS","KMOD_MODE","KMOD_RESERVED","SDL_Keysym","scancode","sym","mod_","unused","SDL_Cursor","SDL_SystemCursor","SDL_SYSTEM_CURSOR_ARROW","SDL_SYSTEM_CURSOR_IBEAM","SDL_SYSTEM_CURSOR_WAIT","SDL_SYSTEM_CURSOR_CROSSHAIR","SDL_SYSTEM_CURSOR_WAITARROW","SDL_SYSTEM_CURSOR_SIZENWSE","SDL_SYSTEM_CURSOR_SIZENESW","SDL_SYSTEM_CURSOR_SIZEWE","SDL_SYSTEM_CURSOR_SIZENS","SDL_SYSTEM_CURSOR_SIZEALL","SDL_SYSTEM_CURSOR_NO","SDL_SYSTEM_CURSOR_HAND","SDL_NUM_SYSTEM_CURSORS","SDL_MouseWheelDirection","SDL_MOUSEWHEEL_NORMAL","SDL_MOUSEWHEEL_FLIPPED","_SDL_Joystick","SDL_Joystick","SDL_JoystickGUID","data","SDL_JoystickID","SDL_JoystickType","SDL_JOYSTICK_TYPE_UNKNOWN","SDL_JOYSTICK_TYPE_GAMECONTROLLER","SDL_JOYSTICK_TYPE_WHEEL","SDL_JOYSTICK_TYPE_ARCADE_STICK","SDL_JOYSTICK_TYPE_FLIGHT_STICK","SDL_JOYSTICK_TYPE_DANCE_PAD","SDL_JOYSTICK_TYPE_GUITAR","SDL_JOYSTICK_TYPE_DRUM_KIT","SDL_JOYSTICK_TYPE_ARCADE_PAD","SDL_JOYSTICK_TYPE_THROTTLE","SDL_JoystickPowerLevel","SDL_JOYSTICK_POWER_UNKNOWN","SDL_JOYSTICK_POWER_EMPTY","SDL_JOYSTICK_POWER_LOW","SDL_JOYSTICK_POWER_MEDIUM","SDL_JOYSTICK_POWER_FULL","SDL_JOYSTICK_POWER_WIRED","SDL_JOYSTICK_POWER_MAX","_SDL_GameController","SDL_GameController","SDL_GameControllerBindType","SDL_CONTROLLER_BINDTYPE_NONE","SDL_CONTROLLER_BINDTYPE_BUTTON","SDL_CONTROLLER_BINDTYPE_AXIS","SDL_CONTROLLER_BINDTYPE_HAT","SDL_GameControllerButtonBind","bindType","value","SDL_GameControllerButtonBind__bindgen_ty_1","button","axis","hat","SDL_GameControllerButtonBind__bindgen_ty_1__bindgen_ty_1","hat","hat_mask","SDL_GameControllerAxis","SDL_CONTROLLER_AXIS_INVALID","SDL_CONTROLLER_AXIS_LEFTX","SDL_CONTROLLER_AXIS_LEFTY","SDL_CONTROLLER_AXIS_RIGHTX","SDL_CONTROLLER_AXIS_RIGHTY","SDL_CONTROLLER_AXIS_TRIGGERLEFT","SDL_CONTROLLER_AXIS_TRIGGERRIGHT","SDL_CONTROLLER_AXIS_MAX","SDL_GameControllerButton","SDL_CONTROLLER_BUTTON_INVALID","SDL_CONTROLLER_BUTTON_A","SDL_CONTROLLER_BUTTON_B","SDL_CONTROLLER_BUTTON_X","SDL_CONTROLLER_BUTTON_Y","SDL_CONTROLLER_BUTTON_BACK","SDL_CONTROLLER_BUTTON_GUIDE","SDL_CONTROLLER_BUTTON_START","SDL_CONTROLLER_BUTTON_LEFTSTICK","SDL_CONTROLLER_BUTTON_RIGHTSTICK","SDL_CONTROLLER_BUTTON_LEFTSHOULDER","SDL_CONTROLLER_BUTTON_RIGHTSHOULDER","SDL_CONTROLLER_BUTTON_DPAD_UP","SDL_CONTROLLER_BUTTON_DPAD_DOWN","SDL_CONTROLLER_BUTTON_DPAD_LEFT","SDL_CONTROLLER_BUTTON_DPAD_RIGHT","SDL_CONTROLLER_BUTTON_MAX","SDL_TouchID","SDL_FingerID","SDL_Finger","id","x","y","pressure","SDL_GestureID","SDL_EventType","SDL_FIRSTEVENT","SDL_QUIT","SDL_APP_TERMINATING","SDL_APP_LOWMEMORY","SDL_APP_WILLENTERBACKGROUND","SDL_APP_DIDENTERBACKGROUND","SDL_APP_WILLENTERFOREGROUND","SDL_APP_DIDENTERFOREGROUND","SDL_WINDOWEVENT","SDL_SYSWMEVENT","SDL_KEYDOWN","SDL_KEYUP","SDL_TEXTEDITING","SDL_TEXTINPUT","SDL_KEYMAPCHANGED","SDL_MOUSEMOTION","SDL_MOUSEBUTTONDOWN","SDL_MOUSEBUTTONUP","SDL_MOUSEWHEEL","SDL_JOYAXISMOTION","SDL_JOYBALLMOTION","SDL_JOYHATMOTION","SDL_JOYBUTTONDOWN","SDL_JOYBUTTONUP","SDL_JOYDEVICEADDED","SDL_JOYDEVICEREMOVED","SDL_CONTROLLERAXISMOTION","SDL_CONTROLLERBUTTONDOWN","SDL_CONTROLLERBUTTONUP","SDL_CONTROLLERDEVICEADDED","SDL_CONTROLLERDEVICEREMOVED","SDL_CONTROLLERDEVICEREMAPPED","SDL_FINGERDOWN","SDL_FINGERUP","SDL_FINGERMOTION","SDL_DOLLARGESTURE","SDL_DOLLARRECORD","SDL_MULTIGESTURE","SDL_CLIPBOARDUPDATE","SDL_DROPFILE","SDL_DROPTEXT","SDL_DROPBEGIN","SDL_DROPCOMPLETE","SDL_AUDIODEVICEADDED","SDL_AUDIODEVICEREMOVED","SDL_RENDER_TARGETS_RESET","SDL_RENDER_DEVICE_RESET","SDL_USEREVENT","SDL_LASTEVENT","SDL_CommonEvent","type_","timestamp","SDL_WindowEvent","type_","timestamp","windowID","event","padding1","padding2","padding3","data1","data2","SDL_KeyboardEvent","type_","timestamp","windowID","state","repeat","padding2","padding3","keysym","SDL_TextEditingEvent","type_","timestamp","windowID","text","start","length","SDL_TextInputEvent","type_","timestamp","windowID","text","SDL_MouseMotionEvent","type_","timestamp","windowID","which","state","x","y","xrel","yrel","SDL_MouseButtonEvent","type_","timestamp","windowID","which","button","state","clicks","padding1","x","y","SDL_MouseWheelEvent","type_","timestamp","windowID","which","x","y","direction","SDL_JoyAxisEvent","type_","timestamp","which","axis","padding1","padding2","padding3","value","padding4","SDL_JoyBallEvent","type_","timestamp","which","ball","padding1","padding2","padding3","xrel","yrel","SDL_JoyHatEvent","type_","timestamp","which","hat","value","padding1","padding2","SDL_JoyButtonEvent","type_","timestamp","which","button","state","padding1","padding2","SDL_JoyDeviceEvent","type_","timestamp","which","SDL_ControllerAxisEvent","type_","timestamp","which","axis","padding1","padding2","padding3","value","padding4","SDL_ControllerButtonEvent","type_","timestamp","which","button","state","padding1","padding2","SDL_ControllerDeviceEvent","type_","timestamp","which","SDL_AudioDeviceEvent","type_","timestamp","which","iscapture","padding1","padding2","padding3","SDL_TouchFingerEvent","type_","timestamp","touchId","fingerId","x","y","dx","dy","pressure","SDL_MultiGestureEvent","type_","timestamp","touchId","dTheta","dDist","x","y","numFingers","padding","SDL_DollarGestureEvent","type_","timestamp","touchId","gestureId","numFingers","error","x","y","SDL_DropEvent","type_","timestamp","file","windowID","SDL_QuitEvent","type_","timestamp","SDL_OSEvent","type_","timestamp","SDL_UserEvent","type_","timestamp","windowID","code","data1","data2","SDL_SysWMmsg","SDL_SysWMEvent","type_","timestamp","msg","SDL_Event","type_","common","window","key","edit","text","motion","button","wheel","jaxis","jball","jhat","jbutton","jdevice","caxis","cbutton","cdevice","adevice","quit","user","syswm","tfinger","mgesture","dgesture","drop","padding","SDL_eventaction","SDL_ADDEVENT","SDL_PEEKEVENT","SDL_GETEVENT","SDL_EventFilter","_SDL_Haptic","SDL_Haptic","SDL_HapticDirection","type_","dir","SDL_HapticConstant","type_","direction","length","delay","button","interval","level","attack_length","attack_level","fade_length","fade_level","SDL_HapticPeriodic","type_","direction","length","delay","button","interval","period","magnitude","offset","phase","attack_length","attack_level","fade_length","fade_level","SDL_HapticCondition","type_","direction","length","delay","button","interval","right_sat","left_sat","right_coeff","left_coeff","deadband","center","SDL_HapticRamp","type_","direction","length","delay","button","interval","start","end","attack_length","attack_level","fade_length","fade_level","SDL_HapticLeftRight","type_","length","large_magnitude","small_magnitude","SDL_HapticCustom","type_","direction","length","delay","button","interval","channels","period","samples","data","attack_length","attack_level","fade_length","fade_level","SDL_HapticEffect","type_","constant","periodic","condition","ramp","leftright","custom","SDL_HintPriority","SDL_HINT_DEFAULT","SDL_HINT_NORMAL","SDL_HINT_OVERRIDE","SDL_HintCallback","SDL_LOG_CATEGORY_APPLICATION","SDL_LOG_CATEGORY_ERROR","SDL_LOG_CATEGORY_ASSERT","SDL_LOG_CATEGORY_SYSTEM","SDL_LOG_CATEGORY_AUDIO","SDL_LOG_CATEGORY_VIDEO","SDL_LOG_CATEGORY_RENDER","SDL_LOG_CATEGORY_INPUT","SDL_LOG_CATEGORY_TEST","SDL_LOG_CATEGORY_RESERVED1","SDL_LOG_CATEGORY_RESERVED2","SDL_LOG_CATEGORY_RESERVED3","SDL_LOG_CATEGORY_RESERVED4","SDL_LOG_CATEGORY_RESERVED5","SDL_LOG_CATEGORY_RESERVED6","SDL_LOG_CATEGORY_RESERVED7","SDL_LOG_CATEGORY_RESERVED8","SDL_LOG_CATEGORY_RESERVED9","SDL_LOG_CATEGORY_RESERVED10","SDL_LOG_CATEGORY_CUSTOM","_bindgen_ty_8","SDL_LOG_CATEGORY_APPLICATION","SDL_LOG_CATEGORY_ERROR","SDL_LOG_CATEGORY_ASSERT","SDL_LOG_CATEGORY_SYSTEM","SDL_LOG_CATEGORY_AUDIO","SDL_LOG_CATEGORY_VIDEO","SDL_LOG_CATEGORY_RENDER","SDL_LOG_CATEGORY_INPUT","SDL_LOG_CATEGORY_TEST","SDL_LOG_CATEGORY_RESERVED1","SDL_LOG_CATEGORY_RESERVED2","SDL_LOG_CATEGORY_RESERVED3","SDL_LOG_CATEGORY_RESERVED4","SDL_LOG_CATEGORY_RESERVED5","SDL_LOG_CATEGORY_RESERVED6","SDL_LOG_CATEGORY_RESERVED7","SDL_LOG_CATEGORY_RESERVED8","SDL_LOG_CATEGORY_RESERVED9","SDL_LOG_CATEGORY_RESERVED10","SDL_LOG_CATEGORY_CUSTOM","SDL_LogPriority","SDL_LOG_PRIORITY_VERBOSE","SDL_LOG_PRIORITY_DEBUG","SDL_LOG_PRIORITY_INFO","SDL_LOG_PRIORITY_WARN","SDL_LOG_PRIORITY_ERROR","SDL_LOG_PRIORITY_CRITICAL","SDL_NUM_LOG_PRIORITIES","SDL_LogOutputFunction","SDL_MessageBoxFlags","SDL_MESSAGEBOX_ERROR","SDL_MESSAGEBOX_WARNING","SDL_MESSAGEBOX_INFORMATION","SDL_MessageBoxButtonFlags","SDL_MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT","SDL_MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT","SDL_MessageBoxButtonData","flags","buttonid","text","SDL_MessageBoxColor","r","g","b","SDL_MessageBoxColorType","SDL_MESSAGEBOX_COLOR_BACKGROUND","SDL_MESSAGEBOX_COLOR_TEXT","SDL_MESSAGEBOX_COLOR_BUTTON_BORDER","SDL_MESSAGEBOX_COLOR_BUTTON_BACKGROUND","SDL_MESSAGEBOX_COLOR_BUTTON_SELECTED","SDL_MESSAGEBOX_COLOR_MAX","SDL_MessageBoxColorScheme","colors","SDL_MessageBoxData","flags","window","title","message","numbuttons","buttons","colorScheme","SDL_PowerState","SDL_POWERSTATE_UNKNOWN","SDL_POWERSTATE_ON_BATTERY","SDL_POWERSTATE_NO_BATTERY","SDL_POWERSTATE_CHARGING","SDL_POWERSTATE_CHARGED","SDL_RendererFlags","SDL_RENDERER_SOFTWARE","SDL_RENDERER_ACCELERATED","SDL_RENDERER_PRESENTVSYNC","SDL_RENDERER_TARGETTEXTURE","SDL_RendererInfo","name","flags","num_texture_formats","texture_formats","max_texture_width","max_texture_height","SDL_TextureAccess","SDL_TEXTUREACCESS_STATIC","SDL_TEXTUREACCESS_STREAMING","SDL_TEXTUREACCESS_TARGET","SDL_TextureModulate","SDL_TEXTUREMODULATE_NONE","SDL_TEXTUREMODULATE_COLOR","SDL_TEXTUREMODULATE_ALPHA","SDL_RendererFlip","SDL_FLIP_NONE","SDL_FLIP_HORIZONTAL","SDL_FLIP_VERTICAL","SDL_Renderer","SDL_Texture","WindowShapeMode","ShapeModeDefault","ShapeModeBinarizeAlpha","ShapeModeReverseBinarizeAlpha","ShapeModeColorKey","SDL_WindowShapeParams","binarizationCutoff","colorKey","SDL_WindowShapeMode","mode","parameters","SDL_TimerCallback","SDL_TimerID","SDL_version","major","minor","patch","__builtin_va_list","__va_list_tag","gp_offset","fp_offset","overflow_arg_area","reg_save_area","SDL_BlitMap","_address","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash"],"q":["sdl2_sysd":["\\\\brief Gets the name of the platform.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This function converts a string between encodings in one …","The prototype for the application’s main() function","This is called by the real SDL main function to let the …","","\\\\brief Set an application-defined assertion handler.","\\\\brief Get the default assertion handler.","\\\\brief Get the current assertion handler.","\\\\brief Get a list of all assertion failures.","\\\\brief Reset the list of all assertion failures.","\\\\brief Try to lock a spin lock by setting it to a …","\\\\brief Lock a spin lock by setting it to a non-zero value.","\\\\brief Unlock a spin lock by setting it to 0. Always …","Memory barriers are designed to prevent reads and writes …","","\\\\brief Set an atomic variable to a new value if it is …","\\\\brief Set an atomic variable to a value.","\\\\brief Get the value of an atomic variable","\\\\brief Add to an atomic variable.","\\\\brief Set a pointer to a new value if it is currently an …","\\\\brief Set a pointer to a value atomically.","\\\\brief Get the value of a pointer atomically.","","","","","Create a mutex, initialized unlocked.","","Try to lock the mutex","","Destroy a mutex.","Create a semaphore, initialized with value, returns NULL …","Destroy a semaphore.","This function suspends the calling thread until the …","Non-blocking variant of SDL_SemWait().","Variant of SDL_SemWait() with a timeout in milliseconds.","Atomically increases the semaphore’s count (not …","Returns the current count of the semaphore.","Create a condition variable.","Destroy a condition variable.","Restart one of the threads that are waiting on the …","Restart all threads that are waiting on the condition …","Wait on the condition variable, unlocking the provided …","Waits for at most \\\\c ms milliseconds, and returns 0 if …","Create a thread.","Get the thread name, as it was specified in …","Get the thread identifier for the current thread.","Get the thread identifier for the specified thread.","Set the priority for the current thread","Wait for a thread to finish. Threads that haven’t been …","A thread may be “detached” to signify that it should …","\\\\brief Create an identifier that is globally visible to …","\\\\brief Get the value associated with a thread local …","\\\\brief Set the value associated with a thread local …","","","","","","","Load all the data from an SDL data stream.","","","","","","","","","","","","","","","","","","","This function returns the name of the current audio …","This function opens the audio device with the desired …","Get the number of available devices exposed by the …","Get the human-readable name of a specific audio device. …","Open a specific audio device. Passing in a device name of …","","","","","This function loads a WAVE from the data source, …","This function frees data previously allocated with …","This function takes a source format and rate and a …","Once you have initialized the \\\\c cvt structure using …","This takes two audio buffers of the playing audio format …","This works like SDL_MixAudio(), but you specify the audio …","Queue more audio on non-callback devices.","Dequeue more audio on non-callback devices.","Get the number of bytes of still-queued audio.","Drop any queued audio data. For playback devices, this is …","","","","","This function shuts down audio processing and closes the …","","\\\\brief Put UTF-8 text into the clipboard","\\\\brief Get UTF-8 text from the clipboard, which must be …","\\\\brief Returns a flag indicating whether the clipboard …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This function returns the number of CPU cores available.","This function returns the L1 cache line size of the CPU","This function returns true if the CPU has the RDTSC …","This function returns true if the CPU has AltiVec …","This function returns true if the CPU has MMX features.","This function returns true if the CPU has 3DNow! features.","This function returns true if the CPU has SSE features.","This function returns true if the CPU has SSE2 features.","This function returns true if the CPU has SSE3 features.","This function returns true if the CPU has SSE4.1 features.","This function returns true if the CPU has SSE4.2 features.","This function returns true if the CPU has AVX features.","This function returns true if the CPU has AVX2 features.","This function returns true if the CPU has NEON (ARM SIMD) …","This function returns the amount of RAM configured in the …","\\\\brief Get the human readable name of a pixel format","\\\\brief Convert one of the enumerated pixel formats to a …","\\\\brief Convert a bpp and RGBA masks to an enumerated …","\\\\brief Create an SDL_PixelFormat structure from a pixel …","\\\\brief Free an SDL_PixelFormat structure.","\\\\brief Create a palette structure with the specified …","\\\\brief Set the palette for a pixel format structure.","\\\\brief Set a range of colors in a palette.","\\\\brief Free a palette created with SDL_AllocPalette().","\\\\brief Maps an RGB triple to an opaque pixel value for a …","\\\\brief Maps an RGBA quadruple to a pixel value for a …","\\\\brief Get the RGB components from a pixel of the …","\\\\brief Get the RGBA components from a pixel of the …","\\\\brief Calculate a 256 entry gamma ramp for a gamma value.","\\\\brief Determine whether two rectangles intersect.","\\\\brief Calculate the intersection of two rectangles.","\\\\brief Calculate the union of two rectangles.","\\\\brief Calculate a minimal rectangle enclosing a set of …","\\\\brief Calculate the intersection of a rectangle and line …","\\\\brief Create a custom blend mode, which may or may not …","Allocate and free an RGB surface.","","","","","\\\\brief Set the palette used by a surface.","\\\\brief Sets up a surface for directly accessing the …","\\\\sa SDL_LockSurface()","Load a surface from a seekable SDL data stream (memory or …","Save a surface to a seekable SDL data stream (memory or …","\\\\brief Sets the RLE acceleration hint for a surface.","\\\\brief Sets the color key (transparent pixel) in a …","\\\\brief Gets the color key (transparent pixel) in a …","\\\\brief Set an additional color value used in blit …","\\\\brief Get the additional color value used in blit …","\\\\brief Set an additional alpha value used in blit …","\\\\brief Get the additional alpha value used in blit …","\\\\brief Set the blend mode used for blit operations.","\\\\brief Get the blend mode used for blit operations.","Sets the clipping rectangle for the destination surface …","Gets the clipping rectangle for the destination surface …","","Creates a new surface of the specified format, and then …","","\\\\brief Copy a block of pixels of one format to another …","Performs a fast fill of the given rectangle with \\\\c color.","","This is the public blit function, SDL_BlitSurface(), and …","This is a semi-private blit function and it performs …","\\\\brief Perform a fast, low quality, stretch blit between …","This is the public scaled blit function, …","This is a semi-private blit function and it performs …","\\\\brief Get the number of video drivers compiled into SDL","\\\\brief Get the name of a built in video driver.","\\\\brief Initialize the video subsystem, optionally …","\\\\brief Shuts down the video subsystem.","\\\\brief Returns the name of the currently initialized …","\\\\brief Returns the number of available video displays.","\\\\brief Get the name of a display in UTF-8 encoding","\\\\brief Get the desktop area represented by a display, …","\\\\brief Get the dots/pixels-per-inch for a display","\\\\brief Get the usable desktop area represented by a …","\\\\brief Returns the number of available display modes.","\\\\brief Fill in information about a specific display mode.","\\\\brief Fill in information about the desktop display mode.","\\\\brief Fill in information about the current display mode.","\\\\brief Get the closest match to the requested display …","\\\\brief Get the display index associated with a window.","\\\\brief Set the display mode used when a fullscreen window …","\\\\brief Fill in information about the display mode used …","\\\\brief Get the pixel format associated with the window.","\\\\brief Create a window with the specified position, …","\\\\brief Create an SDL window from an existing native …","\\\\brief Get the numeric ID of a window, for logging …","\\\\brief Get a window from a stored ID, or NULL if it doesn…","\\\\brief Get the window flags.","\\\\brief Set the title of a window, in UTF-8 format.","\\\\brief Get the title of a window, in UTF-8 format.","\\\\brief Set the icon for a window.","\\\\brief Associate an arbitrary named pointer with a window.","\\\\brief Retrieve the data pointer associated with a window.","\\\\brief Set the position of a window.","\\\\brief Get the position of a window.","\\\\brief Set the size of a window’s client area.","\\\\brief Get the size of a window’s client area.","\\\\brief Get the size of a window’s borders (decorations) …","\\\\brief Set the minimum size of a window’s client area.","\\\\brief Get the minimum size of a window’s client area.","\\\\brief Set the maximum size of a window’s client area.","\\\\brief Get the maximum size of a window’s client area.","\\\\brief Set the border state of a window.","\\\\brief Set the user-resizable state of a window.","\\\\brief Show a window.","\\\\brief Hide a window.","\\\\brief Raise a window above other windows and set the …","\\\\brief Make a window as large as possible.","\\\\brief Minimize a window to an iconic representation.","\\\\brief Restore the size and position of a minimized or …","\\\\brief Set a window’s fullscreen state.","\\\\brief Get the SDL surface associated with the window.","\\\\brief Copy the window surface to the screen.","\\\\brief Copy a number of rectangles on the window surface …","\\\\brief Set a window’s input grab mode.","\\\\brief Get a window’s input grab mode.","\\\\brief Get the window that currently has an input grab …","\\\\brief Set the brightness (gamma correction) for a window.","\\\\brief Get the brightness (gamma correction) for a window.","\\\\brief Set the opacity for a window","\\\\brief Get the opacity of a window.","\\\\brief Sets the window as a modal for another window …","\\\\brief Explicitly sets input focus to the window.","\\\\brief Set the gamma ramp for a window.","\\\\brief Get the gamma ramp for a window.","\\\\brief Provide a callback that decides if a window region …","\\\\brief Destroy a window.","\\\\brief Returns whether the screensaver is currently …","\\\\brief Allow the screen to be blanked by a screensaver","\\\\brief Prevent the screen from being blanked by a …","\\\\brief Dynamically load an OpenGL library.","\\\\brief Get the address of an OpenGL function.","\\\\brief Unload the OpenGL library previously loaded by …","\\\\brief Return true if an OpenGL extension is supported …","\\\\brief Reset all previously set OpenGL context attributes …","\\\\brief Set an OpenGL window attribute before window …","\\\\brief Get the actual value for an attribute from the …","\\\\brief Create an OpenGL context for use with an OpenGL …","\\\\brief Set up an OpenGL context for rendering into an …","\\\\brief Get the currently active OpenGL window.","\\\\brief Get the currently active OpenGL context.","\\\\brief Get the size of a window’s underlying drawable …","\\\\brief Set the swap interval for the current OpenGL …","\\\\brief Get the swap interval for the current OpenGL …","\\\\brief Swap the OpenGL buffers for a window, if …","\\\\brief Delete an OpenGL context.","\\\\brief Get the window which currently has keyboard focus.","\\\\brief Get a snapshot of the current state of the …","\\\\brief Get the current key modifier state for the …","\\\\brief Set the current key modifier state for the …","\\\\brief Get the key code corresponding to the given …","\\\\brief Get the scancode corresponding to the given key …","\\\\brief Get a human-readable name for a scancode.","\\\\brief Get a scancode from a human-readable name","\\\\brief Get a human-readable name for a key.","\\\\brief Get a key code from a human-readable name","\\\\brief Start accepting Unicode text input events. This …","\\\\brief Return whether or not Unicode text input events …","\\\\brief Stop receiving any text input events. This …","\\\\brief Set the rectangle used to type Unicode text inputs.…","\\\\brief Returns whether the platform has some screen …","\\\\brief Returns whether the screen keyboard is shown for …","\\\\brief Get the window which currently has mouse focus.","\\\\brief Retrieve the current state of the mouse.","\\\\brief Get the current state of the mouse, in relation to …","\\\\brief Retrieve the relative state of the mouse.","\\\\brief Moves the mouse to the given position within the …","\\\\brief Moves the mouse to the given position in global …","\\\\brief Set relative mouse mode.","\\\\brief Capture the mouse, to track input outside an SDL …","\\\\brief Query whether relative mouse mode is enabled.","\\\\brief Create a cursor, using the specified bitmap data …","\\\\brief Create a color cursor.","\\\\brief Create a system cursor.","\\\\brief Set the active cursor.","\\\\brief Return the active cursor.","\\\\brief Return the default cursor.","\\\\brief Frees a cursor created with SDL_CreateCursor() or …","\\\\brief Toggle whether or not the cursor is shown.","Count the number of joysticks attached to the system …","Get the implementation dependent name of a joystick. This …","Return the GUID for the joystick at this index This can …","Get the USB vendor ID of a joystick, if available. This …","Get the USB product ID of a joystick, if available. This …","Get the product version of a joystick, if available. This …","Get the type of a joystick, if available. This can be …","Get the instance ID of a joystick. This can be called …","Open a joystick for use. The index passed as an argument …","Return the SDL_Joystick associated with an instance id.","Return the name for this currently opened joystick. If no …","Return the GUID for this opened joystick","Get the USB vendor ID of an opened joystick, if available.…","Get the USB product ID of an opened joystick, if …","Get the product version of an opened joystick, if …","Get the type of an opened joystick.","Return a string representation for this guid. pszGUID …","Convert a string into a joystick guid","Returns SDL_TRUE if the joystick has been opened and …","Get the instance ID of an opened joystick or -1 if the …","Get the number of general axis controls on a joystick.","Get the number of trackballs on a joystick.","Get the number of POV hats on a joystick.","Get the number of buttons on a joystick.","Update the current state of the open joysticks.","Enable/disable joystick event polling.","Get the current state of an axis control on a joystick.","Get the initial state of an axis control on a joystick.","Get the current state of a POV hat on a joystick.","Get the ball axis change since the last poll.","Get the current state of a button on a joystick.","Close a joystick previously opened with …","Return the battery level of this joystick","Load a set of mappings from a seekable SDL data stream …","Add or update an existing mapping configuration","Get the number of mappings installed","Get the mapping at a particular index.","Get a mapping string for a GUID","Get a mapping string for an open GameController","Is the joystick on this index supported by the game …","Get the implementation dependent name of a game …","Open a game controller for use. The index passed as an …","Return the SDL_GameController associated with an instance …","Return the name for this currently opened controller","Get the USB vendor ID of an opened controller, if …","Get the USB product ID of an opened controller, if …","Get the product version of an opened controller, if …","Returns SDL_TRUE if the controller has been opened and …","Get the underlying joystick object used by a controller","Enable/disable controller event polling.","Update the current state of the open game controllers.","turn this string into a axis mapping","turn this axis enum into a string mapping","Get the SDL joystick layer binding for this controller …","Get the current state of an axis control on a game …","turn this string into a button mapping","turn this button enum into a string mapping","Get the SDL joystick layer binding for this controller …","Get the current state of a button on a game controller.","Close a controller previously opened with …","\\\\brief Get the number of registered touch devices.","\\\\brief Get the touch ID with the given index, or 0 if the …","\\\\brief Get the number of active fingers for a given touch …","\\\\brief Get the finger object of the given touch, with the …","\\\\brief Begin Recording a gesture on the specified touch, …","\\\\brief Save all currently loaded Dollar Gesture templates","\\\\brief Save a currently loaded Dollar Gesture template","\\\\brief Load Dollar Gesture templates from a file","Pumps the event loop, gathering events from the input …","Checks the event queue for messages and optionally …","Checks to see if certain event types are in the event …","","This function clears events from the event queue This …","","\\\\brief Polls for currently pending events.","\\\\brief Waits indefinitely for the next available event.","\\\\brief Waits until the specified timeout (in …","\\\\brief Add an event to the event queue.","Sets up a filter to process all events before they change …","Return the current event filter - can be used to “chain…","Add a function which is called when an event is added to …","Remove an event watch function added with …","Run the filter function on the current event queue, …","This function allows you to set the state of processing …","This function allocates a set of user-defined events, and …","\\\\brief Get the path where the application resides.","\\\\brief Get the user-and-app-specific path where files can …","\\\\brief Count the number of haptic devices attached to the …","\\\\brief Get the implementation dependent name of a haptic …","\\\\brief Opens a haptic device for use.","\\\\brief Checks if the haptic device at index has been …","\\\\brief Gets the index of a haptic device.","\\\\brief Gets whether or not the current mouse has haptic …","\\\\brief Tries to open a haptic device from the current …","\\\\brief Checks to see if a joystick has haptic features.","\\\\brief Opens a haptic device for use from a joystick …","\\\\brief Closes a haptic device previously opened with …","\\\\brief Returns the number of effects a haptic device can …","\\\\brief Returns the number of effects a haptic device can …","\\\\brief Gets the haptic device’s supported features in …","\\\\brief Gets the number of haptic axes the device has.","\\\\brief Checks to see if effect is supported by haptic.","\\\\brief Creates a new haptic effect on the device.","\\\\brief Updates the properties of an effect.","\\\\brief Runs the haptic effect on its associated haptic …","\\\\brief Stops the haptic effect on its associated haptic …","\\\\brief Destroys a haptic effect on the device.","\\\\brief Gets the status of the current effect on the …","\\\\brief Sets the global gain of the device.","\\\\brief Sets the global autocenter of the device.","\\\\brief Pauses a haptic device.","\\\\brief Unpauses a haptic device.","\\\\brief Stops all the currently playing effects on a …","\\\\brief Checks to see if rumble is supported on a haptic …","\\\\brief Initializes the haptic device for simple rumble …","\\\\brief Runs simple rumble on a haptic device","\\\\brief Stops the simple rumble on a haptic device.","\\\\brief Set a hint with a specific priority","\\\\brief Set a hint with normal priority","\\\\brief Get a hint","\\\\brief Get a hint","\\\\brief Add a function to watch a particular hint","\\\\brief Remove a function watching a particular hint","\\\\brief  Clear all hints","This function dynamically loads a shared object and …","Given an object handle, this function looks up the …","Unload a shared object from memory.","\\\\brief Set the priority of all log categories","\\\\brief Set the priority of a particular log category","\\\\brief Get the priority of a particular log category","\\\\brief Reset all priorities to default.","\\\\brief Log a message with SDL_LOG_CATEGORY_APPLICATION …","\\\\brief Log a message with SDL_LOG_PRIORITY_VERBOSE","\\\\brief Log a message with SDL_LOG_PRIORITY_DEBUG","\\\\brief Log a message with SDL_LOG_PRIORITY_INFO","\\\\brief Log a message with SDL_LOG_PRIORITY_WARN","\\\\brief Log a message with SDL_LOG_PRIORITY_ERROR","\\\\brief Log a message with SDL_LOG_PRIORITY_CRITICAL","\\\\brief Log a message with the specified category and …","\\\\brief Log a message with the specified category and …","\\\\brief Get the current log output function.","\\\\brief This function allows you to replace the default …","\\\\brief Create a modal message box.","\\\\brief Create a simple modal message box","\\\\brief Get the current power supply details.","\\\\brief Get the number of 2D rendering drivers available …","\\\\brief Get information about a specific 2D rendering …","\\\\brief Create a window and default renderer","\\\\brief Create a 2D rendering context for a window.","\\\\brief Create a 2D software rendering context for a …","\\\\brief Get the renderer associated with a window.","\\\\brief Get information about a rendering context.","\\\\brief Get the output size in pixels of a rendering …","\\\\brief Create a texture for a rendering context.","\\\\brief Create a texture from an existing surface.","\\\\brief Query the attributes of a texture","\\\\brief Set an additional color value used in render copy …","\\\\brief Get the additional color value used in render copy …","\\\\brief Set an additional alpha value used in render copy …","\\\\brief Get the additional alpha value used in render copy …","\\\\brief Set the blend mode used for texture copy …","\\\\brief Get the blend mode used for texture copy …","\\\\brief Update the given texture rectangle with new pixel …","\\\\brief Update a rectangle within a planar YV12 or IYUV …","\\\\brief Lock a portion of the texture for write-only pixel …","\\\\brief Unlock a texture, uploading the changes to video …","\\\\brief Determines whether a window supports the use of …","\\\\brief Set a texture as the current rendering target.","\\\\brief Get the current render target or NULL for the …","\\\\brief Set device independent resolution for rendering","\\\\brief Get device independent resolution for rendering","\\\\brief Set whether to force integer scales for …","\\\\brief Get whether integer scales are forced for …","\\\\brief Set the drawing area for rendering on the current …","\\\\brief Get the drawing area for the current target.","\\\\brief Set the clip rectangle for the current target.","\\\\brief Get the clip rectangle for the current target.","\\\\brief Get whether clipping is enabled on the given …","\\\\brief Set the drawing scale for rendering on the current …","\\\\brief Get the drawing scale for the current target.","\\\\brief Set the color used for drawing operations (Rect, …","\\\\brief Get the color used for drawing operations (Rect, …","\\\\brief Set the blend mode used for drawing operations …","\\\\brief Get the blend mode used for drawing operations.","\\\\brief Clear the current rendering target with the …","\\\\brief Draw a point on the current rendering target.","\\\\brief Draw multiple points on the current rendering …","\\\\brief Draw a line on the current rendering target.","\\\\brief Draw a series of connected lines on the current …","\\\\brief Draw a rectangle on the current rendering target.","\\\\brief Draw some number of rectangles on the current …","\\\\brief Fill a rectangle on the current rendering target …","\\\\brief Fill some number of rectangles on the current …","\\\\brief Copy a portion of the texture to the current …","\\\\brief Copy a portion of the source texture to the …","\\\\brief Read pixels from the current rendering target.","\\\\brief Update the screen with rendering performed.","\\\\brief Destroy the specified texture.","\\\\brief Destroy the rendering context for a window and …","\\\\brief Bind the texture to the current OpenGL/ES/ES2 …","\\\\brief Unbind a texture from the current OpenGL/ES/ES2 …","\\\\brief Create a window that can be shaped with the …","\\\\brief Return whether the given window is a shaped window.","\\\\brief Set the shape and parameters of a shaped window.","\\\\brief Get the shape parameters of a shaped window.","\\\\brief Get the number of milliseconds since the SDL …","\\\\brief Get the current value of the high resolution …","\\\\brief Get the count per second of the high resolution …","\\\\brief Wait a specified number of milliseconds before …","\\\\brief Add a new timer to the pool of timers already …","\\\\brief Remove a timer knowing its ID.","\\\\brief Get the version of SDL that is linked against your …","\\\\brief Get the code revision of SDL that is linked …","\\\\brief Get the revision number of SDL that is linked …","This function initializes  the subsystems specified by \\\\c …","This function initializes specific SDL subsystems","This function cleans up specific SDL subsystems","This function returns a mask of the specified subsystems …","This function cleans up all initialized subsystems. You …brief A signed 8-bit integer type.","\\\\brief An unsigned 8-bit integer type.","\\\\brief A signed 16-bit integer type.","\\\\brief An unsigned 16-bit integer type.","\\\\brief A signed 32-bit integer type.","\\\\brief An unsigned 32-bit integer type.","\\\\brief A signed 64-bit integer type.","\\\\brief An unsigned 64-bit integer type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\brief A type representing an atomic integer value.  It …","","","","","","","","","","","","","","","","The SDL thread priority.","","","","The function passed to SDL_CreateThread(). It is passed a …","This is the read/write operation structure – very basic.","Return the size of the file in this rwops, or -1 if …","Seek to \\\\c offset relative to \\\\c whence, one of stdio’s …","Read up to \\\\c maxnum objects each of size \\\\c size from …","Write exactly \\\\c num objects each of size \\\\c size from …","Close and free an allocated SDL_RWops structure.","","","","","","","","","","","","","\\\\brief Audio format flags.","This function is called when the audio device needs more …","The calculated values in this structure are calculated by …","< DSP frequency – samples per second","< Audio data format","< Number of channels: 1 mono, 2 stereo","< Audio buffer silence value (calculated)","< Audio buffer size in sample FRAMES (total samples …","< Necessary for some compile environments","< Audio buffer size in bytes (calculated)","< Callback that feeds the audio device (NULL to use …","< Userdata passed to callback (ignored for NULL …","","< Set to 1 if conversion possible","< Source audio format","< Target audio format","< Rate conversion increment","< Buffer to hold entire audio data","< Length of original audio buffer","< Length of converted audio buffer","< buffer must be len*len_mult big","< Given len, final size is len*len_ratio","< NULL-terminated list of filter functions","< Current audio conversion function","","SDL Audio Device IDs.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pixel type.","","","","","","","","","","","","","","","","Bitmap pixel order, high bit -> low bit.","","","","","","","","","","","","","Packed component order, high bit -> low bit.","","","","","","","","","","","","","","","","","Array component order, low byte -> high byte.","","","","","","","","","","","","","","","","","Packed component layout.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\note Everything in the pixel format structure is …","","","","","","","","","","","","","","","","","","","","\\\\brief  The structure that defines a point","","","\\\\brief A rectangle, with the origin at the upper left.","","","","","\\\\brief The blend mode used in SDL_RenderCopy() and …","","","","","","\\\\brief The blend operation used when combining source and …","","","","","","\\\\brief The normalized factor used to multiply pixel …","","","","","","","","","","","\\\\brief A collection of pixels used in software blitting.","< Read-only","< Read-only","< Read-only","< Read-only","< Read-only","< Read-write","< Read-write","< Read-only","< Read-only","< Read-only","< Private","< Read-mostly","\\\\brief The type of function used for surface blitting …","\\\\brief  The structure that defines a display mode","< pixel format","< width, in screen coordinates","< height, in screen coordinates","< refresh rate (or zero for unspecified)","< driver-specific data, initialize to 0","","\\\\brief The flags on a window","","","","","","","","","","","","","","","","","","","","","","\\\\brief Event subtype for window events","","","","","","","","","","","","","","","","","","\\\\brief An opaque handle to an OpenGL context.","\\\\brief OpenGL configuration attributes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\brief Possible return values from the SDL_HitTest …","","","","","","","","","","","\\\\brief Callback used for hit-testing.","\\\\brief The SDL keyboard scancode representationbrief The SDL virtual key representationbrief Enumeration of valid key mods (possibly OR’d …","","","","","","","","","","","","","","\\\\brief The SDL keysym structure, used in key events.","< SDL physical key code - see ::SDL_Scancode for details","< SDL virtual key code - see ::SDL_Keycode for details","< current key modifiers","","","\\\\brief Cursor types for SDL_CreateSystemCursor().","","","","","","","","","","","","","","\\\\brief Scroll direction types for the Scroll event","","","","","","","This is a unique ID for a joystick for the time it is …","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the SDL joystick layer binding for this controller …","","","","","","","","","","The list of axes available from a controller","","","","","","","","","The list of buttons available from a controller","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\brief The types of events that can be delivered.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\brief Fields shared by every event","","< In milliseconds, populated using SDL_GetTicks()","\\\\brief Window state change event data (event.window.*)","< ::SDL_WINDOWEVENT","< In milliseconds, populated using SDL_GetTicks()","< The associated window","< ::SDL_WindowEventID","","","","< event dependent data","< event dependent data","\\\\brief Keyboard button event structure (event.key.*)","< ::SDL_KEYDOWN or ::SDL_KEYUP","< In milliseconds, populated using SDL_GetTicks()","< The window with keyboard focus, if any","< ::SDL_PRESSED or ::SDL_RELEASED","< Non-zero if this is a key repeat","","","< The key that was pressed or released","\\\\brief Keyboard text editing event structure (event.edit.*…","< ::SDL_TEXTEDITING","< In milliseconds, populated using SDL_GetTicks()","< The window with keyboard focus, if any","< The editing text","< The start cursor of selected editing text","< The length of selected editing text","\\\\brief Keyboard text input event structure (event.text.*)","< ::SDL_TEXTINPUT","< In milliseconds, populated using SDL_GetTicks()","< The window with keyboard focus, if any","< The input text","\\\\brief Mouse motion event structure (event.motion.*)","< ::SDL_MOUSEMOTION","< In milliseconds, populated using SDL_GetTicks()","< The window with mouse focus, if any","< The mouse instance id, or SDL_TOUCH_MOUSEID","< The current button state","< X coordinate, relative to window","< Y coordinate, relative to window","< The relative motion in the X direction","< The relative motion in the Y direction","\\\\brief Mouse button event structure (event.button.*)","< ::SDL_MOUSEBUTTONDOWN or ::SDL_MOUSEBUTTONUP","< In milliseconds, populated using SDL_GetTicks()","< The window with mouse focus, if any","< The mouse instance id, or SDL_TOUCH_MOUSEID","< The mouse button index","< ::SDL_PRESSED or ::SDL_RELEASED","< 1 for single-click, 2 for double-click, etc.","","< X coordinate, relative to window","< Y coordinate, relative to window","\\\\brief Mouse wheel event structure (event.wheel.*)","< ::SDL_MOUSEWHEEL","< In milliseconds, populated using SDL_GetTicks()","< The window with mouse focus, if any","< The mouse instance id, or SDL_TOUCH_MOUSEID","< The amount scrolled horizontally, positive to the right …","< The amount scrolled vertically, positive away from the …","< Set to one of the SDL_MOUSEWHEEL_* defines. When …","\\\\brief Joystick axis motion event structure (event.jaxis.*…","< ::SDL_JOYAXISMOTION","< In milliseconds, populated using SDL_GetTicks()","< The joystick instance id","< The joystick axis index","","","","< The axis value (range: -32768 to 32767)","","\\\\brief Joystick trackball motion event structure …","< ::SDL_JOYBALLMOTION","< In milliseconds, populated using SDL_GetTicks()","< The joystick instance id","< The joystick trackball index","","","","< The relative motion in the X direction","< The relative motion in the Y direction","\\\\brief Joystick hat position change event structure …","< ::SDL_JOYHATMOTION","< In milliseconds, populated using SDL_GetTicks()","< The joystick instance id","< The joystick hat index","< The hat position value. \\\\sa ::SDL_HAT_LEFTUP …","","","\\\\brief Joystick button event structure (event.jbutton.*)","< ::SDL_JOYBUTTONDOWN or ::SDL_JOYBUTTONUP","< In milliseconds, populated using SDL_GetTicks()","< The joystick instance id","< The joystick button index","< ::SDL_PRESSED or ::SDL_RELEASED","","","\\\\brief Joystick device event structure (event.jdevice.*)","< ::SDL_JOYDEVICEADDED or ::SDL_JOYDEVICEREMOVED","< In milliseconds, populated using SDL_GetTicks()","< The joystick device index for the ADDED event, instance …","\\\\brief Game controller axis motion event structure …","< ::SDL_CONTROLLERAXISMOTION","< In milliseconds, populated using SDL_GetTicks()","< The joystick instance id","< The controller axis (SDL_GameControllerAxis)","","","","< The axis value (range: -32768 to 32767)","","\\\\brief Game controller button event structure …","< ::SDL_CONTROLLERBUTTONDOWN or ::SDL_CONTROLLERBUTTONUP","< In milliseconds, populated using SDL_GetTicks()","< The joystick instance id","< The controller button (SDL_GameControllerButton)","< ::SDL_PRESSED or ::SDL_RELEASED","","","\\\\brief Controller device event structure (event.cdevice.*)","< ::SDL_CONTROLLERDEVICEADDED, …","< In milliseconds, populated using SDL_GetTicks()","< The joystick device index for the ADDED event, instance …","\\\\brief Audio device event structure (event.adevice.*)","< ::SDL_AUDIODEVICEADDED, or ::SDL_AUDIODEVICEREMOVED","< In milliseconds, populated using SDL_GetTicks()","< The audio device index for the ADDED event (valid until …","< zero if an output device, non-zero if a capture device.","","","","\\\\brief Touch finger event structure (event.tfinger.*)","< ::SDL_FINGERMOTION or ::SDL_FINGERDOWN or ::SDL_FINGERUP","< In milliseconds, populated using SDL_GetTicks()","< The touch device id","","< Normalized in the range 0…1","< Normalized in the range 0…1","< Normalized in the range -1…1","< Normalized in the range -1…1","< Normalized in the range 0…1","\\\\brief Multiple Finger Gesture Event (event.mgesture.*)","< ::SDL_MULTIGESTURE","< In milliseconds, populated using SDL_GetTicks()","< The touch device id","","","","","","","\\\\brief Dollar Gesture Event (event.dgesture.*)","< ::SDL_DOLLARGESTURE or ::SDL_DOLLARRECORD","< In milliseconds, populated using SDL_GetTicks()","< The touch device id","","","","< Normalized center of gesture","< Normalized center of gesture","\\\\brief An event used to request a file open by the system …","< ::SDL_DROPBEGIN or ::SDL_DROPFILE or ::SDL_DROPTEXT or …","< In milliseconds, populated using SDL_GetTicks()","< The file name, which should be freed with SDL_free(), …","< The window that was dropped on, if any","\\\\brief The “quit requested” event","< ::SDL_QUIT","< In milliseconds, populated using SDL_GetTicks()","\\\\brief OS Specific event","< ::SDL_QUIT","< In milliseconds, populated using SDL_GetTicks()","\\\\brief A user-defined event type (event.user.*)","< ::SDL_USEREVENT through ::SDL_LASTEVENT-1","< In milliseconds, populated using SDL_GetTicks()","< The associated window if any","< User defined event code","< User defined data pointer","< User defined data pointer","","\\\\brief A video driver dependent system event (event.syswm.…","< ::SDL_SYSWMEVENT","< In milliseconds, populated using SDL_GetTicks()","< driver dependent data, defined in SDL_syswm.h","\\\\brief General event structure","< Event type, shared with all events","< Common event data","< Window event data","< Keyboard event data","< Text editing event data","< Text input event data","< Mouse motion event data","< Mouse button event data","< Mouse wheel event data","< Joystick axis event data","< Joystick ball event data","< Joystick hat event data","< Joystick button event data","< Joystick device change event data","< Game Controller axis event data","< Game Controller button event data","< Game Controller device event data","< Audio device event data","< Quit request event data","< Custom event data","< System dependent window event data","< Touch finger event data","< Gesture event data","< Gesture event data","< Drag and drop event data","","","","","","","","","\\\\brief Structure that represents a haptic direction.","< The type of encoding.","< The encoded direction.","\\\\brief A structure containing a template for a Constant …","< ::SDL_HAPTIC_CONSTANT","< Direction of the effect.","< Duration of the effect.","< Delay before starting the effect.","< Button that triggers the effect.","< How soon it can be triggered again after button.","< Strength of the constant effect.","< Duration of the attack.","< Level at the start of the attack.","< Duration of the fade.","< Level at the end of the fade.","\\\\brief A structure containing a template for a Periodic …","< ::SDL_HAPTIC_SINE, ::SDL_HAPTIC_LEFTRIGHT, …","< Direction of the effect.","< Duration of the effect.","< Delay before starting the effect.","< Button that triggers the effect.","< How soon it can be triggered again after button.","< Period of the wave.","< Peak value; if negative, equivalent to 180 degrees …","< Mean value of the wave.","< Positive phase shift given by hundredth of a degree.","< Duration of the attack.","< Level at the start of the attack.","< Duration of the fade.","< Level at the end of the fade.","\\\\brief A structure containing a template for a Condition …","< ::SDL_HAPTIC_SPRING, ::SDL_HAPTIC_DAMPER, …","< Direction of the effect - Not used ATM.","< Duration of the effect.","< Delay before starting the effect.","< Button that triggers the effect.","< How soon it can be triggered again after button.","< Level when joystick is to the positive side; max 0xFFFF.","< Level when joystick is to the negative side; max 0xFFFF.","< How fast to increase the force towards the positive …","< How fast to increase the force towards the negative …","< Size of the dead zone; max 0xFFFF: whole axis-range …","< Position of the dead zone.","\\\\brief A structure containing a template for a Ramp …","< ::SDL_HAPTIC_RAMP","< Direction of the effect.","< Duration of the effect.","< Delay before starting the effect.","< Button that triggers the effect.","< How soon it can be triggered again after button.","< Beginning strength level.","< Ending strength level.","< Duration of the attack.","< Level at the start of the attack.","< Duration of the fade.","< Level at the end of the fade.","\\\\brief A structure containing a template for a Left/Right …","< ::SDL_HAPTIC_LEFTRIGHT","< Duration of the effect.","< Control of the large controller motor.","< Control of the small controller motor.","\\\\brief A structure containing a template for the …","< ::SDL_HAPTIC_CUSTOM","< Direction of the effect.","< Duration of the effect.","< Delay before starting the effect.","< Button that triggers the effect.","< How soon it can be triggered again after button.","< Axes to use, minimum of one.","< Sample periods.","< Amount of samples.","< Should contain channels*samples items.","< Duration of the attack.","< Level at the start of the attack.","< Duration of the fade.","< Level at the end of the fade.","\\\\brief The generic template for any haptic effect.","< Effect type.","< Constant effect.","< Periodic effect.","< Condition effect.","< Ramp effect.","< Left/Right effect.","< Custom effect.","\\\\brief  An enumeration of hint priorities","","","","\\\\brief type definition of the hint callback function.","","","","","","","","","","","","","","","","","","","","","\\\\brief The predefined log categories","","","","","","","","","","","","","","","","","","","","","\\\\brief The predefined log priorities","","","","","","","","\\\\brief The prototype for the log output function","\\\\brief SDL_MessageBox flags. If supported will display …","","","","\\\\brief Flags for SDL_MessageBoxButtonData.","","","\\\\brief Individual button data.","< ::SDL_MessageBoxButtonFlags","< User defined button id (value returned via …","< The UTF-8 button text","\\\\brief RGB value used in a message box color scheme","","","","","","","","","","","\\\\brief A set of colors to use for message box dialogs","","\\\\brief MessageBox structure containing title, text, …","< ::SDL_MessageBoxFlags","< Parent window, can be NULL","< UTF-8 title","< UTF-8 message text","","","< ::SDL_MessageBoxColorScheme, can be NULL to use system …","\\\\brief The basic state for the system’s power supply.","","","","","","\\\\brief Flags used when creating a rendering context","","","","","\\\\brief Information on the capabilities of a render driver …","< The name of the renderer","< Supported ::SDL_RendererFlags","< The number of available texture formats","< The available texture formats","< The maximum texture width","< The maximum texture height","\\\\brief The access pattern allowed for a texture.","","","","\\\\brief The texture channel modulation used in …","","","","\\\\brief Flip constants for SDL_RenderCopyEx","","","","","","\\\\brief An enum denoting the specific type of contents …","","","","","\\\\brief A union containing parameters for shaped windows.","\\\\brief A cutoff alpha value for binarization of the …","","\\\\brief A struct that tags the SDL_WindowShapeParams union …","\\\\brief The mode of these window-shape parameters.","\\\\brief Window-shape parameters.","Function prototype for the timer callback function.","Definition of the timer ID type.","\\\\brief Information the version of SDL in use.","< major version","< minor version","< update version","","","","","","","< Privateif":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["sdl_bool",4]],[[],["sdl_dummy_enum",4]],[[],["_sdl_iconv_t",3]],[[],["sdl_assertstate",4]],[[]],[[]],[[],["sdl_errorcode",4]],[[],["sdl_mutex",3]],[[],["sdl_semaphore",3]],[[],["sdl_cond",3]],[[],["sdl_thread",3]],[[],["sdl_threadpriority",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["sdl_audiostatus",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["_bindgen_ty_1",4]],[[],["_bindgen_ty_2",4]],[[],["_bindgen_ty_3",4]],[[],["_bindgen_ty_4",4]],[[],["_bindgen_ty_5",4]],[[],["_bindgen_ty_6",4]],[[]],[[]],[[]],[[]],[[]],[[],["sdl_blendmode",4]],[[],["sdl_blendoperation",4]],[[],["sdl_blendfactor",4]],[[]],[[]],[[],["sdl_window",3]],[[],["sdl_windowflags",4]],[[],["sdl_windoweventid",4]],[[],["sdl_glattr",4]],[[],["sdl_glprofile",4]],[[],["sdl_glcontextflag",4]],[[],["sdl_glcontextreleaseflag",4]],[[],["sdl_glcontextresetnotification",4]],[[],["sdl_hittestresult",4]],[[],["sdl_scancode",4]],[[],["_bindgen_ty_7",4]],[[],["sdl_keymod",4]],[[]],[[],["sdl_cursor",3]],[[],["sdl_systemcursor",4]],[[],["sdl_mousewheeldirection",4]],[[],["_sdl_joystick",3]],[[]],[[],["sdl_joysticktype",4]],[[],["sdl_joystickpowerlevel",4]],[[],["_sdl_gamecontroller",3]],[[],["sdl_gamecontrollerbindtype",4]],[[]],[[]],[[]],[[],["sdl_gamecontrolleraxis",4]],[[],["sdl_gamecontrollerbutton",4]],[[]],[[],["sdl_eventtype",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["sdl_syswmmsg",3]],[[]],[[]],[[],["sdl_eventaction",4]],[[],["_sdl_haptic",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["sdl_hintpriority",4]],[[],["_bindgen_ty_8",4]],[[],["sdl_logpriority",4]],[[],["sdl_messageboxflags",4]],[[],["sdl_messageboxbuttonflags",4]],[[]],[[]],[[],["sdl_messageboxcolortype",4]],[[]],[[]],[[],["sdl_powerstate",4]],[[],["sdl_rendererflags",4]],[[]],[[],["sdl_textureaccess",4]],[[],["sdl_texturemodulate",4]],[[],["sdl_rendererflip",4]],[[],["sdl_renderer",3]],[[],["sdl_texture",3]],[[],["windowshapemode",4]],[[]],[[]],[[]],[[]],[[]],[[["sdl_bool",4]],["bool",15]],[[["sdl_dummy_enum",4]],["bool",15]],[[["sdl_assertstate",4]],["bool",15]],[[["sdl_errorcode",4]],["bool",15]],[[["sdl_threadpriority",4]],["bool",15]],[[["sdl_audiostatus",4]],["bool",15]],[[["_bindgen_ty_1",4]],["bool",15]],[[["_bindgen_ty_2",4]],["bool",15]],[[["_bindgen_ty_3",4]],["bool",15]],[[["_bindgen_ty_4",4]],["bool",15]],[[["_bindgen_ty_5",4]],["bool",15]],[[["_bindgen_ty_6",4]],["bool",15]],[[["sdl_blendmode",4]],["bool",15]],[[["sdl_blendoperation",4]],["bool",15]],[[["sdl_blendfactor",4]],["bool",15]],[[["sdl_windowflags",4]],["bool",15]],[[["sdl_windoweventid",4]],["bool",15]],[[["sdl_glattr",4]],["bool",15]],[[["sdl_glprofile",4]],["bool",15]],[[["sdl_glcontextflag",4]],["bool",15]],[[["sdl_glcontextreleaseflag",4]],["bool",15]],[[["sdl_glcontextresetnotification",4]],["bool",15]],[[["sdl_hittestresult",4]],["bool",15]],[[["sdl_scancode",4]],["bool",15]],[[["_bindgen_ty_7",4]],["bool",15]],[[["sdl_keymod",4]],["bool",15]],[[["sdl_systemcursor",4]],["bool",15]],[[["sdl_mousewheeldirection",4]],["bool",15]],[[["sdl_joysticktype",4]],["bool",15]],[[["sdl_joystickpowerlevel",4]],["bool",15]],[[["sdl_gamecontrollerbindtype",4]],["bool",15]],[[["sdl_gamecontrolleraxis",4]],["bool",15]],[[["sdl_gamecontrollerbutton",4]],["bool",15]],[[["sdl_eventtype",4]],["bool",15]],[[["sdl_eventaction",4]],["bool",15]],[[["sdl_hintpriority",4]],["bool",15]],[[["_bindgen_ty_8",4]],["bool",15]],[[["sdl_logpriority",4]],["bool",15]],[[["sdl_messageboxflags",4]],["bool",15]],[[["sdl_messageboxbuttonflags",4]],["bool",15]],[[["sdl_messageboxcolortype",4]],["bool",15]],[[["sdl_powerstate",4]],["bool",15]],[[["sdl_rendererflags",4]],["bool",15]],[[["sdl_textureaccess",4]],["bool",15]],[[["sdl_texturemodulate",4]],["bool",15]],[[["sdl_rendererflip",4]],["bool",15]],[[["windowshapemode",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"__fsid_t"],[4,"SDL_bool"],[4,"SDL_DUMMY_ENUM"],[4,"SDL_AssertState"],[3,"SDL_AssertData"],[3,"SDL_atomic_t"],[4,"SDL_errorcode"],[4,"SDL_ThreadPriority"],[3,"SDL_RWops"],[19,"SDL_RWops__bindgen_ty_1"],[3,"SDL_RWops__bindgen_ty_1__bindgen_ty_1"],[3,"SDL_RWops__bindgen_ty_1__bindgen_ty_2"],[3,"SDL_AudioSpec"],[3,"SDL_AudioCVT"],[4,"SDL_AudioStatus"],[3,"div_t"],[3,"ldiv_t"],[3,"lldiv_t"],[3,"__sigset_t"],[3,"timeval"],[3,"timespec"],[3,"fd_set"],[3,"__pthread_rwlock_arch_t"],[3,"__pthread_internal_list"],[3,"__pthread_mutex_s"],[3,"__pthread_cond_s"],[19,"__pthread_cond_s__bindgen_ty_1"],[3,"__pthread_cond_s__bindgen_ty_1__bindgen_ty_1"],[19,"__pthread_cond_s__bindgen_ty_2"],[3,"__pthread_cond_s__bindgen_ty_2__bindgen_ty_1"],[19,"pthread_mutexattr_t"],[19,"pthread_condattr_t"],[19,"pthread_attr_t"],[19,"pthread_mutex_t"],[19,"pthread_cond_t"],[19,"pthread_rwlock_t"],[19,"pthread_rwlockattr_t"],[19,"pthread_barrier_t"],[19,"pthread_barrierattr_t"],[3,"random_data"],[3,"drand48_data"],[4,"_bindgen_ty_1"],[4,"_bindgen_ty_2"],[4,"_bindgen_ty_3"],[4,"_bindgen_ty_4"],[4,"_bindgen_ty_5"],[4,"_bindgen_ty_6"],[3,"SDL_Color"],[3,"SDL_Palette"],[3,"SDL_PixelFormat"],[3,"SDL_Point"],[3,"SDL_Rect"],[4,"SDL_BlendMode"],[4,"SDL_BlendOperation"],[4,"SDL_BlendFactor"],[3,"SDL_Surface"],[3,"SDL_DisplayMode"],[4,"SDL_WindowFlags"],[4,"SDL_WindowEventID"],[4,"SDL_GLattr"],[4,"SDL_GLprofile"],[4,"SDL_GLcontextFlag"],[4,"SDL_GLcontextReleaseFlag"],[4,"SDL_GLContextResetNotification"],[4,"SDL_HitTestResult"],[4,"SDL_Scancode"],[4,"_bindgen_ty_7"],[4,"SDL_Keymod"],[3,"SDL_Keysym"],[4,"SDL_SystemCursor"],[4,"SDL_MouseWheelDirection"],[3,"SDL_JoystickGUID"],[4,"SDL_JoystickType"],[4,"SDL_JoystickPowerLevel"],[4,"SDL_GameControllerBindType"],[3,"SDL_GameControllerButtonBind"],[19,"SDL_GameControllerButtonBind__bindgen_ty_1"],[3,"SDL_GameControllerButtonBind__bindgen_ty_1__bindgen_ty_1"],[4,"SDL_GameControllerAxis"],[4,"SDL_GameControllerButton"],[3,"SDL_Finger"],[4,"SDL_EventType"],[3,"SDL_CommonEvent"],[3,"SDL_WindowEvent"],[3,"SDL_KeyboardEvent"],[3,"SDL_TextEditingEvent"],[3,"SDL_TextInputEvent"],[3,"SDL_MouseMotionEvent"],[3,"SDL_MouseButtonEvent"],[3,"SDL_MouseWheelEvent"],[3,"SDL_JoyAxisEvent"],[3,"SDL_JoyBallEvent"],[3,"SDL_JoyHatEvent"],[3,"SDL_JoyButtonEvent"],[3,"SDL_JoyDeviceEvent"],[3,"SDL_ControllerAxisEvent"],[3,"SDL_ControllerButtonEvent"],[3,"SDL_ControllerDeviceEvent"],[3,"SDL_AudioDeviceEvent"],[3,"SDL_TouchFingerEvent"],[3,"SDL_MultiGestureEvent"],[3,"SDL_DollarGestureEvent"],[3,"SDL_DropEvent"],[3,"SDL_QuitEvent"],[3,"SDL_OSEvent"],[3,"SDL_UserEvent"],[3,"SDL_SysWMEvent"],[19,"SDL_Event"],[4,"SDL_eventaction"],[3,"SDL_HapticDirection"],[3,"SDL_HapticConstant"],[3,"SDL_HapticPeriodic"],[3,"SDL_HapticCondition"],[3,"SDL_HapticRamp"],[3,"SDL_HapticLeftRight"],[3,"SDL_HapticCustom"],[19,"SDL_HapticEffect"],[4,"SDL_HintPriority"],[4,"_bindgen_ty_8"],[4,"SDL_LogPriority"],[4,"SDL_MessageBoxFlags"],[4,"SDL_MessageBoxButtonFlags"],[3,"SDL_MessageBoxButtonData"],[3,"SDL_MessageBoxColor"],[4,"SDL_MessageBoxColorType"],[3,"SDL_MessageBoxColorScheme"],[3,"SDL_MessageBoxData"],[4,"SDL_PowerState"],[4,"SDL_RendererFlags"],[3,"SDL_RendererInfo"],[4,"SDL_TextureAccess"],[4,"SDL_TextureModulate"],[4,"SDL_RendererFlip"],[4,"WindowShapeMode"],[19,"SDL_WindowShapeParams"],[3,"SDL_WindowShapeMode"],[3,"SDL_version"],[3,"__va_list_tag"],[3,"SDL_BlitMap"],[3,"_SDL_iconv_t"],[3,"SDL_mutex"],[3,"SDL_semaphore"],[3,"SDL_cond"],[3,"SDL_Thread"],[3,"SDL_Window"],[3,"SDL_Cursor"],[3,"_SDL_Joystick"],[3,"_SDL_GameController"],[3,"SDL_SysWMmsg"],[3,"_SDL_Haptic"],[3,"SDL_Renderer"],[3,"SDL_Texture"]]},\
"sdl2_window":{"doc":"A SDL2 window back-end for the Piston game engine.","t":[4,13,13,13,13,13,13,13,13,13,13,13,13,3,12,12,12,12,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["OpenGL","V2_0","V2_1","V3_0","V3_1","V3_2","V3_3","V4_0","V4_1","V4_2","V4_3","V4_4","V4_5","Sdl2Window","window","context","sdl_context","video_subsystem","new","with_subsystem","init_joysticks","sdl2_map_key","sdl2_map_mouse","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from_str","cmp","eq","partial_cmp","fmt","clone","drop","should_close","set_should_close","swap_buffers","size","wait_event","wait_event_timeout","poll_event","draw_size","build_from_window_settings","get_title","set_title","get_exit_on_esc","set_exit_on_esc","set_capture_cursor","show","hide","get_position","set_position","set_size","get_proc_address","is_current","make_current","get_major_minor","to_glsl"],"q":["sdl2_window","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","A window implemented by SDL2 back-end.","SDL window handle.","Allow dead code because this keeps track of the OpenGL …","SDL context.","Video subsystem.","Creates a new game window for SDL2. This will initialize …","Creates a window with the supplied SDL Video subsystem.","Initialize the joystick subsystem. Required before …","Maps a SDL2 key to piston-input key.","Maps a SDL2 mouse button to piston-input button.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the minor version of OpenGL.","Gets GLSL version associated with OpenGL."],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,0,0,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["windowsettings",3]],[["string",3],["result",4]]],[[["windowsettings",3],["videosubsystem",3]],[["string",3],["result",4]]],[[],[["u32",15],["string",3],["result",4]]],[[["keycode",4]],["key",4]],[[["mousebutton",4]],["mousebutton",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["str",15]],[["opengl",4],["result",4]]],[[["opengl",4]],["ordering",4]],[[["opengl",4]],["bool",15]],[[["opengl",4]],[["option",4],["ordering",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[],["opengl",4]],[[]],[[],["bool",15]],[[["bool",15]]],[[]],[[],["size",3]],[[],["input",4]],[[["duration",3]],[["option",4],["input",4]]],[[],[["option",4],["input",4]]],[[],["size",3]],[[["windowsettings",3]],[["string",3],["result",4]]],[[],["string",3]],[[["string",3]]],[[],["bool",15]],[[["bool",15]]],[[["bool",15]]],[[]],[[]],[[],[["position",3],["option",4]]],[[["into",8],["position",3]]],[[["size",3],["into",8]]],[[["str",15]],["procaddress",6]],[[],["bool",15]],[[]],[[]],[[],["glsl",4]]],"p":[[4,"OpenGL"],[3,"Sdl2Window"]]},\
"serde":{"doc":"Serde","t":[0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,11,3,3,3,11,3,11,11,3,11,3,11,11,3,11,3,8,10,11,11,11,11,11,11,11,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,8,10,8,10,8,8,16,10,8,16,10,10,10,10,10,10,11,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,8,16,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,16,10,11,11,8,16,10,10,11,11,11,11,11,8,16,16,10,11,8,16,10,10,11,10,10,8,16,10,0,3,8,10,8,10,8,16,16,16,16,16,16,16,16,16,10,10,10,10,10,11,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,8,16,16,10,10,8,16,16,10,10,8,16,16,10,10,8,16,16,10,10,8,16,16,10,10,11,10,8,16,16,10,11,10,8,16,16,10,11,10,8,10,8,16,10,10,10,10,10,10,11,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,8,10,8,16,16,16,16,16,16,16,16,16,10,10,10,10,10,11,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["de","value","Error","UnitDeserializer","BoolDeserializer","I8Deserializer","I16Deserializer","I32Deserializer","I64Deserializer","IsizeDeserializer","U8Deserializer","U16Deserializer","U64Deserializer","UsizeDeserializer","F32Deserializer","F64Deserializer","CharDeserializer","I128Deserializer","U128Deserializer","U32Deserializer","StrDeserializer","BorrowedStrDeserializer","new","StringDeserializer","CowStrDeserializer","BorrowedBytesDeserializer","new","SeqDeserializer","new","end","SeqAccessDeserializer","new","MapDeserializer","new","end","MapAccessDeserializer","new","IgnoredAny","Error","custom","invalid_type","invalid_value","invalid_length","unknown_variant","unknown_field","missing_field","duplicate_field","Unexpected","Bool","Unsigned","Signed","Float","Char","Str","Bytes","Unit","Option","NewtypeStruct","Seq","Map","Enum","UnitVariant","NewtypeVariant","TupleVariant","StructVariant","Other","Expected","fmt","Deserialize","deserialize","DeserializeOwned","DeserializeSeed","Value","deserialize","Deserializer","Error","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","is_human_readable","Visitor","Value","expecting","visit_bool","visit_i8","visit_i16","visit_i32","visit_i64","visit_i128","visit_u8","visit_u16","visit_u32","visit_u64","visit_u128","visit_f32","visit_f64","visit_char","visit_str","visit_borrowed_str","visit_string","visit_bytes","visit_borrowed_bytes","visit_byte_buf","visit_none","visit_some","visit_unit","visit_newtype_struct","visit_seq","visit_map","visit_enum","SeqAccess","Error","next_element_seed","next_element","size_hint","MapAccess","Error","next_key_seed","next_value_seed","next_entry_seed","next_key","next_value","next_entry","size_hint","EnumAccess","Error","Variant","variant_seed","variant","VariantAccess","Error","unit_variant","newtype_variant_seed","newtype_variant","tuple_variant","struct_variant","IntoDeserializer","Deserializer","into_deserializer","ser","Impossible","Error","custom","Serialize","serialize","Serializer","Ok","Error","SerializeSeq","SerializeTuple","SerializeTupleStruct","SerializeTupleVariant","SerializeMap","SerializeStruct","SerializeStructVariant","serialize_bool","serialize_i8","serialize_i16","serialize_i32","serialize_i64","serialize_i128","serialize_u8","serialize_u16","serialize_u32","serialize_u64","serialize_u128","serialize_f32","serialize_f64","serialize_char","serialize_str","serialize_bytes","serialize_none","serialize_some","serialize_unit","serialize_unit_struct","serialize_unit_variant","serialize_newtype_struct","serialize_newtype_variant","serialize_seq","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_map","serialize_struct","serialize_struct_variant","collect_seq","collect_map","collect_str","is_human_readable","SerializeSeq","Ok","Error","serialize_element","end","SerializeTuple","Ok","Error","serialize_element","end","SerializeTupleStruct","Ok","Error","serialize_field","end","SerializeTupleVariant","Ok","Error","serialize_field","end","SerializeMap","Ok","Error","serialize_key","serialize_value","serialize_entry","end","SerializeStruct","Ok","Error","serialize_field","skip_field","end","SerializeStructVariant","Ok","Error","serialize_field","skip_field","end","Deserialize","deserialize","Deserializer","Error","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","is_human_readable","Serialize","serialize","Serializer","Ok","Error","SerializeSeq","SerializeTuple","SerializeTupleStruct","SerializeTupleVariant","SerializeMap","SerializeStruct","SerializeStructVariant","serialize_bool","serialize_i8","serialize_i16","serialize_i32","serialize_i64","serialize_i128","serialize_u8","serialize_u16","serialize_u32","serialize_u64","serialize_u128","serialize_f32","serialize_f64","serialize_char","serialize_str","serialize_bytes","serialize_none","serialize_some","serialize_unit","serialize_unit_struct","serialize_unit_variant","serialize_newtype_struct","serialize_newtype_variant","serialize_seq","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_map","serialize_struct","serialize_struct_variant","collect_seq","collect_map","collect_str","is_human_readable","forward_to_deserialize_any","serde_if_integer128","from","into","to_owned","clone_into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","fmt","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","deserialize","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_option","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_enum","deserialize_any","deserialize_enum","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_enum","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_enum","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_enum","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_identifier","deserialize_ignored_any","deserialize_enum","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_seq","deserialize_tuple","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_enum","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_identifier","deserialize_ignored_any","expecting","visit_bool","visit_i64","visit_u64","visit_f64","visit_str","visit_none","visit_some","visit_newtype_struct","visit_unit","visit_seq","visit_map","visit_bytes","visit_enum","next_element_seed","size_hint","next_element_seed","size_hint","next_key_seed","next_value_seed","next_entry_seed","size_hint","variant_seed","variant_seed","variant_seed","variant_seed","variant_seed","variant_seed","serialize_element","end","serialize_element","end","serialize_field","end","serialize_field","end","serialize_key","serialize_value","end","serialize_field","end","serialize_field","end","custom","custom","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","eq","ne","eq","ne","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","description"],"q":["serde","serde::de","serde::de::value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","serde::de","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","serde","serde::ser","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","serde","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","serde::de::valueserde::de","","","","","","","","","","","","","","","","","","","","serde::ser","","","","","","","serde::de","serde::de::valueserde::de","","","","","","","","","","","","","","serde::de::value","","","","","","","","","","","","","","serde::ser","","","","","","","","","","","","","","","serde::de::value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","serde::de","","","serde::de::value","","serde::de","","serde::de::value","","","","","","","","","","","","","","","","","","","","","","","","","","","serde::de","","serde::de::value","serde::de","","serde::de::value"],"d":["Generic data structure deserialization framework.","Building blocks for deserializing basic values using the …","A minimal representation of all possible errors that can …","A deserializer holding a <code>()</code>.","A deserializer holding a <code>bool</code>.","A deserializer holding an <code>i8</code>.","A deserializer holding an <code>i16</code>.","A deserializer holding an <code>i32</code>.","A deserializer holding an <code>i64</code>.","A deserializer holding an <code>isize</code>.","A deserializer holding a <code>u8</code>.","A deserializer holding a <code>u16</code>.","A deserializer holding a <code>u64</code>.","A deserializer holding a <code>usize</code>.","A deserializer holding an <code>f32</code>.","A deserializer holding an <code>f64</code>.","A deserializer holding a <code>char</code>.","A deserializer holding an <code>i128</code>.","A deserializer holding a <code>u128</code>.","A deserializer holding a <code>u32</code>.","A deserializer holding a <code>&str</code>.","A deserializer holding a <code>&str</code> with a lifetime tied to …","Create a new borrowed deserializer from the given string.","A deserializer holding a <code>String</code>.","A deserializer holding a <code>Cow<str></code>.","A deserializer holding a <code>&[u8]</code> with a lifetime tied to …","Create a new borrowed deserializer from the given byte …","A deserializer that iterates over a sequence.","Construct a new <code>SeqDeserializer<I, E></code>.","Check for remaining elements after passing a …","A deserializer holding a <code>SeqAccess</code>.","Construct a new <code>SeqAccessDeserializer<A></code>.","A deserializer that iterates over a map.","Construct a new <code>MapDeserializer<I, E></code>.","Check for remaining elements after passing a …","A deserializer holding a <code>MapAccess</code>.","Construct a new <code>MapAccessDeserializer<A></code>.","An efficient way of discarding data from a deserializer.","The <code>Error</code> trait allows <code>Deserialize</code> implementations to …","Raised when there is general error when deserializing a …","Raised when a <code>Deserialize</code> receives a type different from …","Raised when a <code>Deserialize</code> receives a value of the right …","Raised when deserializing a sequence or map and the input …","Raised when a <code>Deserialize</code> enum type received a variant …","Raised when a <code>Deserialize</code> struct type received a field …","Raised when a <code>Deserialize</code> struct type expected to receive …","Raised when a <code>Deserialize</code> struct type received more than …","<code>Unexpected</code> represents an unexpected invocation of any one …","The input contained a boolean value that was not expected.","The input contained an unsigned integer <code>u8</code>, <code>u16</code>, <code>u32</code> or …","The input contained a signed integer <code>i8</code>, <code>i16</code>, <code>i32</code> or <code>i64</code> …","The input contained a floating point <code>f32</code> or <code>f64</code> that was …","The input contained a <code>char</code> that was not expected.","The input contained a <code>&str</code> or <code>String</code> that was not …","The input contained a <code>&[u8]</code> or <code>Vec<u8></code> that was not …","The input contained a unit <code>()</code> that was not expected.","The input contained an <code>Option<T></code> that was not expected.","The input contained a newtype struct that was not …","The input contained a sequence that was not expected.","The input contained a map that was not expected.","The input contained an enum that was not expected.","The input contained a unit variant that was not expected.","The input contained a newtype variant that was not …","The input contained a tuple variant that was not expected.","The input contained a struct variant that was not …","A message stating what uncategorized thing the input …","<code>Expected</code> represents an explanation of what data a <code>Visitor</code> …","Format an explanation of what data was being expected. …","A <strong>data structure</strong> that can be deserialized from any data …","Deserialize this value from the given Serde deserializer.","A data structure that can be deserialized without …","<code>DeserializeSeed</code> is the stateful form of the <code>Deserialize</code> …","The type produced by using this seed.","Equivalent to the more common <code>Deserialize::deserialize</code> …","A <strong>data format</strong> that can deserialize any data structure …","The error type that can be returned if some error occurs …","Require the <code>Deserializer</code> to figure out how to drive the …","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.","Hint that the <code>Deserialize</code> type is expecting a string …","Hint that the <code>Deserialize</code> type is expecting a string …","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting an optional …","Hint that the <code>Deserialize</code> type is expecting a unit value.","Hint that the <code>Deserialize</code> type is expecting a unit struct …","Hint that the <code>Deserialize</code> type is expecting a newtype …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a tuple …","Hint that the <code>Deserialize</code> type is expecting a map of …","Hint that the <code>Deserialize</code> type is expecting a struct with …","Hint that the <code>Deserialize</code> type is expecting an enum value …","Hint that the <code>Deserialize</code> type is expecting the name of a …","Hint that the <code>Deserialize</code> type needs to deserialize a …","Determine whether <code>Deserialize</code> implementations should …","This trait represents a visitor that walks through a …","The value produced by this visitor.","Format a message stating what data this Visitor expects …","The input contains a boolean.","The input contains an <code>i8</code>.","The input contains an <code>i16</code>.","The input contains an <code>i32</code>.","The input contains an <code>i64</code>.","The input contains a <code>i128</code>.","The input contains a <code>u8</code>.","The input contains a <code>u16</code>.","The input contains a <code>u32</code>.","The input contains a <code>u64</code>.","The input contains a <code>u128</code>.","The input contains an <code>f32</code>.","The input contains an <code>f64</code>.","The input contains a <code>char</code>.","The input contains a string. The lifetime of the string …","The input contains a string that lives at least as long …","The input contains a string and ownership of the string …","The input contains a byte array. The lifetime of the byte …","The input contains a byte array that lives at least as …","The input contains a byte array and ownership of the byte …","The input contains an optional that is absent.","The input contains an optional that is present.","The input contains a unit <code>()</code>.","The input contains a newtype struct.","The input contains a sequence of elements.","The input contains a key-value map.","The input contains an enum.","Provides a <code>Visitor</code> access to each element of a sequence …","The error type that can be returned if some error occurs …","This returns <code>Ok(Some(value))</code> for the next value in the …","This returns <code>Ok(Some(value))</code> for the next value in the …","Returns the number of elements remaining in the sequence, …","Provides a <code>Visitor</code> access to each entry of a map in the …","The error type that can be returned if some error occurs …","This returns <code>Ok(Some(key))</code> for the next key in the map, …","This returns a <code>Ok(value)</code> for the next value in the map.","This returns <code>Ok(Some((key, value)))</code> for the next …","This returns <code>Ok(Some(key))</code> for the next key in the map, …","This returns a <code>Ok(value)</code> for the next value in the map.","This returns <code>Ok(Some((key, value)))</code> for the next …","Returns the number of entries remaining in the map, if …","Provides a <code>Visitor</code> access to the data of an enum in the …","The error type that can be returned if some error occurs …","The <code>Visitor</code> that will be used to deserialize the content …","<code>variant</code> is called to identify which variant to …","<code>variant</code> is called to identify which variant to …","<code>VariantAccess</code> is a visitor that is created by the …","The error type that can be returned if some error occurs …","Called when deserializing a variant with no values.","Called when deserializing a variant with a single value.","Called when deserializing a variant with a single value.","Called when deserializing a tuple-like variant.","Called when deserializing a struct-like variant.","Converts an existing value into a <code>Deserializer</code> from which …","The type of the deserializer being converted into.","Convert this value into a deserializer.","Generic data structure serialization framework.","Helper type for implementing a <code>Serializer</code> that does not …","Trait used by <code>Serialize</code> implementations to generically …","Used when a <code>Serialize</code> implementation encounters any error …","A <strong>data structure</strong> that can be serialized into any data …","Serialize this value into the given Serde serializer.","A <strong>data format</strong> that can serialize any data structure …","The output type produced by this <code>Serializer</code> during …","The error type when some error occurs during …","Type returned from <code>serialize_seq</code> for serializing the …","Type returned from <code>serialize_tuple</code> for serializing the …","Type returned from <code>serialize_tuple_struct</code> for serializing …","Type returned from <code>serialize_tuple_variant</code> for …","Type returned from <code>serialize_map</code> for serializing the …","Type returned from <code>serialize_struct</code> for serializing the …","Type returned from <code>serialize_struct_variant</code> for …","Serialize a <code>bool</code> value.","Serialize an <code>i8</code> value.","Serialize an <code>i16</code> value.","Serialize an <code>i32</code> value.","Serialize an <code>i64</code> value.","Serialize an <code>i128</code> value.","Serialize a <code>u8</code> value.","Serialize a <code>u16</code> value.","Serialize a <code>u32</code> value.","Serialize a <code>u64</code> value.","Serialize a <code>u128</code> value.","Serialize an <code>f32</code> value.","Serialize an <code>f64</code> value.","Serialize a character.","Serialize a <code>&str</code>.","Serialize a chunk of raw byte data.","Serialize a <code>None</code> value.","Serialize a <code>Some(T)</code> value.","Serialize a <code>()</code> value.","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData<T></code>…","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.","Begin to serialize a variably sized sequence. This call …","Begin to serialize a statically sized sequence whose …","Begin to serialize a tuple struct like …","Begin to serialize a tuple variant like <code>E::T</code> in …","Begin to serialize a map. This call must be followed by …","Begin to serialize a struct like …","Begin to serialize a struct variant like <code>E::S</code> in …","Collect an iterator as a sequence.","Collect an iterator as a map.","Serialize a string produced by an implementation of …","Determine whether <code>Serialize</code> implementations should …","Returned from <code>Serializer::serialize_seq</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Serialize a sequence element.","Finish serializing a sequence.","Returned from <code>Serializer::serialize_tuple</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Serialize a tuple element.","Finish serializing a tuple.","Returned from <code>Serializer::serialize_tuple_struct</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Serialize a tuple struct field.","Finish serializing a tuple struct.","Returned from <code>Serializer::serialize_tuple_variant</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Serialize a tuple variant field.","Finish serializing a tuple variant.","Returned from <code>Serializer::serialize_map</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Serialize a map key.","Serialize a map value.","Serialize a map entry consisting of a key and a value.","Finish serializing a map.","Returned from <code>Serializer::serialize_struct</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Serialize a struct field.","Indicate that a struct field has been skipped.","Finish serializing a struct.","Returned from <code>Serializer::serialize_struct_variant</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Serialize a struct variant field.","Indicate that a struct variant field has been skipped.","Finish serializing a struct variant.","A <strong>data structure</strong> that can be deserialized from any data …","Deserialize this value from the given Serde deserializer.","A <strong>data format</strong> that can deserialize any data structure …","The error type that can be returned if some error occurs …","Require the <code>Deserializer</code> to figure out how to drive the …","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.","Hint that the <code>Deserialize</code> type is expecting a string …","Hint that the <code>Deserialize</code> type is expecting a string …","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting an optional …","Hint that the <code>Deserialize</code> type is expecting a unit value.","Hint that the <code>Deserialize</code> type is expecting a unit struct …","Hint that the <code>Deserialize</code> type is expecting a newtype …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a tuple …","Hint that the <code>Deserialize</code> type is expecting a map of …","Hint that the <code>Deserialize</code> type is expecting a struct with …","Hint that the <code>Deserialize</code> type is expecting an enum value …","Hint that the <code>Deserialize</code> type is expecting the name of a …","Hint that the <code>Deserialize</code> type needs to deserialize a …","Determine whether <code>Deserialize</code> implementations should …","A <strong>data structure</strong> that can be serialized into any data …","Serialize this value into the given Serde serializer.","A <strong>data format</strong> that can serialize any data structure …","The output type produced by this <code>Serializer</code> during …","The error type when some error occurs during …","Type returned from <code>serialize_seq</code> for serializing the …","Type returned from <code>serialize_tuple</code> for serializing the …","Type returned from <code>serialize_tuple_struct</code> for serializing …","Type returned from <code>serialize_tuple_variant</code> for …","Type returned from <code>serialize_map</code> for serializing the …","Type returned from <code>serialize_struct</code> for serializing the …","Type returned from <code>serialize_struct_variant</code> for …","Serialize a <code>bool</code> value.","Serialize an <code>i8</code> value.","Serialize an <code>i16</code> value.","Serialize an <code>i32</code> value.","Serialize an <code>i64</code> value.","Serialize an <code>i128</code> value.","Serialize a <code>u8</code> value.","Serialize a <code>u16</code> value.","Serialize a <code>u32</code> value.","Serialize a <code>u64</code> value.","Serialize a <code>u128</code> value.","Serialize an <code>f32</code> value.","Serialize an <code>f64</code> value.","Serialize a character.","Serialize a <code>&str</code>.","Serialize a chunk of raw byte data.","Serialize a <code>None</code> value.","Serialize a <code>Some(T)</code> value.","Serialize a <code>()</code> value.","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData<T></code>…","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.","Begin to serialize a variably sized sequence. This call …","Begin to serialize a statically sized sequence whose …","Begin to serialize a tuple struct like …","Begin to serialize a tuple variant like <code>E::T</code> in …","Begin to serialize a map. This call must be followed by …","Begin to serialize a struct like …","Begin to serialize a struct variant like <code>E::S</code> in …","Collect an iterator as a sequence.","Collect an iterator as a map.","Serialize a string produced by an implementation of …","Determine whether <code>Serialize</code> implementations should …","Helper macro when implementing the <code>Deserializer</code> part of a …","Conditional compilation depending on whether Serde is …i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,3,3,0,4,0,5,5,0,6,0,0,7,7,7,7,7,7,7,7,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,9,0,10,0,0,11,11,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,14,14,14,14,0,15,15,15,15,15,15,15,15,0,16,16,16,16,0,17,17,17,17,17,17,0,18,18,0,0,0,19,0,20,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,22,22,22,22,0,23,23,23,23,0,24,24,24,24,0,25,25,25,25,0,26,26,26,26,26,26,0,27,27,27,27,27,0,28,28,28,28,28,0,10,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,20,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,0,29,29,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,1,1,1,1,1,1,1,1,1,48,48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,49,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,50,50,50,50,50,50,50,50,50,50,8,8,8,8,8,8,8,8,8,8,51,51,51,51,51,51,51,50,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,50,50,50,50,50,50,50,50,50,50,50,50,50,50,3,3,5,5,5,5,5,5,46,47,1,48,49,6,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,29,29,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,1,48,49,2,3,4,5,6,50,8,50,29,29,8,8,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,1,48,49,2,3,4,5,6,50,8,29,8,9,29],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]],["borrowedstrdeserializer",3]],null,null,null,[[],["borrowedbytesdeserializer",3]],null,[[]],[[],["result",4]],null,[[]],null,[[]],[[],["result",4]],null,[[]],null,null,[[]],[[["expected",8],["unexpected",4]]],[[["expected",8],["unexpected",4]]],[[["usize",15],["expected",8]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],null,[[],["result",4]],null,null,null,[[],["result",4]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["bool",15]],null,null,[[["formatter",3]],["result",6]],[[["bool",15]],["result",4]],[[["i8",15]],["result",4]],[[["i16",15]],["result",4]],[[["i32",15]],["result",4]],[[["i64",15]],["result",4]],[[["i128",15]],["result",4]],[[["u8",15]],["result",4]],[[["u16",15]],["result",4]],[[["u32",15]],["result",4]],[[["u64",15]],["result",4]],[[["u128",15]],["result",4]],[[["f32",15]],["result",4]],[[["f64",15]],["result",4]],[[["char",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["string",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[["vec",3],["u8",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[],[["result",4],["option",4]]],[[],[["result",4],["option",4]]],[[],[["usize",15],["option",4]]],null,null,[[],[["option",4],["result",4]]],[[],["result",4]],[[],[["result",4],["option",4]]],[[],[["result",4],["option",4]]],[[],["result",4]],[[],[["option",4],["result",4]]],[[],[["usize",15],["option",4]]],null,null,null,[[],["result",4]],[[],["result",4]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[],["result",4]],null,null,[[]],null,null,null,[[]],null,[[],["result",4]],null,null,null,null,null,null,null,null,null,null,[[["bool",15]],["result",4]],[[["i8",15]],["result",4]],[[["i16",15]],["result",4]],[[["i32",15]],["result",4]],[[["i64",15]],["result",4]],[[["i128",15]],["result",4]],[[["u8",15]],["result",4]],[[["u16",15]],["result",4]],[[["u32",15]],["result",4]],[[["u64",15]],["result",4]],[[["u128",15]],["result",4]],[[["f32",15]],["result",4]],[[["f64",15]],["result",4]],[[["char",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["u32",15],["str",15]],["result",4]],[[["str",15]],["result",4]],[[["u32",15],["str",15]],["result",4]],[[["usize",15],["option",4]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["u32",15],["str",15],["usize",15]],["result",4]],[[["usize",15],["option",4]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["u32",15],["str",15],["usize",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["bool",15]],null,null,null,[[],["result",4]],[[],["result",4]],null,null,null,[[],["result",4]],[[],["result",4]],null,null,null,[[],["result",4]],[[],["result",4]],null,null,null,[[],["result",4]],[[],["result",4]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],null,null,null,[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],null,[[],["result",4]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["bool",15]],null,[[],["result",4]],null,null,null,null,null,null,null,null,null,null,[[["bool",15]],["result",4]],[[["i8",15]],["result",4]],[[["i16",15]],["result",4]],[[["i32",15]],["result",4]],[[["i64",15]],["result",4]],[[["i128",15]],["result",4]],[[["u8",15]],["result",4]],[[["u16",15]],["result",4]],[[["u32",15]],["result",4]],[[["u64",15]],["result",4]],[[["u128",15]],["result",4]],[[["f32",15]],["result",4]],[[["f64",15]],["result",4]],[[["char",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["u32",15],["str",15]],["result",4]],[[["str",15]],["result",4]],[[["u32",15],["str",15]],["result",4]],[[["usize",15],["option",4]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["u32",15],["str",15],["usize",15]],["result",4]],[[["usize",15],["option",4]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["u32",15],["str",15],["usize",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["bool",15]],null,null,[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],[["ignoredany",3],["result",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["bool",15]],["result",4]],[[["i64",15]],["result",4]],[[["u64",15]],["result",4]],[[["f64",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["result",4],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["result",4],["option",4]]],[[],["result",4]],[[],[["result",4],["option",4]]],[[],[["usize",15],["option",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[]],[[]],[[],["error",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["seqdeserializer",3]],[[],["seqaccessdeserializer",3]],[[]],[[],["mapaccessdeserializer",3]],[[],["ignoredany",3]],[[],["unexpected",4]],[[],["ignoredany",3]],[[["error",3]],["bool",15]],[[["error",3]],["bool",15]],[[["unexpected",4]],["bool",15]],[[["unexpected",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],["result",6]],[[],["str",15]]],"p":[[3,"BorrowedStrDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[8,"Error"],[4,"Unexpected"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"IgnoredAny"],[3,"Impossible"]]},\
"serde_derive":{"doc":"This crate provides Serde’s two derive macros.","t":[24,24],"n":["Serialize","Deserialize"],"q":["serde_derive",""],"d":["",""],"i":[0,0],"f":[null,null],"p":[]},\
"shader_version":{"doc":"A helper library for detecting and picking compatible …","t":[0,4,13,13,13,13,13,13,13,13,13,13,13,13,11,11,3,0,4,13,13,13,13,13,13,13,13,13,13,13,13,11,3,3,11,11,11,8,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["opengl","OpenGL","V2_0","V2_1","V3_0","V3_1","V3_2","V3_3","V4_0","V4_1","V4_2","V4_3","V4_4","V4_5","get_major_minor","to_glsl","ParseOpenGLError","glsl","GLSL","V1_10","V1_20","V1_30","V1_40","V1_50","V3_30","V4_00","V4_10","V4_20","V4_30","V4_40","V4_50","to_opengl","ParseGLSLError","Shaders","new","set","get","PickShader","pick_shader","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","pick_shader","clone","clone","cmp","cmp","eq","eq","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","from_str","from_str","description","description"],"q":["shader_version","shader_version::opengl","","","","","","","","","","","","","","","","shader_version","shader_version::glsl","","","","","","","","","","","","","","","shader_version","","","","","","shader_version::opengl","","","","","","","","","","","","","","","","","shader_version::glsl","","","","","","","","","","","","","","","","","shader_version","","","","","","","shader_version::glsl","shader_version::opengl","shader_version::glsl","shader_version::opengl","shader_version::glsl","shader_version::opengl","shader_version::glsl","shader_version::opengl","shader_version::glsl","shader_version::opengl","","shader_version::glsl","","shader_version::opengl","shader_version::glsl","shader_version::opengl","shader_version::glsl","shader_version::opengl","shader_version::glsl"],"d":["Models versions of OpenGL","","","","","","","","","","","","","","Gets the minor version of OpenGL.","Gets GLSL version associated with OpenGL.","Represents an error while trying to get <code>OpenGL</code> from <code>&str</code>.","Models versions of OpenGL Shader Language (GLSL)","For OpenGL version 3.3 and above, the GLSL version is the …","","","","","","","","","","","","","Gets OpenGL version associated with GLSL.","Represents an error while trying to get <code>GLSL</code> from <code>&str</code>.","Shader picker.","Creates a new shader picker.","Sets source for a shader version.","Get the closest shader to a shader version.","Implemented by shader version enums.","Pick shader.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,3,3,3,0,4,1,1,1,1,1,1,1,1,1,5,5,5,5,5,5,5,5,2,2,2,2,2,2,2,2,2,6,6,6,6,6,6,6,6,3,3,3,3,3,3,3,2,1,2,1,2,1,2,1,2,1,5,2,6,5,6,1,2,5,6],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[],["glsl",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["opengl",4]],null,null,[[]],[[]],[[],["option",4]],null,[[["shaders",3]],["option",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["shaders",3]],["option",4]],[[],["opengl",4]],[[],["glsl",4]],[[["opengl",4]],["ordering",4]],[[["glsl",4]],["ordering",4]],[[["opengl",4]],["bool",15]],[[["glsl",4]],["bool",15]],[[["opengl",4]],[["ordering",4],["option",4]]],[[["glsl",4]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["str",15]],[[],["str",15]]],"p":[[4,"OpenGL"],[4,"GLSL"],[3,"Shaders"],[8,"PickShader"],[3,"ParseOpenGLError"],[3,"ParseGLSLError"]]},\
"shaders_graphics2d":{"doc":"Shaders for 2D graphics backends.","t":[0,17,17,17,17,17,17,17,17,0,17,17,17,17,17,17,17,17],"n":["colored","VERTEX_GLSL_120","VERTEX_GLSL_150_CORE","FRAGMENT_GLSL_120","FRAGMENT_GLSL_150_CORE","VERTEX_GLSL_120_WEBGL","VERTEX_GLSL_150_CORE_WEBGL","FRAGMENT_GLSL_120_WEBGL","FRAGMENT_GLSL_150_CORE_WEBGL","textured","VERTEX_GLSL_120","VERTEX_GLSL_150_CORE","FRAGMENT_GLSL_120","FRAGMENT_GLSL_150_CORE","VERTEX_GLSL_120_WEBGL","VERTEX_GLSL_150_CORE_WEBGL","FRAGMENT_GLSL_120_WEBGL","FRAGMENT_GLSL_150_CORE_WEBGL"],"q":["shaders_graphics2d","shaders_graphics2d::colored","","","","","","","","shaders_graphics2d","shaders_graphics2d::textured","","","","","","",""],"d":["Shaders for colored rendering.","Vertex shader for GLSL 1.20","Vertex shader for GLSL 1.50","Fragment shader for GLSL 1.20","Fragmentshader for GLSL 1.50","Vertex shader for GLSL 1.20 WebGL","Vertex shader for GLSL 1.50 WebGL","Fragment shader for GLSL 1.20 WebGL","Fragmentshader for GLSL 1.50 WebGL","Shaders for textured rendering.","Vertex shader for GLSL 1.20","Vertex shader for GLSL 1.50","Fragment shader for GLSL 1.20","Fragment shader for GLSL 1.50","Vertex shader for GLSL 1.20","Vertex shader for GLSL 1.50","Fragment shader for GLSL 1.20","Fragment shader for GLSL 1.50"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[]},\
"sorting_visualization":{"doc":"sorting-visualization","t":[0,0,3,0,3,0,3,11,0,3,0,3,0,3,0,3,5,5,5,0,3,11,11,0,3,0,3,0,3,8,10,10,5,0,17,17,17,17,17,17,17,3,12,12,11,11,11,11,0,3,12,11,11,11,11,11,11,11,11,11,0,17,17,17,17,17,3,12,12,12,12,4,13,13,13,5,0,3,12,11,11,3,12,12,12,12,12,12,17,17,17,17,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["algorithms","bubble","BubbleSort","cocktail","CocktailSort","cycle","CycleSort","find_sorted_index","gnome","GnomeSort","heap","HeapSort","insertion","InsertionSort","merge","MergeSort","merge_sort","merge","sub_array","quicksort","Quicksort","sort_slice","partition","selection","SelectionSort","shellsort","Shellsort","all","All","Algorithm","sort","name","all","app","BACKGROUND_COLOR","VALUE_COLOR","ACCESSED_VALUE_COLOR","ACCESSED_VALUE_TIMEOUT","STATUS_TEXT_FONT_SIZE","STATUS_TEXT_MARGIN","SPEED_FACTOR","App","state","algorithm_thread","init","render","update","button","array","Array","0","new","wait","len","get","set","swap","shuffle","reset_color","set_color","cli","ALGORITHM_ARG","LENGTH_OPT","ORDER_OPT","SPEED_OPT","LIST_OPT","Options","algorithm","length","order","speed","Order","Sorted","Reversed","Shuffled","parse_options","state","SharedState","0","new","get","State","time","speed","paused","array","colors","array_accesses","NO_ARRAY_ACCESS","OPENGL_VERSION","WINDOW_TITLE","WINDOW_SIZE","main","run","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","sort","name","sort","name","sort","name","sort","name","sort","name","sort","name","sort","name","sort","name","sort","name","sort","name","sort","name","clone","clone","fmt","fmt","fmt","fmt"],"q":["sorting_visualization","sorting_visualization::algorithms","sorting_visualization::algorithms::bubble","sorting_visualization::algorithms","sorting_visualization::algorithms::cocktail","sorting_visualization::algorithms","sorting_visualization::algorithms::cycle","","sorting_visualization::algorithms","sorting_visualization::algorithms::gnome","sorting_visualization::algorithms","sorting_visualization::algorithms::heap","sorting_visualization::algorithms","sorting_visualization::algorithms::insertion","sorting_visualization::algorithms","sorting_visualization::algorithms::merge","","","","sorting_visualization::algorithms","sorting_visualization::algorithms::quicksort","","","sorting_visualization::algorithms","sorting_visualization::algorithms::selection","sorting_visualization::algorithms","sorting_visualization::algorithms::shellsort","sorting_visualization::algorithms","sorting_visualization::algorithms::all","sorting_visualization::algorithms","","","","sorting_visualization","sorting_visualization::app","","","","","","","","","","","","","","sorting_visualization","sorting_visualization::array","","","","","","","","","","","sorting_visualization","sorting_visualization::cli","","","","","","","","","","","","","","","sorting_visualization","sorting_visualization::state","","","","","","","","","","","","sorting_visualization","","","","","sorting_visualization::algorithms::bubble","","","","","","","sorting_visualization::algorithms::cocktail","","","","","","","sorting_visualization::algorithms::cycle","","","","","","","sorting_visualization::algorithms::gnome","","","","","","","sorting_visualization::algorithms::heap","","","","","","","sorting_visualization::algorithms::insertion","","","","","","","sorting_visualization::algorithms::merge","","","","","","","sorting_visualization::algorithms::quicksort","","","","","","","sorting_visualization::algorithms::selection","","","","","","","sorting_visualization::algorithms::shellsort","","","","","","","sorting_visualization::algorithms::all","","","","","","","sorting_visualization::app","","","","","","","sorting_visualization::array","","","","","","","","","sorting_visualization::cli","","","","","","","","","","","","","","sorting_visualization::state","","","","","","","","","","","","","","","","sorting_visualization::algorithms::bubble","","sorting_visualization::algorithms::cocktail","","sorting_visualization::algorithms::cycle","","sorting_visualization::algorithms::gnome","","sorting_visualization::algorithms::heap","","sorting_visualization::algorithms::insertion","","sorting_visualization::algorithms::merge","","sorting_visualization::algorithms::quicksort","","sorting_visualization::algorithms::selection","","sorting_visualization::algorithms::shellsort","","sorting_visualization::algorithms::all","","sorting_visualization::array","sorting_visualization::state","sorting_visualization::app","sorting_visualization::array","sorting_visualization::state",""],"d":["Different sorting algorithms as well as the general …","Bubble sort","Bubble sort","Cocktail sort","Cocktail sort","Cycle sort","Cycle sort","","Gnome sort","Gnome sort","Heap sort","Heap sort","Insertion sort","Insertion sort","Merge sort","Merge sort","","","","Quicksort","Quicksort","","","Selection sort","Selection sort","Shell sort","Shell sort","","","The general trait for all sorting algorithms.","Sorts a given array. This method is called in a so called …","Returns the name of the algorithm that will be displayed …","Returns a hashmap of all algorithms. It is used in the cli…","The [<code>App</code>] struct and some constants.","Color that is used to clear the window before drawing.","Color of rectangles that represent the array values.","Color of the values that have been recently accessed.","Time in seconds after which array accesses are removed.","Font size of the status text in pixels.","Margins between the status text and window borders.","Factor for increasing / decreasing speed of sorting array","This struct contains all rendering, updating and input …","","","Creates a new app (with a state constructed from the …","Draws the current state.","Advances the state by a given amount of time.","Handles user input and updates the state.","The <code>Array</code> struct.","A convenient wrapper around [<code>SharedState</code>] for algorithms …","","Creates a new array from a copy of [<code>SharedState</code>].","Puts the current thread to sleep for the specified amount …","Returns the length of the underlying vector.","Returns a value at a given index.","Sets a value of the at a given index.","Swaps two values at given indices.","Shuffles the Array.","Resets color of the value at a given index (sets it to …","Sets color of the value at a given index.","Command-line interface and command-line argument parsing. …","Internal name of the algorithm argument which is used to …","Internal name of the <code>--length</code>/<code>-l</code> option which is used to …","Internal name of the <code>--order</code>/<code>-o</code> option which is used to …","Internal name of the <code>--speed</code>/<code>-s</code> option which is used to …","Internal name of the <code>--list</code> option which is used to get …","Contains all options that can be provided by a user using …","Instance of a sorting algorithm struct.","Number of elements in the array.","Order of elements in the array.","Speed factor.","Order of elements in the array.","Sorted in the ascending order.","Sorted in the descending order.","Shuffled.","Parses command-line arguments into [<code>Options</code>]. <strong>If the …","Structs and type definitions that describe the app state.","A wrapper around [<code>State</code>] that can be safely shared between…","","","","Contains the state of the whole app.","Current time in seconds. Updated if the animation is not …","Speed factor (e.g. 1.0 - normal, 2.0 - 2x faster, 0.5 - …","Is the animation paused?","An array which is being sorted.","Colored <strong>overlays</strong> of each value. <strong>Overlay</strong> means that these …","Contains timestamps of the most recent array accesses of …","A constant that means “there’s no array access here”…","Required version of OpenGL.","Title of the main window.","Initial size of the main window.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,3,3,0,0,0,0,0,0,0,0,0,0,4,4,4,4,4,4,0,0,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,6,6,6,6,0,7,7,7,0,0,0,8,8,8,0,9,9,9,9,9,9,0,0,0,0,0,0,10,10,10,10,10,10,10,11,11,11,11,11,11,11,1,1,1,1,1,1,1,12,12,12,12,12,12,12,13,13,13,13,13,13,13,14,14,14,14,14,14,14,15,15,15,15,15,15,15,2,2,2,2,2,2,2,16,16,16,16,16,16,16,17,17,17,17,17,17,17,18,18,18,18,18,18,18,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,10,10,11,11,1,1,12,12,13,13,14,14,15,15,2,2,16,16,17,17,18,18,5,8,4,5,8,9],"f":[null,null,null,null,null,null,null,[[["usize",15],["u32",15],["array",3]],["usize",15]],null,null,null,null,null,null,null,null,[[["usize",15],["array",3]]],[[["usize",15],["array",3]]],[[["usize",15],["array",3]],[["vec",3],["u32",15]]],null,null,[[["isize",15],["array",3]]],[[["isize",15],["array",3]],["isize",15]],null,null,null,null,null,null,null,[[["array",3]]],[[],["string",3]],[[],[["hashmap",3],["box",3],["string",3]]],null,null,null,null,null,null,null,null,null,null,null,[[["algorithm",8],["u32",15],["f64",15],["vec",3],["box",3]]],[[["renderargs",3],["glgraphics",3],["glyphcache",6]]],[[["updateargs",3]]],[[["buttonargs",3]]],null,null,null,[[["sharedstate",3]]],[[["u64",15]]],[[],["usize",15]],[[["usize",15]],["u32",15]],[[["usize",15],["u32",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[["usize",15],["color",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["options",3]],null,null,null,[[["state",3]]],[[],[["mutexguard",3],["state",3]]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[],[["error",3],["result",4]]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["array",3]]],[[],["string",3]],[[["array",3]]],[[],["string",3]],[[["array",3]]],[[],["string",3]],[[["array",3]]],[[],["string",3]],[[["array",3]]],[[],["string",3]],[[["array",3]]],[[],["string",3]],[[["array",3]]],[[],["string",3]],[[["array",3]]],[[],["string",3]],[[["array",3]]],[[],["string",3]],[[["array",3]]],[[],["string",3]],[[["array",3]]],[[],["string",3]],[[],["array",3]],[[],["sharedstate",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]]],"p":[[3,"CycleSort"],[3,"Quicksort"],[8,"Algorithm"],[3,"App"],[3,"Array"],[3,"Options"],[4,"Order"],[3,"SharedState"],[3,"State"],[3,"BubbleSort"],[3,"CocktailSort"],[3,"GnomeSort"],[3,"HeapSort"],[3,"InsertionSort"],[3,"MergeSort"],[3,"SelectionSort"],[3,"Shellsort"],[3,"All"]]},\
"strsim":{"doc":"This library implements string similarity metrics.","t":[4,13,6,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11],"n":["StrSimError","DifferentLengthArgs","HammingResult","hamming","jaro","jaro_winkler","levenshtein","normalized_levenshtein","osa_distance","damerau_levenshtein","normalized_damerau_levenshtein","from","into","try_from","borrow","borrow_mut","try_into","type_id","eq","fmt"],"q":["strsim","","","","","","","","","","","","","","","","","","",""],"d":["","","","Calculates the number of positions in the two strings …","Calculates the Jaro similarity between two strings. The …","Like Jaro but gives a boost to strings that have a common …","Calculates the minimum number of insertions, deletions, …","Calculates a normalized score of the Levenshtein …","Like Levenshtein but allows for adjacent transpositions. …","Like optimal string alignment, but substrings can be …","Calculates a normalized score of the …","","","","","","","","",""],"i":[0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1],"f":[null,null,null,[[["str",15]],["hammingresult",6]],[[["str",15]],["f64",15]],[[["str",15]],["f64",15]],[[["str",15]],["usize",15]],[[["str",15]],["f64",15]],[[["str",15]],["usize",15]],[[["str",15]],["usize",15]],[[["str",15]],["f64",15]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["strsimerror",4]],["bool",15]],[[["formatter",3]],["result",6]]],"p":[[4,"StrSimError"]]},\
"synstructure":{"doc":"This crate provides helper types for matching against …","t":[4,13,13,13,13,4,13,13,13,13,3,12,12,11,11,11,3,12,12,12,12,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,8,10,11,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AddBounds","Both","Fields","Generics","None","BindStyle","Move","MoveMut","Ref","RefMut","BindingInfo","binding","style","ast","pat","referenced_ty_params","VariantAst","attrs","ident","fields","discriminant","VariantInfo","prefix","bindings","bindings_mut","ast","omitted_bindings","pat","construct","each","fold","filter","remove_binding","bind_with","binding_name","referenced_ty_params","Structure","new","try_new","variants","variants_mut","ast","omitted_variants","each","fold","each_variant","filter","add_where_predicate","add_bounds","filter_variants","remove_variant","bind_with","binding_name","referenced_ty_params","add_impl_generic","add_trait_bounds","bound_impl","unsafe_bound_impl","unbound_impl","unsafe_unbound_impl","gen_impl","unpretty_print","MacroResult","into_result","into_stream","decl_derive","decl_attribute","test_derive","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","span","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","span","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","clone","clone","clone","clone","clone","clone","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","hash","hash","hash","hash","to_tokens","to_tokens"],"q":["synstructure","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Changes how bounds are added","Add for fields and generics","Fields only","Generics only","None","The type of binding to use when generating a pattern.","<code>x</code>","<code>mut x</code>","<code>ref x</code>","<code>ref mut x</code>","Information about a specific binding. This contains both …","The name which this BindingInfo will bind to.","The type of binding which this BindingInfo will create.","Returns a reference to the underlying <code>syn</code> AST node which …","Generates the pattern fragment for this field binding.","Returns a list of the type parameters which are …","This type is similar to <code>syn</code>’s <code>Variant</code> type, however …","","","","","A wrapper around a <code>syn::DeriveInput</code>’s variant which …","","Returns a slice of the bindings in this Variant.","Returns a mut slice of the bindings in this Variant.","Returns a <code>VariantAst</code> object which contains references to …","True if any bindings were omitted due to a <code>filter</code> call.","Generates the match-arm pattern which could be used to …","Generates the token stream required to construct the …","Runs the passed-in function once for each bound field, …","Runs the passed-in function once for each bound field, …","Filter the bindings created by this <code>Variant</code> object. This …","Remove the binding at the given index.","Updates the <code>BindStyle</code> for each of the passed-in fields by …","Updates the binding name for each fo the passed-in fields …","Returns a list of the type parameters which are …","A wrapper around a <code>syn::DeriveInput</code> which provides …","Create a new <code>Structure</code> with the variants and fields from …","Create a new <code>Structure</code> with the variants and fields from …","Returns a slice of the variants in this Structure.","Returns a mut slice of the variants in this Structure.","Returns a reference to the underlying <code>syn</code> AST node which …","True if any variants were omitted due to a <code>filter_variants</code>…","Runs the passed-in function once for each bound field, …","Runs the passed-in function once for each bound field, …","Runs the passed-in function once for each variant, …","Filter the bindings created by this <code>Structure</code> object. …","Specify additional where predicate bounds which should be …","Specify which bounds should be generated by …","Filter the variants matched by this <code>Structure</code> object. …","Remove the variant at the given index.","Updates the <code>BindStyle</code> for each of the passed-in fields by …","Updates the binding name for each fo the passed-in fields …","Returns a list of the type parameters which are refrenced …","Adds an <code>impl<></code> generic parameter. This can be used when …","Add trait bounds for a trait with the given path for each …","NOTE: This methods’ features are superceded by …","NOTE: This methods’ features are superceded by …","NOTE: This methods’ features are superceded by …","NOTE: This methods’ features are superceded by …","Generate an impl block for the given struct. This impl …","Dumps an unpretty version of a tokenstream. Takes any …","Helper trait describing values which may be returned by …","Convert this result into a <code>Result</code> for further processing …","Convert this result into a <code>proc_macro::TokenStream</code>, ready …","The <code>decl_derive!</code> macro declares a custom derive wrapper. …","The <code>decl_attribute!</code> macro declares a custom attribute …","Run a test on a custom derive. This macro expands both …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,0,2,2,2,2,0,3,3,3,3,3,0,4,4,4,4,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,7,7,0,0,0,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,1,2,3,4,5,6,1,2,3,3,4,4,5,5,6,6,1,2,3,4,5,6,1,2,3,4,5,6,2,3],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["field",3]],[[],["tokenstream",3]],[[],[["vec",3],["ident",3]]],null,null,null,null,null,null,null,[[]],[[]],[[],["variantast",3]],[[],["bool",15]],[[],["tokenstream",3]],[[],["tokenstream",3]],[[],["tokenstream",3]],[[],["tokenstream",3]],[[]],[[["usize",15]]],[[]],[[]],[[],[["vec",3],["ident",3]]],null,[[["deriveinput",3]]],[[["deriveinput",3]],["result",6]],[[]],[[]],[[],["deriveinput",3]],[[],["bool",15]],[[],["tokenstream",3]],[[],["tokenstream",3]],[[],["tokenstream",3]],[[]],[[["wherepredicate",4]]],[[["addbounds",4]]],[[]],[[["usize",15]]],[[]],[[]],[[],[["vec",3],["ident",3]]],[[["genericparam",4]]],[[["addbounds",4],["traitbound",3],["option",4]]],[[["totokens",8]],["tokenstream",3]],[[["totokens",8]],["tokenstream",3]],[[["totokens",8]],["tokenstream",3]],[[["totokens",8]],["tokenstream",3]],[[["tokenstream",3]],["tokenstream",3]],[[["display",8]],["string",3]],null,[[],[["result",6],["tokenstream",3]]],[[],["tokenstream",3]],null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["addbounds",4]],[[],["bindstyle",4]],[[],["bindinginfo",3]],[[],["variantast",3]],[[],["variantinfo",3]],[[],["structure",3]],[[["addbounds",4]],["bool",15]],[[["bindstyle",4]],["bool",15]],[[["bindinginfo",3]],["bool",15]],[[["bindinginfo",3]],["bool",15]],[[["variantast",3]],["bool",15]],[[["variantast",3]],["bool",15]],[[["variantinfo",3]],["bool",15]],[[["variantinfo",3]],["bool",15]],[[["structure",3]],["bool",15]],[[["structure",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["tokenstream",3]]],[[["tokenstream",3]]]],"p":[[4,"AddBounds"],[4,"BindStyle"],[3,"BindingInfo"],[3,"VariantAst"],[3,"VariantInfo"],[3,"Structure"],[8,"MacroResult"]]},\
"texture":{"doc":"A generic library for textures.","t":[0,5,5,8,10,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,8,16,10,8,16,10,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ops","flip_vertical","alpha_to_rgba8","ImageSize","get_size","get_width","get_height","TextureSettings","new","get_convert_gamma","set_convert_gamma","convert_gamma","get_compress","set_compress","compress","get_generate_mipmap","set_generate_mipmap","generate_mipmap","get_min","set_min","min","get_mag","set_mag","mag","get_mipmap","set_mipmap","mipmap","get_filter","set_filter","filter","Format","Rgba8","CreateTexture","Error","create","UpdateTexture","Error","update","Filter","Linear","Nearest","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","clone","clone","clone","fmt","fmt"],"q":["texture","texture::ops","","texture","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Image operations for textures.","Flips the image vertically.","Converts from alpha to rgba8.","Implemented by all images to be used with generic …","Get the image size.","Gets the image width.","Gets the image height.","Texture creation parameters.","Create default settings.","Gets whether to convert gamma, treated as sRGB color …","Sets convert gamma.","Sets convert gamma.","Gets wheter compress on the GPU.","Sets compress.","Sets compress.","Gets generate mipmap.","Sets generate mipmap.","Sets generate mipmap.","Gets minify filter.","Sets minify filter.","Sets minify filter.","Gets magnify filter","Sets magnify filter","Sets magnify filter","Gets minify mipmap filter","Sets magnify mipmap filter, and sets generate_mipmap to …","Sets magnify mipmap filter, and sets generate_mipmap to …","Returns the min and mag filter","Sets the min and mag filter","Sets the min and mag filter","Texture format.","<code>(red, green, blue, alpha)</code> with values 0-255.","Implemented by textures for creation.","The error when creating texture.","Create texture from memory.","Implemented by textures for updating.","The error when updating texture.","Update the texture.","Sampling filter","A Weighted Linear Blend","Nearest Texel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,0,4,4,0,5,5,0,6,6,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,6,6,6,6,6,6,6,6,6,2,3,6,3,6],"f":[null,[[["u8",15]],[["vec",3],["u8",15]]],[[],[["vec",3],["u8",15]]],null,[[]],[[],["u32",15]],[[],["u32",15]],null,[[],["texturesettings",3]],[[],["bool",15]],[[["bool",15]]],[[["bool",15]]],[[],["bool",15]],[[["bool",15]]],[[["bool",15]]],[[],["bool",15]],[[["bool",15]]],[[["bool",15]]],[[],["filter",4]],[[["filter",4]]],[[["filter",4]]],[[],["filter",4]],[[["filter",4]]],[[["filter",4]]],[[],["filter",4]],[[["filter",4]]],[[["filter",4]]],[[]],[[["filter",4]]],[[["filter",4]]],null,null,null,null,[[["into",8],["format",4],["texturesettings",3]],["result",4]],null,null,[[["format",4]],["result",4]],null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["texturesettings",3]],[[],["format",4]],[[],["filter",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]]],"p":[[8,"ImageSize"],[3,"TextureSettings"],[4,"Format"],[8,"CreateTexture"],[8,"UpdateTexture"],[4,"Filter"]]},\
"textwrap":{"doc":"<code>textwrap</code> provides functions for word wrapping and filling …","t":[5,5,3,3,8,10,3,12,12,12,12,12,11,11,11,11,11,11,11,11,11,3,3,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["dedent","indent","HyphenSplitter","NoHyphenation","WordSplitter","split","Wrapper","width","initial_indent","subsequent_indent","break_words","splitter","new","with_splitter","initial_indent","subsequent_indent","break_words","fill","wrap","wrap_iter","into_wrap_iter","IntoWrapIter","WrapIter","fill","wrap","wrap_iter","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","try_from","borrow","borrow_mut","try_into","type_id","split","split","next","next","clone","clone","clone","fmt","fmt","fmt","fmt","fmt"],"q":["textwrap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Removes common leading whitespace from each line.","Add prefix to each non-empty line.","Simple and default way to split words: splitting on …","Use this as a <code>Wrapper.splitter</code> to avoid any kind of …","An interface for splitting words.","Return all possible splits of word. Each split is a triple…","A Wrapper holds settings for wrapping and filling text. …","The width in columns at which the text will be wrapped.","Indentation used for the first line of output.","Indentation used for subsequent lines of output.","Allow long words to be broken if they cannot fit on a …","The method for splitting words. If the <code>hyphenation</code> feature…","Create a new Wrapper for wrapping at the specified width. …","Use the given <code>WordSplitter</code> to create a new Wrapper for …","Change <code>self.initial_indent</code>. The initial indentation is …","Change <code>self.subsequent_indent</code>. The subsequent indentation …","Change <code>self.break_words</code>. This controls if words longer …","Fill a line of text at <code>self.width</code> characters. Strings are …","Wrap a line of text at <code>self.width</code> characters. Strings are …","Lazily wrap a line of text at <code>self.width</code> characters. …","Lazily wrap a line of text at <code>self.width</code> characters. …","An iterator over the lines of the input string which owns …","An iterator over the lines of the input string which …","Fill a line of text at <code>width</code> characters. Strings are …","Wrap a line of text at <code>width</code> characters. Strings are …","Lazily wrap a line of text at <code>width</code> characters. Strings …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,2,2,2,2,2,2,2,2,2,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,3,4,5,6,3,4,2,3,4,2,5,6],"f":[[[["str",15]],["string",3]],[[["str",15]],["string",3]],null,null,null,[[["str",15]],["vec",3]],null,null,null,null,null,null,[[["usize",15]],[["wrapper",3],["hyphensplitter",3]]],[[["usize",15]],["wrapper",3]],[[["str",15]],["wrapper",3]],[[["str",15]],["wrapper",3]],[[["bool",15]],["wrapper",3]],[[["str",15]],["string",3]],[[["str",15]],[["cow",4],["vec",3]]],[[["str",15]],["wrapiter",3]],[[["str",15]],["intowrapiter",3]],null,null,[[["usize",15],["str",15]],["string",3]],[[["usize",15],["str",15]],[["cow",4],["vec",3]]],[[["usize",15],["str",15]],[["hyphensplitter",3],["intowrapiter",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["str",15]],["vec",3]],[[["str",15]],["vec",3]],[[],[["cow",4],["option",4]]],[[],[["cow",4],["option",4]]],[[],["nohyphenation",3]],[[],["hyphensplitter",3]],[[],["wrapper",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]]],"p":[[8,"WordSplitter"],[3,"Wrapper"],[3,"NoHyphenation"],[3,"HyphenSplitter"],[3,"IntoWrapIter"],[3,"WrapIter"]]},\
"tiff":{"doc":"Decoding and Encoding of TIFF Images","t":[0,0,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,4,13,13,13,13,13,4,13,13,13,13,11,11,3,11,11,6,4,13,13,4,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,13,4,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,6,4,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["decoder","ifd","Tag","Artist","BitsPerSample","CellLength","CellWidth","ColorMap","Compression","Copyright","DateTime","ExtraSamples","FillOrder","FreeByteCounts","FreeOffsets","GrayResponseCurve","GrayResponseUnit","HostComputer","ImageDescription","ImageLength","ImageWidth","Make","MaxSampleValue","MinSampleValue","Model","NewSubfileType","Orientation","PhotometricInterpretation","PlanarConfiguration","ResolutionUnit","RowsPerStrip","SamplesPerPixel","Software","StripByteCounts","StripOffsets","SubfileType","Threshholding","XResolution","YResolution","Predictor","Unknown","from_u16","Type","BYTE","ASCII","SHORT","LONG","RATIONAL","Value","Unsigned","List","Rational","Ascii","into_u32","into_u32_vec","Entry","new","val","Directory","DecodingResult","U8","U16","PhotometricInterpretation","WhiteIsZero","BlackIsZero","RGB","RGBPalette","TransparencyMask","CMYK","YCbCr","CIELab","CompressionMethod","None","Huffman","Fax3","Fax4","LZW","JPEG","PackBits","PlanarConfiguration","Chunky","Planar","Decoder","new","dimensions","colortype","init","next_image","more_images","byte_order","read_short","read_long","read_string","read_offset","goto_offset","find_tag","find_tag_u32","find_tag_u32_vec","get_tag","get_tag_u32","get_tag_u32_vec","read_image","TiffError","FormatError","UnsupportedError","IoError","TiffFormatError","TiffSignatureNotFound","TiffSignatureInvalid","ImageFileDirectoryNotFound","InconsistentSizesEncountered","InvalidTag","RequiredTagNotFound","UnknownPredictor","UnsignedIntegerExpected","TiffUnsupportedError","HorizontalPredictor","InterpretationWithBits","UnknownInterpretation","UnknownCompressionMethod","UnsupportedCompressionMethod","UnsupportedSampleDepth","UnsupportedColorType","UnsupportedBitsPerChannel","UnsupportedPlanarConfig","UnsupportedDataType","TiffResult","ColorType","Gray","RGB","Palette","GrayA","RGBA","CMYK","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","to_string","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","eq","ne","eq","ne","eq","eq","eq","eq","ne","eq","ne","eq","ne","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","hash","hash","hash","hash","hash","hash","description","cause","from_i64","from_u64","from_i64","from_u64","from_i64","from_u64","from_i64","from_u64"],"q":["tiff","tiff::decoder","tiff::decoder::ifd","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tiff::decoder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tiff","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tiff::decoder::ifd","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tiff::decoder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tiff","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tiff::decoder::ifd","","","","tiff::decoder","","","tiff","","","tiff::decoder::ifd","","","","tiff::decoder","","","tiff","","","","","","tiff::decoder::ifd","","","","tiff::decoder","","","","","tiff","","","","","","","tiff::decoder::ifd","","tiff::decoder","","","tiff","","","","","tiff::decoder::ifd","","tiff::decoder","","","","",""],"d":["","Function for reading TIFF tags","TIFF tag","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Type representing an Image File Directory","Result of a decoding process","A vector of unsigned bytes","A vector of unsigned words","","","","","","","","","","","","","","","","","","","","","The representation of a TIFF decoder","Create a new decoder that decodes from the stream <code>r</code>","","","Initializes the decoder.","Reads in the next image. If there is no further image in …","Returns <code>true</code> if there is at least one more image …","Returns the byte_order","Reads a TIFF short value","Reads a TIFF long value","Reads a string","Reads a TIFF IFA offset/value field","Moves the cursor to the specified offset","Tries to retrieve a tag. Return <code>Ok(None)</code> if the tag is …","Tries to retrieve a tag and convert it to the desired …","Tries to retrieve a tag and convert it to the desired …","Tries to retrieve a tag. Returns an error if the tag is …","Tries to retrieve a tag and convert it to the desired …","Tries to retrieve a tag and convert it to the desired …","Decodes the entire image and return it as a Vector","Tiff error kinds.","The Image is not formatted properly","The Decoder does not support this image format","An I/O Error occurred while decoding the image","","","","","","","","","","","","","","","","","","","","","Result of an image decoding/encoding process","An enumeration over supported color types and their bit …","Pixel is grayscale","Pixel contains R, G and B channels","Pixel is an index into a color palette","Pixel is grayscale with an alpha channel","Pixel is RGB with an alpha channel","Pixel isi":[0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,2,2,2,0,3,3,3,3,3,3,0,4,4,0,0,5,5,0,6,6,6,6,6,6,6,6,0,7,7,7,7,7,7,7,0,8,8,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,10,10,10,0,11,11,11,11,11,11,11,11,0,12,12,12,12,12,12,12,12,12,12,0,0,13,13,13,13,13,13,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,10,10,1,2,3,4,6,7,8,11,12,13,1,1,3,3,6,7,8,11,11,12,12,13,13,1,2,3,4,5,6,7,8,9,10,11,12,13,11,12,10,1,3,6,7,8,11,12,13,10,10,2,2,6,6,7,7,8,8],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u16",15]],["tag",4]],null,null,null,null,null,null,null,null,null,null,null,[[],[["u32",15],["tiffresult",6]]],[[],[["vec",3],["tiffresult",6]]],null,[[["u32",15],["type",4]],["entry",3]],[[["decoder",3]],[["value",4],["tiffresult",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["decoder",3],["tiffresult",6]]],[[],["tiffresult",6]],[[],[["tiffresult",6],["colortype",4]]],[[],[["decoder",3],["tiffresult",6]]],[[],[["decoder",3],["tiffresult",6]]],[[],["bool",15]],[[],["byteorder",4]],[[],[["error",3],["result",4],["u16",15]]],[[],[["u32",15],["error",3],["result",4]]],[[["usize",15]],[["string",3],["fromutf8error",3],["result",4]]],[[],[["result",4],["error",3]]],[[["u32",15]],["result",6]],[[["tag",4]],[["option",4],["tiffresult",6]]],[[["tag",4]],[["tiffresult",6],["option",4]]],[[["tag",4]],[["option",4],["tiffresult",6]]],[[["tag",4]],[["tiffresult",6],["value",4]]],[[["tag",4]],[["u32",15],["tiffresult",6]]],[[["tag",4]],[["vec",3],["tiffresult",6]]],[[],[["decodingresult",4],["tiffresult",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["error",3]],["tifferror",4]],[[["fromutf8error",3]],["tifferror",4]],[[],["tag",4]],[[],["type",4]],[[],["value",4]],[[],["entry",3]],[[],["photometricinterpretation",4]],[[],["compressionmethod",4]],[[],["planarconfiguration",4]],[[],["tiffformaterror",4]],[[],["tiffunsupportederror",4]],[[],["colortype",4]],[[["tag",4]],["bool",15]],[[["tag",4]],["bool",15]],[[["value",4]],["bool",15]],[[["value",4]],["bool",15]],[[["photometricinterpretation",4]],["bool",15]],[[["compressionmethod",4]],["bool",15]],[[["planarconfiguration",4]],["bool",15]],[[["tiffformaterror",4]],["bool",15]],[[["tiffformaterror",4]],["bool",15]],[[["tiffunsupportederror",4]],["bool",15]],[[["tiffunsupportederror",4]],["bool",15]],[[["colortype",4]],["bool",15]],[[["colortype",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["str",15]],[[],[["error",8],["option",4]]],[[["i64",15]],["option",4]],[[["u64",15]],["option",4]],[[["i64",15]],["option",4]],[[["u64",15]],["option",4]],[[["i64",15]],["option",4]],[[["u64",15]],["option",4]],[[["i64",15]],["option",4]],[[["u64",15]],["option",4]]],"p":[[4,"Tag"],[4,"Type"],[4,"Value"],[3,"Entry"],[4,"DecodingResult"],[4,"PhotometricInterpretation"],[4,"CompressionMethod"],[4,"PlanarConfiguration"],[3,"Decoder"],[4,"TiffError"],[4,"TiffFormatError"],[4,"TiffUnsupportedError"],[4,"ColorType"]]},\
"unicode_width":{"doc":"Determine displayed width of <code>char</code> and <code>str</code> types according …","t":[17,8,10,10,8,10,10],"n":["UNICODE_VERSION","UnicodeWidthChar","width","width_cjk","UnicodeWidthStr","width","width_cjk"],"q":["unicode_width","","","","","",""],"d":["The version of Unicode that this version of unicode-width …","Methods for determining displayed width of Unicode …","Returns the character’s displayed width in columns, or …","Returns the character’s displayed width in columns, or …","Methods for determining displayed width of Unicode …","Returns the string’s displayed width in columns.","Returns the string’s displayed width in columns."],"i":[0,0,1,1,0,2,2],"f":[null,null,[[],[["option",4],["usize",15]]],[[],[["option",4],["usize",15]]],null,[[],["usize",15]],[[],["usize",15]]],"p":[[8,"UnicodeWidthChar"],[8,"UnicodeWidthStr"]]},\
"vec_map":{"doc":"A simple map based on a vector for small integer keys. …","tn":["VecMap","Entry","Vacant","Occupied","VacantEntry","OccupiedEntry","new","with_capacity","capacity","reserve_len","reserve_len_exact","shrink_to_fit","keys","values","values_mut","iter","iter_mut","append","split_off","drain","len","is_empty","clear","get","contains_key","get_mut","insert","remove","entry","retain","or_insert","or_insert_with","insert","get","get_mut","into_mut","insert","remove","Iter","IterMut","Keys","Values","ValuesMut","IntoIter","Drain","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","try_from","borrow","borrow_mut","try_into","type_id","from","into","into_iter","try_from","borrow","borrow_mut","try_into","type_id","next_back","next_back","next_back","next_back","next_back","next_back","next_back","extend","extend","into_iter","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","clone","clone_from","clone","clone","clone","default","cmp","eq","partial_cmp","fmt","index","index","index_mut","index_mut","hash","from_iter"],"q":["vec_mapd":["A map optimized for small integer keys.","A view into a single entry in a map, which may either be …","A vacant Entry","An occupied Entry","A vacant Entry.","An occupied Entry.","Creates an empty <code>VecMap</code>.","Creates an empty <code>VecMap</code> with space for at least <code>capacity</code> …","Returns the number of elements the <code>VecMap</code> can hold without…","Reserves capacity for the given <code>VecMap</code> to contain <code>len</code> …","Reserves the minimum capacity for the given <code>VecMap</code> to …","Trims the <code>VecMap</code> of any excess capacity.","Returns an iterator visiting all keys in ascending order …","Returns an iterator visiting all values in ascending …","Returns an iterator visiting all values in ascending …","Returns an iterator visiting all key-value pairs in …","Returns an iterator visiting all key-value pairs in …","Moves all elements from <code>other</code> into the map while …","Splits the collection into two at the given key.","Returns an iterator visiting all key-value pairs in …","Returns the number of elements in the map.","Returns true if the map contains no elements.","Clears the map, removing all key-value pairs.","Returns a reference to the value corresponding to the key.","Returns true if the map contains a value for the …","Returns a mutable reference to the value corresponding to …","Inserts a key-value pair into the map. If the key already …","Removes a key from the map, returning the value at the …","Gets the given key’s corresponding entry in the map for …","Retains only the elements specified by the predicate.","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result …","Sets the value of the entry with the VacantEntry’s key, …","Gets a reference to the value in the entry.","Gets a mutable reference to the value in the entry.","Converts the entry into a mutable reference to its value.","Sets the value of the entry with the OccupiedEntry’s …","Takes the value of the entry out of the map, and returns …","An iterator over the key-value pairs of a map.","An iterator over the key-value pairs of a map, with the …","An iterator over the keys of a map.","An iterator over the values of a map.","An iterator over the values of a map.","A consuming iterator over the key-value pairs of a map.","A draining iterator over the key-value pairs of a map.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator visiting all key-value pairs in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,3,4,4,4,4,4,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,5,6,11,7,8,9,10,2,2,2,5,5,6,6,11,11,7,7,8,8,9,9,10,10,2,2,5,7,8,2,2,2,2,2,2,2,2,2,2,2],"f":[null,null,null,null,null,null,[[]],[[["usize",15]]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["keys",3]],[[],["values",3]],[[],["valuesmut",3]],[[],["iter",3]],[[],["itermut",3]],[[]],[[["usize",15]]],[[],["drain",3]],[[],["usize",15]],[[],["bool",15]],[[]],[[["usize",15]],["option",4]],[[["usize",15]],["bool",15]],[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],[[["usize",15]],["entry",4]],[[]],[[]],[[["fnonce",8]]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],[["usize",15],["option",4]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[],["intoiter",3]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[]],[[]],[[],["iter",3]],[[],["keys",3]],[[],["values",3]],[[]],[[],["ordering",4]],[[],["bool",15]],[[],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["intoiterator",8]]]],"p":[[4,"Entry"],[3,"VecMap"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"IntoIter"],[3,"Drain"]]},\
"vecmath":{"doc":"A simple and generic library for vector math.","t":[0,8,8,10,8,10,8,10,8,10,8,10,10,10,10,10,8,10,8,10,8,10,8,10,10,10,10,10,10,10,10,10,10,10,10,10,8,10,8,10,10,10,10,10,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],"n":["traits","Float","Min","min","Max","max","Signum","signum","Powf","powf","Radians","_90","_180","_360","deg_to_rad","rad_to_deg","One","one","Zero","zero","Sqrt","sqrt","Trig","sin","cos","tan","asin","acos","atan","atan2","sinh","cosh","tanh","asinh","acosh","atanh","Cast","cast","FromPrimitive","from_f64","from_f32","from_isize","from_u32","from_i32","Vector2","Vector3","Vector4","Matrix2x3","Matrix3x2","Matrix3","Matrix3x4","Matrix4x3","Matrix4","col_mat3x2_mul_col","col_mat3_mul_col","col_mat4x3_mul_col","col_mat4_mul_col","row_mat2x3_mul_row","row_mat3_mul_row","row_mat3x4_mul_row","row_mat4_mul_row","col_mat3x2_mul","col_mat3_mul","col_mat4x3_mul","col_mat4_mul","row_mat2x3_mul","row_mat3_mul","row_mat3x4_mul","row_mat4_mul","mat2x3_id","mat3x2_id","mat3_id","mat3x4_id","mat4x3_id","mat4_id","vec2_cast","vec3_cast","vec4_cast","mat2x3_cast","mat3x2_cast","mat3_cast","mat3x4_cast","mat4x3_cast","mat4_cast","vec2_sub","vec3_sub","vec4_sub","mat2x3_sub","mat3x2_sub","mat3_sub","mat3x4_sub","mat4x3_sub","mat4_sub","vec2_add","vec3_add","vec4_add","mat2x3_add","mat3x2_add","mat3_add","mat3x4_add","mat4x3_add","mat4_add","vec2_mul","vec3_mul","vec4_mul","vec2_dot","vec3_dot","vec4_dot","vec2_square_len","vec3_square_len","vec4_square_len","vec2_cross","vec3_cross","vec2_scale","vec3_scale","vec4_scale","vec2_neg","vec3_neg","vec4_neg","vec2_len","vec3_len","vec4_len","vec2_inv_len","vec3_inv_len","vec4_inv_len","vec2_normalized","vec3_normalized","vec4_normalized","vec2_normalized_sub","vec3_normalized_sub","vec4_normalized_sub","vec3_dot_vec2","vec4_dot_vec3","vec3_dot_pos2","vec4_dot_pos3","row_mat2x3_col","col_mat2x3_row","row_mat3x2_col","col_mat3x2_row","row_mat3_col","col_mat3_row","row_mat3x4_col","col_mat3x4_row","row_mat4x3_col","col_mat4x3_row","row_mat4_col","col_mat4_row","mat2x3_transposed","mat3x2_transposed","mat3_transposed","mat3x4_transposed","mat4x3_transposed","mat4_transposed","col_mat3_transform","col_mat4_transform","row_mat3_transform","row_mat4_transform","row_mat2x3_transform_pos2","col_mat3x2_transform_pos2","row_mat3_transform_pos2","col_mat3_transform_pos2","row_mat3x4_transform_pos3","col_mat4x3_transform_pos3","row_mat2x3_transform_vec2","col_mat3x2_transform_vec2","row_mat3_transform_vec2","col_mat3_transform_vec2","row_mat3x4_transform_vec3","col_mat4x3_transform_vec3","mat2x3_det","mat3x2_det","mat3_det","mat3x4_det","mat4x3_det","mat4_det","mat2x3_inv_det","mat3x2_inv_det","mat3_inv_det","mat3x4_inv_det","mat4x3_inv_det","mat4_inv_det","mat2x3_inv","mat3x2_inv","mat3_inv","mat3x4_inv","mat4x3_inv","mat4_inv"],"q":["vecmath","vecmath::traits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","vecmath","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Various useful traits","Convenience trait for floats.","Minimum value.","Returns the minimum value of self or other.","Maximum value.","Returns the maximum value of self or other.","The sign of the number.","Returns number representing the sign of self","Floating number power.","Returns floating power of the number.","Useful constants for radians.","Returns radians corresponding to 90 degrees.","Returns radians corresponding to 180 degrees.","Returns radians corresponding to 360 degrees.","Convert a value to radians from degrees. Equivalent to …","Convert a value to degrees from radians. Equivalent to …","Number 1.","Returns 1.","Number 0.","Returns 0.","Square root.","Returns square root.","Basic trigonometry functions","Returns sine of self.","Returns cosine of self.","Returns tangent of self.","Returns inverse sine of self.","Returns inverse cosine of self.","Returns inverse tangent of self.","Returns the four quadrant arctangent of self (y) and …","Returns hyperbolic sine of self.","Returns hyperbolic cosine of self.","Returns hyperbolic tangent of self.","Returns inverse hyperbolic sine of self.","Returns inverse hyperbolic cosine of self.","Returns inverse hyperbolic tangent of self.","Casts into another type.","Casts into other type.","Trait for converting from different numeric types","from a f64","from a f32","from a isze","from a u32","from a i32","A 2D vector.","A 3D vector.","A 4D vector.","A 2x3 matrix.","A 3x2 matrix.","A 3x3 matrix.","A 3x4 matrix.","A 4x3 matrix.","A 4x4 matrix.","Computes column vector in column matrix product.","Computes column vector in column matrix product.","Computes column vector in column matrix product.","Computes column vector in column matrix product.","Computes row vector in row matrix product.","Computes row vector in row matrix product.","Computes row vector in row matrix product.","Computes row vector in row matrix product.","Multiplies two matrices.","Multiplies two matrices.","Multiplies two matrices.","Multiplies two matrices.","Multiplies two matrices.","Multiplies two matrices.","Multiplies two matrices.","Multiplies two matrices.","Constructs identity matrix.","Constructs identity matrix.","Constructs identity matrix.","Constructs identity matrix.","Constructs identity matrix.","Constructs identity matrix.","Converts to another vector type.","Converts to another vector type.","Converts to another vector type.","Converts to another matrix type.","Converts to another matrix type.","Converts to another matrix type.","Converts to another matrix type.","Converts to another matrix type.","Converts to another matrix type.","Subtracts ‘b’ from ‘a’.","Subtracts ‘b’ from ‘a’.","Subtracts ‘b’ from ‘a’.","Subtracts ‘b’ from ‘a’.","Subtracts ‘b’ from ‘a’.","Subtracts ‘b’ from ‘a’.","Subtracts ‘b’ from ‘a’.","Subtracts ‘b’ from ‘a’.","Subtracts ‘b’ from ‘a’.","Adds two vectors.","Adds two vectors.","Adds two vectors.","Adds two matrices.","Adds two matrices.","Adds two matrices.","Adds two matrices.","Adds two matrices.","Adds two matrices.","Multiplies two vectors component wise.","Multiplies two vectors component wise.","Multiplies two vectors component wise.","Computes the dot product.","Computes the dot product.","Computes the dot product.","Computes the square length of a vector.","Computes the square length of a vector.","Computes the square length of a vector.","Computes the cross product.","Computes the cross product.","Multiplies the vector with a scalar.","Multiplies the vector with a scalar.","Multiplies the vector with a scalar.","Negates the vector.","Negates the vector.","Negates the vector.","Computes the length of vector.","Computes the length of vector.","Computes the length of vector.","Computes the inverse length of a vector.","Computes the inverse length of a vector.","Computes the inverse length of a vector.","Computes the normalized.","Computes the normalized.","Computes the normalized.","Computes the normalized difference between two vectors.","Computes the normalized difference between two vectors.","Computes the normalized difference between two vectors.","Computes transformed vector component.","Computes transformed vector component.","Computes transformed position component.","Computes transformed position component.","Returns a column vector of a row matrix.","Returns a row vector of a column matrix.","Returns a column vector of a row matrix.","Returns a row vector of a column matrix.","Returns a column vector of a row matrix.","Returns a row vector of a column matrix.","Returns a column vector of a row matrix.","Returns a row vector of a column matrix.","Returns a column vector of a row matrix.","Returns a column vector of a row matrix.","Returns a column vector of a row matrix.","Returns a row vector of a column matrix.","Constructs the transpose of a matrix.","Constructs the transpose of a matrix.","Constructs the transpose of a matrix.","Constructs the transpose of a matrix.","Constructs the transpose of a matrix.","Constructs the transpose of a matrix.","Transforms a 3D vector through a matrix.","Transforms a 4D vector through a matrix.","Transforms a 3D vector through a matrix.","Transforms a 4D vector through a matrix.","Transforms a 2D position through matrix.","Transforms a 2D position through matrix.","Transforms a 2D position through row matrix.","Transforms a 2D position through column matrix.","Transforms a 3D position through matrix.","Transforms a 3D position through matrix.","Transforms a 2D vector through matrix.","Transforms a 2D vector through matrix.","Transforms a 2D vector through row matrix.","Transforms a 2D vector through column matrix.","Transforms a 3D vector through matrix.","Transforms a 3D vector through matrix.","Computes the determinant of a matrix.","Computes the determinant of a matrix.","Computes the determinant of a matrix.","Computes the determinant of a matrix.","Computes the determinant of a matrix.","Computes the determinant of a 4x4 matrix.","Computes inverse determinant of a 2x3 matrix.","Computes inverse determinant of a 3x2 matrix.","Computes inverse determinant of a 3x3 matrix.","Computes inverse determinant of a 3x4 matrix.","Computes inverse determinant of a 4x3 matrix.","Computes the inverse determinant of a 4x4 matrix.","Computes the inverse of a 2x3 matrix.","Computes the inverse of a 3x2 matrix.","Computes the inverse of a 3x3 matrix.","Computes the inverse of a 3x4 matrix.","Computes the inverse of a 4x3 matrix.","Computes the inverse of a 4x4 matrix."],"i":[0,0,0,1,0,2,0,3,0,4,0,5,5,5,5,5,0,6,0,7,0,8,0,9,9,9,9,9,9,9,9,9,9,9,9,9,0,10,0,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,[[]],null,[[]],null,[[]],null,[[]],null,[[]],[[]],[[]],[[]],[[]],null,[[]],null,[[]],null,[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],null,[[["f64",15]]],[[["f32",15]]],[[["isize",15]]],[[["u32",15]]],[[["i32",15]]],null,null,null,null,null,null,null,null,null,[[["usize",15],["matrix3x2",6]],["vector2",6]],[[["matrix3",6],["usize",15]],["vector3",6]],[[["usize",15],["matrix4x3",6]],["vector3",6]],[[["matrix4",6],["usize",15]],["vector4",6]],[[["usize",15],["matrix2x3",6]],["vector3",6]],[[["matrix3",6],["usize",15]],["vector3",6]],[[["usize",15],["matrix3x4",6]],["vector4",6]],[[["matrix4",6],["usize",15]],["vector4",6]],[[["matrix3x2",6]],["matrix3x2",6]],[[["matrix3",6]],["matrix3",6]],[[["matrix4x3",6]],["matrix4x3",6]],[[["matrix4",6]],["matrix4",6]],[[["matrix2x3",6]],["matrix2x3",6]],[[["matrix3",6]],["matrix3",6]],[[["matrix3x4",6]],["matrix3x4",6]],[[["matrix4",6]],["matrix4",6]],[[],["matrix2x3",6]],[[],["matrix3x2",6]],[[],["matrix3",6]],[[],["matrix3x4",6]],[[],["matrix4x3",6]],[[],["matrix4",6]],[[["vector2",6]],["vector2",6]],[[["vector3",6]],["vector3",6]],[[["vector4",6]],["vector4",6]],[[["matrix2x3",6]],["matrix2x3",6]],[[["matrix3x2",6]],["matrix3x2",6]],[[["matrix3",6]],["matrix3",6]],[[["matrix3x4",6]],["matrix3x4",6]],[[["matrix4x3",6]],["matrix4x3",6]],[[["matrix4",6]],["matrix4",6]],[[["vector2",6]],["vector2",6]],[[["vector3",6]],["vector3",6]],[[["vector4",6]],["vector4",6]],[[["matrix2x3",6]],["matrix2x3",6]],[[["matrix3x2",6]],["matrix3x2",6]],[[["matrix3",6]],["matrix3",6]],[[["matrix3x4",6]],["matrix3x4",6]],[[["matrix4x3",6]],["matrix4x3",6]],[[["matrix4",6]],["matrix4",6]],[[["vector2",6]],["vector2",6]],[[["vector3",6]],["vector3",6]],[[["vector4",6]],["vector4",6]],[[["matrix2x3",6]],["matrix2x3",6]],[[["matrix3x2",6]],["matrix3x2",6]],[[["matrix3",6]],["matrix3",6]],[[["matrix3x4",6]],["matrix3x4",6]],[[["matrix4x3",6]],["matrix4x3",6]],[[["matrix4",6]],["matrix4",6]],[[["vector2",6]],["vector2",6]],[[["vector3",6]],["vector3",6]],[[["vector4",6]],["vector4",6]],[[["vector2",6]]],[[["vector3",6]]],[[["vector4",6]]],[[["vector2",6]]],[[["vector3",6]]],[[["vector4",6]]],[[["vector2",6]]],[[["vector3",6]],["vector3",6]],[[["vector2",6]],["vector2",6]],[[["vector3",6]],["vector3",6]],[[["vector4",6]],["vector4",6]],[[["vector2",6]],["vector2",6]],[[["vector3",6]],["vector3",6]],[[["vector4",6]],["vector4",6]],[[["vector2",6]]],[[["vector3",6]]],[[["vector4",6]]],[[["vector2",6]]],[[["vector3",6]]],[[["vector4",6]]],[[["vector2",6]],["vector2",6]],[[["vector3",6]],["vector3",6]],[[["vector4",6]],["vector4",6]],[[["vector2",6]],["vector2",6]],[[["vector3",6]],["vector3",6]],[[["vector4",6]],["vector4",6]],[[["vector2",6],["vector3",6]]],[[["vector4",6],["vector3",6]]],[[["vector2",6],["vector3",6]]],[[["vector4",6],["vector3",6]]],[[["copy",8],["matrix2x3",6],["usize",15]],[["vector2",6],["copy",8]]],[[["copy",8],["matrix2x3",6],["usize",15]],[["vector2",6],["copy",8]]],[[["copy",8],["usize",15],["matrix3x2",6]],[["copy",8],["vector3",6]]],[[["copy",8],["usize",15],["matrix3x2",6]],[["copy",8],["vector3",6]]],[[["matrix3",6],["copy",8],["usize",15]],[["copy",8],["vector3",6]]],[[["matrix3",6],["copy",8],["usize",15]],[["copy",8],["vector3",6]]],[[["copy",8],["matrix3x4",6],["usize",15]],[["copy",8],["vector3",6]]],[[["copy",8],["matrix3x4",6],["usize",15]],[["copy",8],["vector3",6]]],[[["copy",8],["usize",15],["matrix4x3",6]],[["copy",8],["vector4",6]]],[[["copy",8],["usize",15],["matrix4x3",6]],[["copy",8],["vector4",6]]],[[["matrix4",6],["copy",8],["usize",15]],[["copy",8],["vector4",6]]],[[["matrix4",6],["copy",8],["usize",15]],[["copy",8],["vector4",6]]],[[["copy",8],["matrix2x3",6]],[["copy",8],["matrix3x2",6]]],[[["copy",8],["matrix3x2",6]],[["copy",8],["matrix2x3",6]]],[[["matrix3",6],["copy",8]],[["matrix3",6],["copy",8]]],[[["copy",8],["matrix3x4",6]],[["copy",8],["matrix4x3",6]]],[[["copy",8],["matrix4x3",6]],[["copy",8],["matrix3x4",6]]],[[["matrix4",6],["copy",8]],[["matrix4",6],["copy",8]]],[[["matrix3",6],["vector3",6]],["vector3",6]],[[["matrix4",6],["vector4",6]],["vector4",6]],[[["matrix3",6],["vector3",6]],["vector3",6]],[[["matrix4",6],["vector4",6]],["vector4",6]],[[["vector2",6],["matrix2x3",6]],["vector2",6]],[[["vector2",6],["matrix3x2",6]],["vector2",6]],[[["matrix3",6],["vector2",6]],["vector2",6]],[[["matrix3",6],["vector2",6]],["vector2",6]],[[["matrix3x4",6],["vector3",6]],["vector3",6]],[[["matrix4x3",6],["vector3",6]],["vector3",6]],[[["vector2",6],["matrix2x3",6]],["vector2",6]],[[["vector2",6],["matrix3x2",6]],["vector2",6]],[[["matrix3",6],["vector2",6]],["vector2",6]],[[["matrix3",6],["vector2",6]],["vector2",6]],[[["matrix3x4",6],["vector3",6]],["vector3",6]],[[["matrix4x3",6],["vector3",6]],["vector3",6]],[[["matrix2x3",6]]],[[["matrix3x2",6]]],[[["matrix3",6]]],[[["matrix3x4",6]]],[[["matrix4x3",6]]],[[["matrix4",6]]],[[["matrix2x3",6]]],[[["matrix3x2",6]]],[[["matrix3",6]]],[[["matrix3x4",6]]],[[["matrix4x3",6]]],[[["matrix4",6]]],[[["matrix2x3",6]],["matrix2x3",6]],[[["matrix3x2",6]],["matrix3x2",6]],[[["matrix3",6]],["matrix3",6]],[[["matrix3x4",6]],["matrix3x4",6]],[[["matrix4x3",6]],["matrix4x3",6]],[[["matrix4",6]],["matrix4",6]]],"p":[[8,"Min"],[8,"Max"],[8,"Signum"],[8,"Powf"],[8,"Radians"],[8,"One"],[8,"Zero"],[8,"Sqrt"],[8,"Trig"],[8,"Cast"],[8,"FromPrimitive"]]},\
"viewport":{"doc":"A library for storing viewport information","t":[3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Viewport","rect","draw_size","window_size","abs_transform","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","clone","eq","ne","fmt"],"q":["viewport","","","","","","","","","","","","","","","","",""],"d":["Stores viewport information.","Viewport in pixels. <code>[x, y, width height]</code> where <code>(x, y)</code> is …","The size of frame buffer in pixels.","The size of window in points.","Computes absolute transform for 2D graphics, which uses a …","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["viewport",3]],[[["viewport",3]],["bool",15]],[[["viewport",3]],["bool",15]],[[["formatter",3]],["result",6]]],"p":[[3,"Viewport"]]},\
"window":{"doc":"Window storage and interfacing traits.","t":[3,6,3,12,12,3,12,12,8,10,8,10,10,10,10,10,10,10,10,8,10,10,11,10,10,11,10,11,10,10,10,10,10,11,8,10,10,10,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["NoWindow","ProcAddress","Size","width","height","Position","x","y","BuildFromWindowSettings","build_from_window_settings","Window","set_should_close","should_close","size","swap_buffers","wait_event","wait_event_timeout","poll_event","draw_size","AdvancedWindow","get_title","set_title","title","get_exit_on_esc","set_exit_on_esc","exit_on_esc","set_capture_cursor","capture_cursor","show","hide","get_position","set_position","set_size","position","OpenGLWindow","get_proc_address","is_current","make_current","WindowSettings","new","build","get_title","set_title","title","get_size","set_size","size","get_fullscreen","set_fullscreen","fullscreen","get_exit_on_esc","set_exit_on_esc","exit_on_esc","get_samples","set_samples","samples","get_vsync","set_vsync","vsync","get_maybe_opengl","set_maybe_opengl","maybe_opengl","set_opengl","opengl","get_srgb","set_srgb","srgb","get_resizable","set_resizable","resizable","get_decorated","set_decorated","decorated","get_controllers","set_controllers","controllers","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","build_from_window_settings","should_close","set_should_close","size","swap_buffers","wait_event","wait_event_timeout","poll_event","draw_size","get_title","set_title","get_exit_on_esc","set_exit_on_esc","set_capture_cursor","show","hide","get_position","set_position","set_size","from","from","from","from","from","from","clone","clone","clone","eq","ne","eq","ne","fmt","fmt","new"],"q":["window","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A window without user interface, often used in server …","The type of an OpenGL function address.","Structure to store the window size.","The width.","The height.","Structure to store the window position.","The x coordinate.","The y coordinate.","Constructs a window from a <code>WindowSettings</code> object.","Builds the window from a <code>WindowSettings</code> object.","Trait representing the minimum requirements for defining …","Tells the window to close or stay open.","Returns true if the window should close.","Gets the size of the window.","Swaps render buffers.","Wait indefinitely for an input event to be available from …","Wait for an input event to be available from the window …","Polls an input event from the window.","Gets the draw size of the window.","Trait representing a window with the most features that …","Gets a copy of the title of the window.","Sets the title of the window.","Sets title on window.","Gets whether to exit when pressing esc.","Sets whether to exit when pressing esc.","Sets whether to exit when pressing the Esc button.","Sets whether to capture/grab the cursor.","Sets whether to capture/grab the cursor.","Shows the window.","Hides the window.","Gets the position of window.","Sets the position of window.","Sets the window size.","Sets the position of window.","Trait for OpenGL specific operations on a window.","Returns the address of the specified OpenGL function if …","Returns true if this window’s gl context is the current …","Make the window’s gl context the current gl context.","Settings structure for window behavior.","Creates window settings with defaults.","Builds window from the given settings.","Gets the title of built windows.","Sets the title of built windows.","Sets the title of built windows.","Gets the size of built windows.","Sets the size of built windows.","Sets the size of built windows.","Gets whether built windows will be fullscreen.","Sets whether built windows will be fullscreen.","Sets whether built windows will be fullscreen.","Gets whether built windows should exit when the Esc key …","Sets whether built windows should exit when the Esc key …","Sets whether built windows should exit when the Esc key …","Gets the number of samples to use for anti-aliasing.","Sets the number of samples to use for anti-aliasing.","Sets the number of samples to use for anti-aliasing.","Gets whether built windows should use vsync.","Sets whether built windows should use vsync.","Sets whether built windows should use vsync.","Gets the OpenGL version of built windows.","Sets OpenGL version of built windows.","Sets OpenGL version of built windows.","Sets OpenGL version of built windows.","Sets the OpenGL version of built windows.","Gets whether built windows should use hardware …","Sets whether built windows should use hardware …","Sets whether built windows should use hardware …","Gets whether built windows should be resizable.","Sets whether built windows should be resizable.","Sets whether built windows should be resizable.","Gets whether built windows should be decorated.","Sets whether built windows should be decorated.","Sets whether built windows should be decorated.","Gets whether built windows should listen to controller …","Sets whether built windows should listen to controller …","Sets whether build windows should listen to controller …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>NoWindow</code>."],"i":[0,0,0,1,1,0,2,2,0,3,0,4,4,4,4,4,4,4,4,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,6,6,6,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,1,1,1,1,2,2,1,2,7,1,1,2,2,1,2,8],"f":[null,null,null,null,null,null,null,null,null,[[["windowsettings",3]],[["result",4],["string",3]]],null,[[["bool",15]]],[[],["bool",15]],[[],["size",3]],[[]],[[],["input",4]],[[["duration",3]],[["option",4],["input",4]]],[[],[["option",4],["input",4]]],[[],["size",3]],null,[[],["string",3]],[[["string",3]]],[[["string",3]]],[[],["bool",15]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[]],[[]],[[],[["option",4],["position",3]]],[[["position",3],["into",8]]],[[["size",3],["into",8]]],[[["position",3],["into",8]]],null,[[["str",15]],["procaddress",6]],[[],["bool",15]],[[]],null,[[["into",8],["size",3],["into",8],["string",3]],["windowsettings",3]],[[],[["result",4],["string",3],["buildfromwindowsettings",8]]],[[],["string",3]],[[["string",3]]],[[["string",3]]],[[],["size",3]],[[["size",3]]],[[["size",3]]],[[],["bool",15]],[[["bool",15]]],[[["bool",15]]],[[],["bool",15]],[[["bool",15]]],[[["bool",15]]],[[],["u8",15]],[[["u8",15]]],[[["u8",15]]],[[],["bool",15]],[[["bool",15]]],[[["bool",15]]],[[],[["option",4],["opengl",4]]],[[["option",4],["opengl",4]]],[[["option",4],["opengl",4]]],[[["opengl",4]]],[[["opengl",4]]],[[],["bool",15]],[[["bool",15]]],[[["bool",15]]],[[],["bool",15]],[[["bool",15]]],[[["bool",15]]],[[],["bool",15]],[[["bool",15]]],[[["bool",15]]],[[],["bool",15]],[[["bool",15]]],[[["bool",15]]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["windowsettings",3]],[["result",4],["string",3]]],[[],["bool",15]],[[["bool",15]]],[[],["size",3]],[[]],[[],["input",4]],[[["duration",3]],[["option",4],["input",4]]],[[],[["option",4],["input",4]]],[[],["size",3]],[[],["string",3]],[[["string",3]]],[[],["bool",15]],[[["bool",15]]],[[["bool",15]]],[[]],[[]],[[],[["option",4],["position",3]]],[[["position",3],["into",8]]],[[["size",3],["into",8]]],[[],["size",3]],[[],["size",3]],[[],["size",3]],[[],["size",3]],[[],["position",3]],[[],["position",3]],[[],["size",3]],[[],["position",3]],[[],["windowsettings",3]],[[["size",3]],["bool",15]],[[["size",3]],["bool",15]],[[["position",3]],["bool",15]],[[["position",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["windowsettings",3]],["nowindow",3]]],"p":[[3,"Size"],[3,"Position"],[8,"BuildFromWindowSettings"],[8,"Window"],[8,"AdvancedWindow"],[8,"OpenGLWindow"],[3,"WindowSettings"],[3,"NoWindow"]]}\
}');
initSearch(searchIndex);